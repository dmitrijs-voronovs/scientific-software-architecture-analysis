id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/4850:148,integrability,version,version,148,"The question is rather whether we want to _stop_ supporting it. I realize that it's not a very useful feature, but why change the behavior from one version to the other if we don't have to? > then it looks uglier than before. It's just an extra `||`. Even if we want to disable filling histograms with std::strings, that will require extra code (e.g. an extra template specialization). With this said, I would accept either solution. Let's try to fix the original bug without expanding the scope of this PR further though :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:148,modifiability,version,version,148,"The question is rather whether we want to _stop_ supporting it. I realize that it's not a very useful feature, but why change the behavior from one version to the other if we don't have to? > then it looks uglier than before. It's just an extra `||`. Even if we want to disable filling histograms with std::strings, that will require extra code (e.g. an extra template specialization). With this said, I would accept either solution. Let's try to fix the original bug without expanding the scope of this PR further though :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:49,usability,support,supporting,49,"The question is rather whether we want to _stop_ supporting it. I realize that it's not a very useful feature, but why change the behavior from one version to the other if we don't have to? > then it looks uglier than before. It's just an extra `||`. Even if we want to disable filling histograms with std::strings, that will require extra code (e.g. an extra template specialization). With this said, I would accept either solution. Let's try to fix the original bug without expanding the scope of this PR further though :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:130,usability,behavi,behavior,130,"The question is rather whether we want to _stop_ supporting it. I realize that it's not a very useful feature, but why change the behavior from one version to the other if we don't have to? > then it looks uglier than before. It's just an extra `||`. Even if we want to disable filling histograms with std::strings, that will require extra code (e.g. an extra template specialization). With this said, I would accept either solution. Let's try to fix the original bug without expanding the scope of this PR further though :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:75,availability,state,state,75,"I know, I'm overthinking the issue. Though, don't want to leave in a worse state than before :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:75,integrability,state,state,75,"I know, I'm overthinking the issue. Though, don't want to leave in a worse state than before :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:35,safety,test,tests,35,"So, now it's done. Even added some tests for the `ValueType` thingy because it has so many corner cases :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:35,testability,test,tests,35,"So, now it's done. Even added some tests for the `ValueType` thingy because it has so many corner cases :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:16,safety,review,review,16,I'll do a final review ~tomorrow ok?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:16,testability,review,review,16,I'll do a final review ~tomorrow ok?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:53,deployability,fail,failed,53,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:43,integrability,interfac,interface,43,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:16,interoperability,conflict,conflicts,16,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:43,interoperability,interfac,interface,43,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:43,modifiability,interfac,interface,43,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:53,reliability,fail,failed,53,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:74,deployability,fail,failed,74,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:64,integrability,interfac,interface,64,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:35,interoperability,conflict,conflicts,35,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:64,interoperability,interfac,interface,64,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:126,interoperability,conflict,conflicts,126,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:64,modifiability,interfac,interface,64,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:74,reliability,fail,failed,74,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:197,safety,review,review,197,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:197,testability,review,review,197,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4850:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4850
https://github.com/root-project/root/pull/4851:24,integrability,sub,submit,24,"@Axel-Naumann, should I submit fix for 6.20 branch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4851
https://github.com/root-project/root/pull/4854:46,deployability,continu,continue,46,"Changes are moderate, I apply them to be able continue with #4874",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4854
https://github.com/root-project/root/pull/4855:13,integrability,rout,routine,13,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:104,integrability,interfac,interface,104,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:104,interoperability,interfac,interface,104,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:104,modifiability,interfac,interface,104,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:76,security,modif,modifications,76,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:225,availability,state,statement,225,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:26,deployability,instal,installed,26,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:225,integrability,state,statement,225,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:43,safety,test,test,43,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:108,safety,test,test,108,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:43,testability,test,test,43,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:108,testability,test,test,108,"> Requires that chrome is installed on all test machines. I don't want to *require* Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:167,availability,state,statement,167,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:250,deployability,fail,fail,250,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:167,integrability,state,statement,167,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:213,integrability,batch,batch,213,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:213,performance,batch,batch,213,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:250,reliability,fail,fail,250,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:50,safety,test,test,50,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:50,testability,test,test,50,"> I don't want to require Chrome for ROOT, so the test (and ROOT) must survive also without. Would that be possible? Or is it already the case and I just misread your statement? Without chrome browser any kind of batch root7 graphics generation will fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:26,deployability,version,version,26,I just checked - also Mac version works as designed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:26,integrability,version,version,26,I just checked - also Mac version works as designed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4855:26,modifiability,version,version,26,I just checked - also Mac version works as designed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4855
https://github.com/root-project/root/pull/4856:18,performance,memor,memory,18,Why does it fix a memory leak? Is the problem in ExpandPathName or is it GetDirEntry?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4856
https://github.com/root-project/root/pull/4856:4,reliability,doe,does,4,Why does it fix a memory leak? Is the problem in ExpandPathName or is it GetDirEntry?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4856
https://github.com/root-project/root/pull/4856:18,usability,memor,memory,18,Why does it fix a memory leak? Is the problem in ExpandPathName or is it GetDirEntry?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4856
https://github.com/root-project/root/pull/4856:91,deployability,releas,released,91,"It is problem with return value of gSystem->ExpandPathName(). It is `char *` and should be released. I guess, long time ago it was not a case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4856
https://github.com/root-project/root/pull/4856:115,performance,time,time,115,"It is problem with return value of gSystem->ExpandPathName(). It is `char *` and should be released. I guess, long time ago it was not a case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4856
https://github.com/root-project/root/pull/4857:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4857
https://github.com/root-project/root/pull/4858:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4858
https://github.com/root-project/root/pull/4864:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4864
https://github.com/root-project/root/pull/4864:14,availability,failur,failures,14,@Axel-Naumann failures are not related please let me know if it works for you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4864
https://github.com/root-project/root/pull/4864:14,deployability,fail,failures,14,@Axel-Naumann failures are not related please let me know if it works for you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4864
https://github.com/root-project/root/pull/4864:14,performance,failur,failures,14,@Axel-Naumann failures are not related please let me know if it works for you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4864
https://github.com/root-project/root/pull/4864:14,reliability,fail,failures,14,@Axel-Naumann failures are not related please let me know if it works for you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4864
https://github.com/root-project/root/pull/4865:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4865
https://github.com/root-project/root/pull/4868:17,testability,understand,understand,17,Hi @vgvassilev I understand this means that the following call from cppyy (which we also have in experimental PyROOT):. https://bitbucket.org/wlav/cppyy/src/5974c1e24cb91daa6f6a4991e7f2333ce0aa360d/python/cppyy/__init__.py#lines-80. will need to be removed? @wlav you might be interested in this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4868
https://github.com/root-project/root/pull/4869:12,reliability,pra,pragma,12,"Bertrand, `#pragma GCC diagnostic push` also works with clang compiler. One should disable only windows part here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:23,reliability,diagno,diagnostic,23,"Bertrand, `#pragma GCC diagnostic push` also works with clang compiler. One should disable only windows part here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:23,testability,diagno,diagnostic,23,"Bertrand, `#pragma GCC diagnostic push` also works with clang compiler. One should disable only windows part here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:55,performance,time,time,55,"I copied the way it is elsewhere in the code (and last time I put `#ifndef _MSC_VER`, someone told me it was not the right way...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:3,deployability,depend,depends,3,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:3,integrability,depend,depends,3,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:3,modifiability,depend,depends,3,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:90,reliability,pra,pragma,90,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:3,safety,depend,depends,3,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:3,testability,depend,depends,3,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:85,reliability,pra,pragma,85,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:96,reliability,diagno,diagnostic,96,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:114,reliability,pra,pragma,114,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:125,reliability,diagno,diagnostic,125,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:169,reliability,pra,pragma,169,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:180,reliability,diagno,diagnostic,180,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:96,testability,diagno,diagnostic,96,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:125,testability,diagno,diagnostic,125,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:180,testability,diagno,diagnostic,180,"Please look in the code, there are many examples like:. ```. #if defined(__GNUC__). #pragma GCC diagnostic push. #pragma GCC diagnostic ignored ""-Woverloaded-virtual"". #pragma GCC diagnostic ignored ""-Wshadow"". #endif. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:151,reliability,pra,pragmas,151,"> ...and clang knows __GNUC__. Are you sure? Typically __GNUC__ macro used to detect GCC compiler. Finally, in this particular case one can remove all pragmas anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:78,safety,detect,detect,78,"> ...and clang knows __GNUC__. Are you sure? Typically __GNUC__ macro used to detect GCC compiler. Finally, in this particular case one can remove all pragmas anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:78,security,detect,detect,78,"> ...and clang knows __GNUC__. Are you sure? Typically __GNUC__ macro used to detect GCC compiler. Finally, in this particular case one can remove all pragmas anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:49,safety,detect,detect,49,> Are you sure? Typically **GNUC** macro used to detect GCC compiler. Axel just tried (he told me it is just fine),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4869:49,security,detect,detect,49,> Are you sure? Typically **GNUC** macro used to detect GCC compiler. Axel just tried (he told me it is just fine),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4869
https://github.com/root-project/root/pull/4873:0,availability,Failur,Failures,0,Failures are unrelated. This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4873
https://github.com/root-project/root/pull/4873:0,deployability,Fail,Failures,0,Failures are unrelated. This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4873
https://github.com/root-project/root/pull/4873:0,performance,Failur,Failures,0,Failures are unrelated. This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4873
https://github.com/root-project/root/pull/4873:0,reliability,Fail,Failures,0,Failures are unrelated. This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4873
https://github.com/root-project/root/pull/4874:119,performance,memor,memory-leak,119,"@Axel-Naumann @bellenot . Are you agree with proposed changes? If yes, I will polish PR and merge it - after all other memory-leak PRs are merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:119,usability,memor,memory-leak,119,"@Axel-Naumann @bellenot . Are you agree with proposed changes? If yes, I will polish PR and merge it - after all other memory-leak PRs are merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:39,modifiability,concern,concerning,39,I rebase code to sync with other fixes concerning gSystem usage.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:39,testability,concern,concerning,39,I rebase code to sync with other fixes concerning gSystem usage.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:202,performance,memor,memory,202,About usage of `std::string_view`. . Lets do it step by step. . First replace all unsafe methods with alternatives which returns TString - this is most problematic point now and where we have plenty of memory leaks. And then check if we want to go further and switch to `std::string` and `std::string_view` classes. But this is much bigger intervention in the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:82,safety,unsaf,unsafe,82,About usage of `std::string_view`. . Lets do it step by step. . First replace all unsafe methods with alternatives which returns TString - this is most problematic point now and where we have plenty of memory leaks. And then check if we want to go further and switch to `std::string` and `std::string_view` classes. But this is much bigger intervention in the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:202,usability,memor,memory,202,About usage of `std::string_view`. . Lets do it step by step. . First replace all unsafe methods with alternatives which returns TString - this is most problematic point now and where we have plenty of memory leaks. And then check if we want to go further and switch to `std::string` and `std::string_view` classes. But this is much bigger intervention in the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:209,safety,avoid,avoid,209,"> And then check if we want to go further and switch to std::string. I don't mean switch from TString to std::string, I meant just switching from const char* arguments type to std::string_view which allows to avoid having to call c_str() or Data().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:9,safety,except,except,9,"and yes (except for the new functions), it should be on its own PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:200,interoperability,convers,conversion,200,"> I don't mean switch from TString to std::string, I meant just switching from const char* arguments type to std::string_view which allows to avoid having to call c_str() or Data(). There is implicit conversion from `TString` to `std::string_view`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:142,safety,avoid,avoid,142,"> I don't mean switch from TString to std::string, I meant just switching from const char* arguments type to std::string_view which allows to avoid having to call c_str() or Data(). There is implicit conversion from `TString` to `std::string_view`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4874:20,interoperability,convers,conversion,20,> There is implicit conversion from TString to std::string_view? Yes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4874
https://github.com/root-project/root/pull/4877:11,deployability,build,build,11,@phsft-bot build windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4877
https://github.com/root-project/root/pull/4877:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4877
https://github.com/root-project/root/pull/4879:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4879:59,safety,review,review,59,> @bluehood You think this is good to go? As per my second review comment: is the comment that I report below hovering over the correct line? ```c++. // Accessing the information like this ensures that we get the correct. // filenames and treenames if the treename is given as part of the filename. // via chain.AddFile(file.root/myTree). ```. I thought it referred to this trick:. ```c++. static_cast<TChain*>(frTree)->GetListOfFiles()->First()->GetName();. ```. but instead it's put over this line:. ```c++. for (auto f : *chainFiles) {. fileNames.emplace_back(f->GetTitle());. ```. _but this line was already there before your commit_. EDIT:. sorry about the nitpicking but it's a very tricky piece of code and we need to get it right and document it right for posterity :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4879:153,security,Access,Accessing,153,> @bluehood You think this is good to go? As per my second review comment: is the comment that I report below hovering over the correct line? ```c++. // Accessing the information like this ensures that we get the correct. // filenames and treenames if the treename is given as part of the filename. // via chain.AddFile(file.root/myTree). ```. I thought it referred to this trick:. ```c++. static_cast<TChain*>(frTree)->GetListOfFiles()->First()->GetName();. ```. but instead it's put over this line:. ```c++. for (auto f : *chainFiles) {. fileNames.emplace_back(f->GetTitle());. ```. _but this line was already there before your commit_. EDIT:. sorry about the nitpicking but it's a very tricky piece of code and we need to get it right and document it right for posterity :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4879:59,testability,review,review,59,> @bluehood You think this is good to go? As per my second review comment: is the comment that I report below hovering over the correct line? ```c++. // Accessing the information like this ensures that we get the correct. // filenames and treenames if the treename is given as part of the filename. // via chain.AddFile(file.root/myTree). ```. I thought it referred to this trick:. ```c++. static_cast<TChain*>(frTree)->GetListOfFiles()->First()->GetName();. ```. but instead it's put over this line:. ```c++. for (auto f : *chainFiles) {. fileNames.emplace_back(f->GetTitle());. ```. _but this line was already there before your commit_. EDIT:. sorry about the nitpicking but it's a very tricky piece of code and we need to get it right and document it right for posterity :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4879:742,usability,document,document,742,> @bluehood You think this is good to go? As per my second review comment: is the comment that I report below hovering over the correct line? ```c++. // Accessing the information like this ensures that we get the correct. // filenames and treenames if the treename is given as part of the filename. // via chain.AddFile(file.root/myTree). ```. I thought it referred to this trick:. ```c++. static_cast<TChain*>(frTree)->GetListOfFiles()->First()->GetName();. ```. but instead it's put over this line:. ```c++. for (auto f : *chainFiles) {. fileNames.emplace_back(f->GetTitle());. ```. _but this line was already there before your commit_. EDIT:. sorry about the nitpicking but it's a very tricky piece of code and we need to get it right and document it right for posterity :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4879:289,security,Access,Accessing,289,"No need to be sorry for being correct :). So, I've put the following comment at the beginning of the `if(isChain)` section:. ```cpp. // Note that each TChainElement returned by chain.GetListOfFiles has a name. // equal to the tree name of this TChain and a title equal to the filename. // Accessing the information like this ensures that we get the correct. // filenames and treenames if the treename is given as part of the filename. // via chain.AddFile(file.root/myTree) and as well if the tree name is given. // in the constructor via TChain(myTree) and a file is added later by chain.AddFile(file.root). ```. @bluehood Do you think this is explicit enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4879
https://github.com/root-project/root/pull/4880:0,availability,Failur,Failure,0,Failure has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4880
https://github.com/root-project/root/pull/4880:0,deployability,Fail,Failure,0,Failure has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4880
https://github.com/root-project/root/pull/4880:0,performance,Failur,Failure,0,Failure has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4880
https://github.com/root-project/root/pull/4880:0,reliability,Fail,Failure,0,Failure has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4880
https://github.com/root-project/root/pull/4881:66,performance,memor,memory,66,"Bertrand, in many places in GUI classes where StrDup is used - is memory leak. https://github.com/root-project/root/blob/master/gui/gui/src/TGFileBrowser.cxx#L1795. Most of places in https://github.com/root-project/root/blob/master/gui/ged/src/TStyleManager.cxx. Many problems arise from TGFileInfo class, where many fields are `char *` and should be deleted at the end. But in the code never checked when new value is assigned - if old value should be deleted. I propose to add several setter methods - just to clarify ownership in the ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4881
https://github.com/root-project/root/pull/4881:66,usability,memor,memory,66,"Bertrand, in many places in GUI classes where StrDup is used - is memory leak. https://github.com/root-project/root/blob/master/gui/gui/src/TGFileBrowser.cxx#L1795. Most of places in https://github.com/root-project/root/blob/master/gui/ged/src/TStyleManager.cxx. Many problems arise from TGFileInfo class, where many fields are `char *` and should be deleted at the end. But in the code never checked when new value is assigned - if old value should be deleted. I propose to add several setter methods - just to clarify ownership in the ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4881
https://github.com/root-project/root/pull/4882:8,deployability,fail,failed,8,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4882:40,deployability,log,log,40,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4882:8,reliability,fail,failed,8,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4882:40,safety,log,log,40,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4882:40,security,log,log,40,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4882:40,testability,log,log,40,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4882
https://github.com/root-project/root/pull/4883:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora27/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4883
https://github.com/root-project/root/pull/4884:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4884
https://github.com/root-project/root/pull/4884:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4884
https://github.com/root-project/root/pull/4884:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4884
https://github.com/root-project/root/pull/4884:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4884
https://github.com/root-project/root/pull/4887:0,deployability,Fail,Failing,0,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:55,deployability,updat,update,55,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:0,reliability,Fail,Failing,0,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:8,safety,test,test,8,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:55,safety,updat,update,55,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:62,safety,test,test,62,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:55,security,updat,update,55,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:8,testability,test,test,8,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4887:62,testability,test,test,62,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4887
https://github.com/root-project/root/pull/4888:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:41,deployability,fail,failing,41,@gganis Could you check why the test are failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:41,reliability,fail,failing,41,@gganis Could you check why the test are failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:32,safety,test,test,32,@gganis Could you check why the test are failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:32,testability,test,test,32,@gganis Could you check why the test are failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:70,safety,test,tests,70,"@pcanal ""file:"" was prepended for local files. Now the 'tree' related tests on my machine are all successful. Let's see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:70,testability,test,tests,70,"@pcanal ""file:"" was prepended for local files. Now the 'tree' related tests on my machine are all successful. Let's see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:21,availability,failur,failure,21,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:90,availability,failur,failure,90,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:21,deployability,fail,failure,21,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:68,deployability,patch,patch,68,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:90,deployability,fail,failure,90,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:21,performance,failur,failure,21,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:90,performance,failur,failure,90,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:107,performance,concurren,concurrency,107,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:21,reliability,fail,failure,21,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:90,reliability,fail,failure,90,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:68,safety,patch,patch,68,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:68,security,patch,patch,68,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:45,deployability,build,build,45,@gganis please fork also roottest to fix the build time-out on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4888:51,performance,time,time-out,51,@gganis please fork also roottest to fix the build time-out on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4888
https://github.com/root-project/root/pull/4889:76,deployability,log,logic,76,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:19,performance,memor,memory,19,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:76,safety,log,logic,76,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:76,security,log,logic,76,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:76,testability,log,logic,76,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:19,usability,memor,memory,19,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4889:215,usability,close,close,215,"I did not find any memory leaks with `gSystem->Which()` calls. . While code logic around `gSystem->FindFile()` differs from `gSystem->Which()` much, it is dangerous to replace all of them in ~50 different places. I close PR, we could return back to it later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4889
https://github.com/root-project/root/pull/4890:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4890
https://github.com/root-project/root/pull/4892:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4892
https://github.com/root-project/root/pull/4893:0,availability,Failur,Failures,0,Failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:0,deployability,Fail,Failures,0,Failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:0,performance,Failur,Failures,0,Failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:0,reliability,Fail,Failures,0,Failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4895:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4895
https://github.com/root-project/root/pull/4897:22,integrability,repositor,repository,22,How about fixing this repository? https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. Should I create independent PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:22,interoperability,repositor,repository,22,How about fixing this repository? https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. Should I create independent PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:94,interoperability,Platform,PlatformWin,94,How about fixing this repository? https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. Should I create independent PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:24,integrability,repositor,repository,24,"> How about fixing this repository? > . > https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. > . > Should I create independent PR? They are somehow synchronized, @Axel-Naumann knows exactly how it works",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:24,interoperability,repositor,repository,24,"> How about fixing this repository? > . > https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. > . > Should I create independent PR? They are somehow synchronized, @Axel-Naumann knows exactly how it works",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:102,interoperability,Platform,PlatformWin,102,"> How about fixing this repository? > . > https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. > . > Should I create independent PR? They are somehow synchronized, @Axel-Naumann knows exactly how it works",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:174,performance,synch,synchronized,174,"> How about fixing this repository? > . > https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp. > . > Should I create independent PR? They are somehow synchronized, @Axel-Naumann knows exactly how it works",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:54,deployability,automat,automatically,54,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:31,integrability,repositor,repository,31,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:92,integrability,repositor,repository,92,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:31,interoperability,repositor,repository,31,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:92,interoperability,repositor,repository,92,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:54,testability,automat,automatically,54,"Once this is merge in the ROOT repository, it will be automatically propagated to the cling repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4898:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4898
https://github.com/root-project/root/pull/4898:0,deployability,Fail,Failing,0,Failing tests has nothing to do with PR - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4898
https://github.com/root-project/root/pull/4898:0,reliability,Fail,Failing,0,Failing tests has nothing to do with PR - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4898
https://github.com/root-project/root/pull/4898:8,safety,test,tests,8,Failing tests has nothing to do with PR - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4898
https://github.com/root-project/root/pull/4898:8,testability,test,tests,8,Failing tests has nothing to do with PR - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4898
https://github.com/root-project/root/pull/4911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4911
https://github.com/root-project/root/pull/4913:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:138,availability,failur,failures,138,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:90,deployability,fail,failing,90,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:138,deployability,fail,failures,138,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:104,integrability,coupl,couple,104,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:104,modifiability,coupl,couple,104,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:138,performance,failur,failures,138,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:90,reliability,fail,failing,90,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:138,reliability,fail,failures,138,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:104,testability,coupl,couple,104,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. The previous run is reported as failing but a couple of arbitrary check show no failures :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:58,availability,failur,failures,58,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:614,availability,failur,failure,614,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:700,availability,error,error,700,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:43,deployability,log,logs,43,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:58,deployability,fail,failures,58,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:100,deployability,Releas,Release,100,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:109,deployability,Fail,Failed,109,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:142,deployability,Releas,Release,142,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:175,deployability,Releas,Release,175,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:184,deployability,Fail,Failed,184,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:215,deployability,Releas,Release,215,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:262,deployability,Releas,Release,262,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:271,deployability,Fail,Failed,271,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:316,deployability,Releas,Release,316,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:361,deployability,log,logs,361,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:404,deployability,fail,failing,404,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:614,deployability,fail,failure,614,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:58,performance,failur,failures,58,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:614,performance,failur,failure,614,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:700,performance,error,error,700,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:58,reliability,fail,failures,58,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:109,reliability,Fail,Failed,109,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:184,reliability,Fail,Failed,184,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:271,reliability,Fail,Failed,271,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:404,reliability,fail,failing,404,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:614,reliability,fail,failure,614,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:43,safety,log,logs,43,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:361,safety,log,logs,361,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:609,safety,Test,Test,609,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:700,safety,error,error,700,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:43,security,log,logs,43,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:361,security,log,logs,361,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:43,testability,log,logs,43,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:361,testability,log,logs,361,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:609,testability,Test,Test,609,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:700,usability,error,error,700,jenkins/github is still weird. The jenkins logs reports 3 failures:. ```. 23:30:45 [windows10-cxx14-Release] Failed in branch windows10-cxx14-Release. 23:30:45 [mac1014-cxx17-Release] Failed in branch mac1014-cxx17-Release. 23:30:45 [ROOT-ubuntu18.04-i386-cxx14-Release] Failed in branch ROOT-ubuntu18.04-i386-cxx14-Release. ```. Opening the Windows and Ubuntu logs shows success .... while the MacOS is failing due to:. ```. projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test. ... +++ Processing the H1 dataset with a lambda .................................. OK . checkH1 >>> Test failure: 'hdmd' histo: wrong number of entries (6880: expected 7525) . ```. So a real error but unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4916:11,deployability,build,build,11,@phsft-bot build with flags pyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4916
https://github.com/root-project/root/pull/4916:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4916
https://github.com/root-project/root/pull/4917:168,integrability,messag,message,168,"@Falcort . One should decide on the server side if run or not run macro. List of extensions you provide can be incomplete. One can send ""execution flag"" with `DBLCLK:` message and let process it on server side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:168,interoperability,messag,message,168,"@Falcort . One should decide on the server side if run or not run macro. List of extensions you provide can be incomplete. One can send ""execution flag"" with `DBLCLK:` message and let process it on server side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:81,modifiability,extens,extensions,81,"@Falcort . One should decide on the server side if run or not run macro. List of extensions you provide can be incomplete. One can send ""execution flag"" with `DBLCLK:` message and let process it on server side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:24,testability,verif,verification,24,"@linev I have moved the verification to C++, I for now only put C and C++ file execution, but it is now easy to add more. Can you have a look again to my PR please ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:84,energy efficiency,draw,draw,84,"Now is better! Last comment - if execution mode is specified, one should not try to draw something. Just do return after extensions are verified",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:51,interoperability,specif,specified,51,"Now is better! Last comment - if execution mode is specified, one should not try to draw something. Just do return after extensions are verified",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:121,modifiability,extens,extensions,121,"Now is better! Last comment - if execution mode is specified, one should not try to draw something. Just do return after extensions are verified",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:136,testability,verif,verified,136,"Now is better! Last comment - if execution mode is specified, one should not try to draw something. Just do return after extensions are verified",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:15,safety,compl,completely,15,"Oh yes you are completely true, i am changing that !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:15,security,compl,completely,15,"Oh yes you are completely true, i am changing that !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:75,reliability,doe,doesn,75,I confirm that the macro execution (with the `run` button from the editor) doesn't work on Windows anymore. I'll fix it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4917:2,usability,confirm,confirm,2,I confirm that the macro execution (with the `run` button from the editor) doesn't work on Windows anymore. I'll fix it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4917
https://github.com/root-project/root/pull/4919:16,availability,failur,failures,16,"@lmoneta, sorry failures are not connected to your changes, it is coming from the new 32b node (I disabled it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4919
https://github.com/root-project/root/pull/4919:16,deployability,fail,failures,16,"@lmoneta, sorry failures are not connected to your changes, it is coming from the new 32b node (I disabled it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4919
https://github.com/root-project/root/pull/4919:16,performance,failur,failures,16,"@lmoneta, sorry failures are not connected to your changes, it is coming from the new 32b node (I disabled it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4919
https://github.com/root-project/root/pull/4919:16,reliability,fail,failures,16,"@lmoneta, sorry failures are not connected to your changes, it is coming from the new 32b node (I disabled it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4919
https://github.com/root-project/root/pull/4919:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4919
https://github.com/root-project/root/pull/4923:186,deployability,releas,released,186,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:357,deployability,releas,released,357,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:158,energy efficiency,alloc,allocated,158,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:168,integrability,buffer,buffers,168,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:345,integrability,buffer,buffers,345,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:29,performance,memor,memory,29,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:295,testability,Plan,PlanarPolygon,295,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:29,usability,memor,memory,29,"@agheta . Can you also check memory leak here:. https://github.com/root-project/root/blob/master/geom/vecgeom/src/TGeoVGShape.cxx#L310-L324. I am not sure if allocated buffers correctly released there. https://gitlab.cern.ch/VecGeom/VecGeom/blob/2c16c854ed00df263a67ce7331e0f1d3f677bfcf/volumes/PlanarPolygon.h. Looking here, I am not sure that buffers are released",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:33,performance,memor,memory,33,I add several other commits with memory leaks fixes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:33,usability,memor,memory,33,I add several other commits with memory leaks fixes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:63,safety,review,review,63,"The TGeoVGShape reference you gave is a leak indeed. I plan to review this class anyway to add support for tessellated shape navigation, thanks @linev for pointing it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:55,testability,plan,plan,55,"The TGeoVGShape reference you gave is a leak indeed. I plan to review this class anyway to add support for tessellated shape navigation, thanks @linev for pointing it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:63,testability,review,review,63,"The TGeoVGShape reference you gave is a leak indeed. I plan to review this class anyway to add support for tessellated shape navigation, thanks @linev for pointing it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:95,usability,support,support,95,"The TGeoVGShape reference you gave is a leak indeed. I plan to review this class anyway to add support for tessellated shape navigation, thanks @linev for pointing it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:125,usability,navigat,navigation,125,"The TGeoVGShape reference you gave is a leak indeed. I plan to review this class anyway to add support for tessellated shape navigation, thanks @linev for pointing it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4924:147,integrability,pub,public,147,"> Trivial fix, code is no longer used anyway. > Can be moved out of libCore (in libGui, for instance). Not sure... See:. ```. class TApplication : public TObject, public TQObject. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4924
https://github.com/root-project/root/pull/4924:163,integrability,pub,public,163,"> Trivial fix, code is no longer used anyway. > Can be moved out of libCore (in libGui, for instance). Not sure... See:. ```. class TApplication : public TObject, public TQObject. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4924
https://github.com/root-project/root/pull/4926:81,interoperability,platform,platform,81,"> If it works - fine with me. It works on Windows, but I cannot try on any other platform. I'll ask Thibault to try and then I'll merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4926
https://github.com/root-project/root/pull/4929:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4929
https://github.com/root-project/root/pull/4931:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:17,availability,failur,failure,17,@Axel-Naumann CI failure looks spurious too me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:17,deployability,fail,failure,17,@Axel-Naumann CI failure looks spurious too me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:17,performance,failur,failure,17,@Axel-Naumann CI failure looks spurious too me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:17,reliability,fail,failure,17,@Axel-Naumann CI failure looks spurious too me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:15,availability,fault,fault,15,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:75,deployability,build,build,75,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:92,deployability,fail,failed,92,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:125,deployability,build,build,125,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:15,energy efficiency,fault,fault,15,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:15,performance,fault,fault,15,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:15,reliability,fault,fault,15,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:92,reliability,fail,failed,92,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:15,safety,fault,fault,15,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4931:91,security,hack,hack,91,"I don't think I have an account on the Jenkins server, so let's go for the good old GitHub hack of restarting the CI by closing and reopening the PR ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4931
https://github.com/root-project/root/pull/4934:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4934
https://github.com/root-project/root/pull/4934:90,deployability,patch,patch,90,"Hi, . Thank you for the PR, it looks fine to me. I will merge in the master and then as a patch for 6.20. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4934
https://github.com/root-project/root/pull/4934:90,safety,patch,patch,90,"Hi, . Thank you for the PR, it looks fine to me. I will merge in the master and then as a patch for 6.20. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4934
https://github.com/root-project/root/pull/4934:90,security,patch,patch,90,"Hi, . Thank you for the PR, it looks fine to me. I will merge in the master and then as a patch for 6.20. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4934
https://github.com/root-project/root/pull/4938:11,deployability,build,build,11,@phsft-bot build on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4938
https://github.com/root-project/root/pull/4938:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4938
https://github.com/root-project/root/pull/4938:29,safety,compl,complains,29,"Jenkins is fine, only travis complains about double -> int casting, but it is same code as in other places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4938
https://github.com/root-project/root/pull/4938:29,security,compl,complains,29,"Jenkins is fine, only travis complains about double -> int casting, but it is same code as in other places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4938
https://github.com/root-project/root/pull/4943:44,availability,sli,slightly,44,"> Looks fine. I will check your examples. I slightly change method signature `TPainter3dAlgorithms::ImplicitFunction`. Do you think anybody uses this class directly? We could just make it ""invisible"" - do not show in `$ROOTSYS/includes`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:44,reliability,sli,slightly,44,"> Looks fine. I will check your examples. I slightly change method signature `TPainter3dAlgorithms::ImplicitFunction`. Do you think anybody uses this class directly? We could just make it ""invisible"" - do not show in `$ROOTSYS/includes`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:67,security,sign,signature,67,"> Looks fine. I will check your examples. I slightly change method signature `TPainter3dAlgorithms::ImplicitFunction`. Do you think anybody uses this class directly? We could just make it ""invisible"" - do not show in `$ROOTSYS/includes`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:219,deployability,API,API,219,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:219,integrability,API,API,219,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:275,integrability,pub,public,275,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:219,interoperability,API,API,219,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:126,modifiability,variab,variable,126,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:160,safety,accid,accidentally,160,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:296,safety,compl,complete,296,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:296,security,compl,complete,296,"In principle, `TPainter3dAlgorithms` class one could keep as is, moving all changes into `THisPainter`. Main problem - static variable keep invalid pointer and accidentally it can be used again. If we do not care about API in `TPainter3dAlgorithms` - just let remove it from public includes. And complete changes, that non of static methods used for TF3 painting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4944:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4945:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:11,deployability,build,build,11,@phsft-bot build with flags -DKEEP_PR_BUILDS_FOR_A_DAY=ON -Dpyroot_experimental=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:11,deployability,build,build,11,@phsft-bot build with flags -DKEEP_PR_BUILDS_FOR_A_DAY=ON -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:171,availability,Error,Error,171,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:214,availability,error,errors,214,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:93,deployability,configurat,configuration,93,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:138,deployability,build,build,138,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:185,deployability,build,building,185,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:157,energy efficiency,green,green,157,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:93,integrability,configur,configuration,93,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:93,modifiability,configur,configuration,93,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:171,performance,Error,Error,171,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:214,performance,error,errors,214,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:171,safety,Error,Error,171,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:214,safety,error,errors,214,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:93,security,configur,configuration,93,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:49,usability,progress,progress,49,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:171,usability,Error,Error,171,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:214,usability,error,errors,214,"@maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? Windows build seems to be ""green"":. ```. Error(s) when building project. 0 Compiler errors. 51 or more Compiler warnings. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:187,availability,Error,Error,187,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:232,availability,error,errors,232,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:95,deployability,configurat,configuration,95,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:146,deployability,build,build,146,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:201,deployability,build,building,201,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:331,deployability,build,build,331,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:544,deployability,configurat,configuration,544,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:584,deployability,instal,install,584,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:596,deployability,build,build,596,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:165,energy efficiency,green,green,165,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:524,energy efficiency,green,green,524,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:95,integrability,configur,configuration,95,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:544,integrability,configur,configuration,544,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:391,interoperability,incompatib,incompatibility,391,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:95,modifiability,configur,configuration,95,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:544,modifiability,configur,configuration,544,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:187,performance,Error,Error,187,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:232,performance,error,errors,232,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:323,performance,time,time,323,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:187,safety,Error,Error,187,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:232,safety,error,errors,232,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:284,safety,reme,remember,284,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:635,safety,compl,completely,635,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:95,security,configur,configuration,95,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:544,security,configur,configuration,544,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:635,security,compl,completely,635,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:51,usability,progress,progress,51,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:187,usability,Error,Error,187,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:232,usability,error,errors,232,"> @maxgalli @etejedor any ideas on how we can make progress with this PR? Do we need to change configuration of node mac1014/cxx17? > . > Windows build seems to be ""green"":. > . > ```. > Error(s) when building project. > 0 Compiler errors. > 51 or more Compiler warnings. > ```. If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 (@etejedor can for sure explain better than me). So yes, I guess the only way to make it green is change the configuration of the node itself (maybe install and build with Python3 or disable the node completely?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:54,deployability,build,build,54,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:114,interoperability,incompatib,incompatibility,114,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:46,performance,time,time,46,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:7,safety,reme,remember,7,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:244,safety,compl,complains,244,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:244,security,compl,complains,244,"> If I remember correctly, this happens every time we build with PyROOT Experimental on this machine, due to some incompatibility between c++17 and Python2.7 . Yes, this is not related to this PR. When compiling PyROOT with C++17, the compiler complains because Python2.7, in some of its headers, uses the register keyword which is not allowed anymore in C++17.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4947:110,integrability,messag,message,110,"@stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:110,interoperability,messag,message,110,"@stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:434,availability,cluster,clustersInThisFileSize,434,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:307,deployability,patch,patch,307,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:434,deployability,cluster,clustersInThisFileSize,434,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:112,integrability,messag,message,112,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:112,interoperability,messag,message,112,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:307,safety,patch,patch,307,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:318,safety,test,test,318,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:307,security,patch,patch,307,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4947:318,testability,test,test,318,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..? @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. `maxTasksPerFile` being zero at line 218:. ```. const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();. ```. since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4949:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4949
https://github.com/root-project/root/pull/4952:0,deployability,Fail,Failing,0,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:86,deployability,updat,updated,86,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:50,integrability,pub,public,50,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:0,reliability,Fail,Failing,0,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:8,safety,test,test,8,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:86,safety,updat,updated,86,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:86,security,updat,updated,86,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4952:8,testability,test,test,8,Failing test because `TLego` typefed removed from public includes. . roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4953:538,energy efficiency,current,current,538,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:10,safety,avoid,avoid,10,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:114,safety,safe,safety,114,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:248,safety,safe,safety,248,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:401,safety,avoid,avoid,401,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:427,safety,test,test,427,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:509,safety,test,tests,509,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:427,testability,test,test,427,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:509,testability,test,tests,509,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety? On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:32,reliability,doe,does,32,@bellenot do you know why linux does not see this issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:115,availability,cluster,clustersInThisFileSize,115,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:183,availability,cluster,clustersInThisFileSize,183,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:115,deployability,cluster,clustersInThisFileSize,115,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:183,deployability,cluster,clustersInThisFileSize,183,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:268,energy efficiency,optim,optimization,268,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:104,modifiability,variab,variable,104,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:268,performance,optimiz,optimization,268,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:34,reliability,doe,does,34,"> @bellenot do you know why linux does not see this issue? Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:. ```. const auto nFolds = clustersInThisFileSize / maxTasksPerFile;. ```. is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:157,availability,cluster,clustersInThisFileSize,157,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:261,availability,cluster,clusters,261,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1312,availability,cluster,clustersInThisFileSize,1312,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:157,deployability,cluster,clustersInThisFileSize,157,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:261,deployability,cluster,clusters,261,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1312,deployability,cluster,clustersInThisFileSize,1312,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:433,integrability,sub,substitute,433,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:815,interoperability,platform,platforms,815,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:354,performance,time,time,354,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:121,reliability,doe,does,121,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:420,reliability,doe,does,420,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:456,safety,compl,complements,456,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:841,safety,test,tests,841,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1050,safety,test,testReport,1050,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1089,safety,test,test,1089,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1217,safety,except,exception,1217,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1241,safety,test,test,1241,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1368,safety,test,tests,1368,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1441,safety,test,tests,1441,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1447,safety,test,test,1447,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:456,security,compl,complements,456,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:711,testability,understand,understand,711,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:841,testability,test,tests,841,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1050,testability,test,testReport,1050,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1089,testability,test,test,1089,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1241,testability,test,test,1241,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1368,testability,test,tests,1368,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1441,testability,test,tests,1441,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1447,testability,test,test,1447,"I'm scared of merging this because there are several related points that are unclear and potentially problematic:. * why does Linux seem to be ok? * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. I'll take a look but I don't have time to go too deep into the rabbit hole at the moment. @bellenot does this PR substitute #4947 or it complements it? EDIT: plus, of course, the main question which we are discussing on the PPP channel on mattermost: is `EnableImplicitMT` always expected to be called before constructing `TTreeProcessorMT`? If yes, then these changes are not required if I understand correctly and #4947 is more in the right direction. EDIT2: seems like at least on some linux platforms the problematic tests are not run. there are only 6 gtests run for TTreeProcessorMT (e.g. [here](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/LABEL=ROOT-ubuntu18.10,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/)), while there are 8 in the corresponding file. plus -- I get a floating point exception if I run that test on my machine. So it might not be a windows-only problem. EDIT3: `clustersInThisFileSize` is zero because in the relevant tests we use empty `TTree`s. @stwunsch is that on purpose? What do those tests test if no data is being processed? They should at least be commented imo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:141,availability,cluster,clustersInThisFileSize,141,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:245,availability,cluster,clusters,245,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:141,deployability,cluster,clustersInThisFileSize,141,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:245,deployability,cluster,clusters,245,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:738,deployability,patch,patch,738,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1101,deployability,fail,failing,1101,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:8,reliability,doe,does,8,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1101,reliability,fail,failing,1101,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:738,safety,patch,patch,738,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1109,safety,test,test,1109,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:738,security,patch,patch,738,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1109,testability,test,test,1109,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1249,testability,simpl,simply,1249,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1395,testability,simpl,simply,1395,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1249,usability,simpl,simply,1249,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1341,usability,clear,clear,1341,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1395,usability,simpl,simply,1395,"> * why does Linux seem to be ok? See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`. The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue. And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it. And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:294,availability,cluster,clustersInThisFileSize,294,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:446,availability,cluster,clustersInThisFileSize,446,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:524,availability,cluster,clusters,524,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:294,deployability,cluster,clustersInThisFileSize,294,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:334,deployability,depend,depend,334,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:446,deployability,cluster,clustersInThisFileSize,446,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:524,deployability,cluster,clusters,524,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:744,deployability,depend,depends,744,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1045,deployability,fail,failing,1045,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:652,energy efficiency,cool,cool,652,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:804,energy efficiency,current,currently,804,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:30,integrability,coupl,couple,30,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:334,integrability,depend,depend,334,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:744,integrability,depend,depends,744,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1191,integrability,topic,topic,1191,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:128,interoperability,platform,platforms,128,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1130,interoperability,platform,platforms,1130,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:30,modifiability,coupl,couple,30,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:334,modifiability,depend,depend,334,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:744,modifiability,depend,depends,744,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:176,reliability,doe,doesn,176,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:325,reliability,doe,does,325,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1045,reliability,fail,failing,1045,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1088,reliability,doe,does,1088,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:83,safety,test,test,83,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:334,safety,depend,depend,334,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:490,safety,input,input,490,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:510,safety,test,test,510,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:634,safety,test,test,634,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:744,safety,depend,depends,744,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1053,safety,test,test,1053,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1083,safety,test,test,1083,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:30,testability,coupl,couple,30,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:83,testability,test,test,83,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:334,testability,depend,depend,334,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:510,testability,test,test,510,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:634,testability,test,test,634,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:744,testability,depend,depends,744,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1053,testability,test,test,1053,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:1083,testability,test,test,1083,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:434,usability,clear,clear,434,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:490,usability,input,input,490,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly. * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4954:1,deployability,Build,Build,1,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:7,deployability,fail,failed,7,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:7,reliability,fail,failed,7,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:63,safety,test,tests,63,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:73,safety,compl,completed,73,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:73,security,compl,completed,73,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:63,testability,test,tests,63,"""Build failed on mac1014/cxx17"" is wrong - compilation and all tests are completed normally. @couet, can you approve it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4957:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4957
https://github.com/root-project/root/pull/4958:36,availability,failur,failure,36,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:36,deployability,fail,failure,36,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:304,deployability,API,API,304,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:490,deployability,API,API,490,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:16,integrability,sub,submission,16,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:244,integrability,pub,public,244,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:304,integrability,API,API,304,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:471,integrability,sub,subtle,471,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:490,integrability,API,API,490,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:304,interoperability,API,API,304,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:490,interoperability,API,API,490,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:335,modifiability,inherit,inherited,335,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:36,performance,failur,failure,36,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:36,reliability,fail,failure,36,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:750,reliability,doe,doesn,750,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:420,testability,coverag,coverage,420,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:645,usability,user,users,645,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:95,interoperability,specif,specific,95,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:16,safety,review,review,16,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:72,safety,test,tests,72,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:16,testability,review,review,16,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4958:72,testability,test,tests,72,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4958
https://github.com/root-project/root/pull/4959:15,safety,review,reviewed,15,"Ah you already reviewed, so forget the request ^^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4959
https://github.com/root-project/root/pull/4959:15,testability,review,reviewed,15,"Ah you already reviewed, so forget the request ^^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4959
https://github.com/root-project/root/pull/4959:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4959
https://github.com/root-project/root/pull/4961:93,security,control,controller,93,"@alja . Please check if changes fine with you. Some methods I comment out in the SummaryView.controller.js . These are: `changeNumPoints`, `printEvent`, `changeRnrSelf`, `changeRnrChld`. I did not find a way how they can be activated. They refer to `editorElement`, which is now fully handled in `Ged.controller.js`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4961:301,security,control,controller,301,"@alja . Please check if changes fine with you. Some methods I comment out in the SummaryView.controller.js . These are: `changeNumPoints`, `printEvent`, `changeRnrSelf`, `changeRnrChld`. I did not find a way how they can be activated. They refer to `editorElement`, which is now fully handled in `Ged.controller.js`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4961:93,testability,control,controller,93,"@alja . Please check if changes fine with you. Some methods I comment out in the SummaryView.controller.js . These are: `changeNumPoints`, `printEvent`, `changeRnrSelf`, `changeRnrChld`. I did not find a way how they can be activated. They refer to `editorElement`, which is now fully handled in `Ged.controller.js`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4961:301,testability,control,controller,301,"@alja . Please check if changes fine with you. Some methods I comment out in the SummaryView.controller.js . These are: `changeNumPoints`, `printEvent`, `changeRnrSelf`, `changeRnrChld`. I did not find a way how they can be activated. They refer to `editorElement`, which is now fully handled in `Ged.controller.js`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4961:3,deployability,build,build,3,CI build is fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4962:65,security,trust,trust,65,"Hi,. I'm afraid I really don't have an opinion on this :smile: I trust @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4962
https://github.com/root-project/root/pull/4964:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:165,availability,slo,slot,165,"@bluehood [PR4649](https://github.com/root-project/root/pull/4649) already incorporates similar changes for `SnapshotHelperMT`. In that case, it calls `fOutputFiles[slot]->mkdir(fDirName.c_str(), """", true)` regardless of the File Open option since each thread can write to the same directory; thus, no additional adjustment is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:165,reliability,slo,slot,165,"@bluehood [PR4649](https://github.com/root-project/root/pull/4649) already incorporates similar changes for `SnapshotHelperMT`. In that case, it calls `fOutputFiles[slot]->mkdir(fDirName.c_str(), """", true)` regardless of the File Open option since each thread can write to the same directory; thus, no additional adjustment is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:85,availability,error,errors,85,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:234,deployability,updat,update,234,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:85,performance,error,errors,85,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:76,safety,prevent,prevents,76,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:85,safety,error,errors,85,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:234,safety,updat,update,234,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:76,security,preven,prevents,76,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:234,security,updat,update,234,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:85,usability,error,errors,85,"@bluehood no, they address different problems. PR4649 is already merged and prevents errors being raised due to multiple threads writing to the same directory. This PR addresses the case of writing to an existing directory using the ""update"" option; it's just that no fix is required for MT since it already expects that it may write to an existing directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:210,availability,Error,Error,210,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:32,performance,time,time,32,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:210,performance,Error,Error,210,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:132,safety,test,test,132,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:210,safety,Error,Error,210,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:132,testability,test,test,132,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:210,usability,Error,Error,210,"@goi42 ah #4649 was merged some time ago, I see! I got it confused with #4965, sorry! So this can go in, but I would like to have a test for the fixed usecase. I don't know how to check that `TFile` printed an Error, do you by chance? I'll ask around :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:13,availability,Error,Error,13,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:13,performance,Error,Error,13,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:13,safety,Error,Error,13,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:13,usability,Error,Error,13,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:140,availability,error,errors,140,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:247,availability,error,error,247,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:253,availability,state,statement,253,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:36,energy efficiency,current,currently,36,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:253,integrability,state,statement,253,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:140,performance,error,errors,140,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:247,performance,error,error,247,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:55,safety,test,test,55,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:140,safety,error,errors,140,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:153,safety,test,test,153,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:247,safety,error,error,247,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:55,testability,test,test,55,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:153,testability,test,test,153,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:140,usability,error,errors,140,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:199,usability,indicat,indicates,199,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:247,usability,error,error,247,"@bluehood Ah, okay, no problem. I'm currently adding a test to check that both trees get written, but no, I don't know how to check printed errors. Is a test necessary for such a case? A quick check indicates that this PR only affects the printed error statement, not the saved output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4965:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:657,availability,error,errors,657,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:651,deployability,build,build,651,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:730,interoperability,compatib,compatible,730,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:815,interoperability,compatib,compatible,815,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:657,performance,error,errors,657,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:486,safety,test,test,486,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:542,safety,test,test,542,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:602,safety,test,test,602,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:657,safety,error,errors,657,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:39,testability,understand,understand,39,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:481,testability,unit,unit,481,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:486,testability,test,test,486,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:542,testability,test,test,542,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:602,testability,test,test,602,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:657,usability,error,errors,657,"Hi @goi42,. thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them? Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me! It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:101,availability,failur,failure,101,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:101,deployability,fail,failure,101,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:101,performance,failur,failure,101,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:101,reliability,fail,failure,101,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:89,safety,prevent,prevent,89,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:89,security,preven,prevent,89,@goi42 please fork also [roottest](https://github.com/root-project/roottest) in order to prevent the failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:483,deployability,UPDAT,UPDATE,483,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:555,deployability,updat,update,555,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:992,deployability,updat,update,992,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:136,performance,memor,memory,136,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:483,safety,UPDAT,UPDATE,483,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:555,safety,updat,update,555,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:992,safety,updat,update,992,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:1295,safety,Test,Test,1295,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:483,security,UPDAT,UPDATE,483,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:555,security,updat,update,555,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:992,security,updat,update,992,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:1295,testability,Test,Test,1295,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:42,usability,aesthet,aesthetic,42,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:136,usability,memor,memory,136,"@bluehood One might want to overwrite for aesthetic reasons (so that the file is not polluted with outdated cycles) or to save a little memory:. ```python. In [1]: import ROOT. In [2]: df = ROOT.RDataFrame(10).Define('e', 'rdfentry_'). In [3]: df.Snapshot('tUpdate', 'fUpdate.root'). Out[3]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a564e9fe0>. In [4]: snapopts = ROOT.RDF.RSnapshotOptions(). In [5]: snapopts.fMode = 'UPDATE'. In [6]: df.Snapshot('tUpdate', 'fUpdate.root', '', snapopts) # update without overwriting. Out[6]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a574a3c80>. In [7]: df.Snapshot('tOverwrite', 'fOverwrite.root'). Out[7]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a576822d0>. In [8]: snapopts.fOverwrite = True. In [9]: df.Snapshot('tOverwrite', 'fOverwrite.root', '', snapopts) # update and overwrite. Out[9]: <ROOT.ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7f9a58142590>. ```. ```bash. $ ls -l f*root. -rw-r--r-- 1 michael staff 5.9K Feb 13 11:20 fOverwrite.root. -rw-r--r-- 1 michael staff 6.0K Feb 13 11:19 fUpdate.root. ```. Test coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:171,deployability,fail,fails-to-update-ttree-if-multithreading-enabled,171,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:48,energy efficiency,current,currently,48,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:171,reliability,fail,fails-to-update-ttree-if-multithreading-enabled,171,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:18,safety,test,tests,18,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:61,safety,test,test,61,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:180,safety,updat,update-ttree-if-multithreading-enabled,180,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:270,safety,test,test,270,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:180,security,updat,update-ttree-if-multithreading-enabled,180,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:18,testability,test,tests,18,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:61,testability,test,test,61,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:270,testability,test,test,270,"@bluehood I added tests, as requested. There is currently no test for the multithreading case, however, due to a bug reported [here](https://root-forum.cern.ch/t/snapshot-fails-to-update-ttree-if-multithreading-enabled/37961). Once that is resolved, I can add in the MT test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:48,interoperability,plug,plugins,48,JIRA ticket [here](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:49,performance,time,time,49,"Hi, sorry for the delay but I need to spend some time on this, probably next week. I have to figure out whether the MT case is fixable with reasonable effort, and if not we need to add diagnostics to warn users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:185,reliability,diagno,diagnostics,185,"Hi, sorry for the delay but I need to spend some time on this, probably next week. I have to figure out whether the MT case is fixable with reasonable effort, and if not we need to add diagnostics to warn users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:185,testability,diagno,diagnostics,185,"Hi, sorry for the delay but I need to spend some time on this, probably next week. I have to figure out whether the MT case is fixable with reasonable effort, and if not we need to add diagnostics to warn users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:205,usability,user,users,205,"Hi, sorry for the delay but I need to spend some time on this, probably next week. I have to figure out whether the MT case is fixable with reasonable effort, and if not we need to add diagnostics to warn users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:125,availability,error,error,125,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:21,deployability,Updat,Update,21,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:10,energy efficiency,Current,Currently,10,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:317,interoperability,plug,plugins,317,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:125,performance,error,error,125,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:28,reliability,doe,does,28,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:21,safety,Updat,Update,21,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:125,safety,error,error,125,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:21,security,Updat,Update,21,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:85,usability,user,user,85,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:125,usability,error,error,125,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:196,usability,effectiv,effectively,196,"@bluehood Currently, Update does not work _at all_ with MT, and it is possible for a user to get the wrong output without an error ever being thrown. This is independent of this merge request and effectively breaks ROOT for this use case, hence the ""critical"" priority on the [JIRA task](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573). It would probably be best to resolve the JIRA task before dealing with this MR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:199,availability,down,down,199,"Agreed! I'll make sure that is taken care of first, at the very least by throwing an exception if `fUpdate` is used with a multi-thread RDF. Again I am not sure that it can work at all, I need to go down the rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:123,performance,multi-thread,multi-thread,123,"Agreed! I'll make sure that is taken care of first, at the very least by throwing an exception if `fUpdate` is used with a multi-thread RDF. Again I am not sure that it can work at all, I need to go down the rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:85,safety,except,exception,85,"Agreed! I'll make sure that is taken care of first, at the very least by throwing an exception if `fUpdate` is used with a multi-thread RDF. Again I am not sure that it can work at all, I need to go down the rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:74,interoperability,plug,plugins,74,"Given the planned resolution of [ROOT-10573](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573), implemented in #5193 , I don't think this is needed anymore?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4965:10,testability,plan,planned,10,"Given the planned resolution of [ROOT-10573](https://sft.its.cern.ch/jira/plugins/servlet/mobile#issue/ROOT-10573), implemented in #5193 , I don't think this is needed anymore?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4966:150,interoperability,incompatib,incompatible,150,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:15,modifiability,refact,refactored,15,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:270,modifiability,refact,refactoring,270,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:15,performance,refactor,refactored,15,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:270,performance,refactor,refactoring,270,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:139,safety,compl,completely,139,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:29,security,control,controller,29,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:139,security,compl,completely,139,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:191,security,control,controller,191,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:29,testability,control,controller,29,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:191,testability,control,controller,191,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:179,usability,undo,undo,179,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4974:5,availability,failur,failures,5,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:5,deployability,fail,failures,5,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:5,performance,failur,failures,5,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:22,performance,time,timeouts,22,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:5,reliability,fail,failures,5,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:0,safety,Test,Test,0,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:22,safety,timeout,timeouts,22,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:0,testability,Test,Test,0,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:4,reliability,doe,does,4,Why does Jenkins even care that another branch unrelated to this one was deleted?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:133,integrability,event,eventually,133,"@Axel-Naumann Should be ready for re-review. Notice the new `RAxisLabels::CompareBinLabels()` mechanism, which paves the way towards eventually implementing order-insensitive label comparison and histogram merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:37,safety,review,review,37,"@Axel-Naumann Should be ready for re-review. Notice the new `RAxisLabels::CompareBinLabels()` mechanism, which paves the way towards eventually implementing order-insensitive label comparison and histogram merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:37,testability,review,review,37,"@Axel-Naumann Should be ready for re-review. Notice the new `RAxisLabels::CompareBinLabels()` mechanism, which paves the way towards eventually implementing order-insensitive label comparison and histogram merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4975:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4975
https://github.com/root-project/root/pull/4975:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4975
https://github.com/root-project/root/pull/4976:62,safety,test,testing,62,"This is pure JavaScript, can merge without waiting for end of testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4976
https://github.com/root-project/root/pull/4976:62,testability,test,testing,62,"This is pure JavaScript, can merge without waiting for end of testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4976
https://github.com/root-project/root/pull/4978:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4978
https://github.com/root-project/root/pull/4979:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4979
https://github.com/root-project/root/pull/4980:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4980
https://github.com/root-project/root/pull/4980:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4980
https://github.com/root-project/root/pull/4985:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:9,availability,failur,failure,9,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:9,deployability,fail,failure,9,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:9,performance,failur,failure,9,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:9,reliability,fail,failure,9,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:4,safety,test,test,4,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:4,testability,test,test,4,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4986:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4986:301,integrability,sub,subject,301,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4986:100,modifiability,variab,variable,100,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4986:150,modifiability,requires chang,requires changes,150,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4986:249,reliability,doe,does,249,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4986:83,safety,except,except,83,"@linev Thank you for the comments. I implemented all of the suggested corrections, except change of variable in REveFrameBox::fFramePoints because it requires changes in implementation of REveFrameBox::SetAAQuadXY and REveFrameBox::SetAAQuadXZ, but does not effect functionality. I can return to this subject later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4986
https://github.com/root-project/root/pull/4987:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:9,availability,failur,failure,9,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:9,deployability,fail,failure,9,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:9,performance,failur,failure,9,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:9,reliability,fail,failure,9,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:4,safety,test,test,4,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:45,safety,hot,hotfix,45,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4987:4,testability,test,test,4,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4987
https://github.com/root-project/root/pull/4988:42,deployability,log,log,42,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:113,deployability,updat,update,113,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:124,deployability,Releas,Release,124,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:42,safety,log,log,42,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:113,safety,updat,update,113,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:42,security,log,log,42,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:113,security,updat,update,113,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4988:42,testability,log,log,42,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4988
https://github.com/root-project/root/pull/4989:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4989
https://github.com/root-project/root/pull/4989:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4989
https://github.com/root-project/root/pull/4989:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4989
https://github.com/root-project/root/pull/4991:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4991
https://github.com/root-project/root/pull/4991:0,availability,Failur,Failures,0,"Failures are unrelated to the PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4991
https://github.com/root-project/root/pull/4991:0,deployability,Fail,Failures,0,"Failures are unrelated to the PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4991
https://github.com/root-project/root/pull/4991:0,performance,Failur,Failures,0,"Failures are unrelated to the PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4991
https://github.com/root-project/root/pull/4991:0,reliability,Fail,Failures,0,"Failures are unrelated to the PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4991
https://github.com/root-project/root/pull/4992:60,availability,error,error,60,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/4992:37,deployability,build,build,37,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/4992:12,energy efficiency,Current,Current,12,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/4992:60,performance,error,error,60,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/4992:60,safety,error,error,60,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/4992:60,usability,error,error,60,"@vgvassilev Current master cannot be build, I getting fatal error in rootcling_stage1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4992
https://github.com/root-project/root/pull/5002:0,availability,Failur,Failure,0,"Failure is not connected with this PR, merging it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:0,deployability,Fail,Failure,0,"Failure is not connected with this PR, merging it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:0,performance,Failur,Failure,0,"Failure is not connected with this PR, merging it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:0,reliability,Fail,Failure,0,"Failure is not connected with this PR, merging it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5004:310,deployability,fail,failed,310,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:330,deployability,build,build,330,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:409,deployability,build,build,409,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:488,deployability,build,build,488,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:801,deployability,build,build,801,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:879,deployability,build,build,879,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:957,deployability,build,build,957,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1035,deployability,build,build,1035,"```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1113,deployability,build,build,1113,"/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1191,deployability,build,build,1191,"onst From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1269,deployability,build,build,1269,"al && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1347,deployability,build,build,1347,tcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interprete,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1425,deployability,build,build,1425,otcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11Transac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1503,deployability,build,build,1503,ootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1581,deployability,build,build,1581,d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1659,deployability,build,build,1659,ibc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1737,deployability,build,build,1737,31]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1884,deployability,build,build,1884,ot6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2049,deployability,build,build,2049,rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2274,deployability,build,build,2274,ot6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2463,deployability,build,build,2463,tcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2541,deployability,build,build,2541,tcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2619,deployability,build,build,2619,tcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2725,deployability,build,build,2725,me/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2872,deployability,build,build,2872,me/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clinguti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2951,deployability,Stack,Stack,2951,ementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2998,deployability,build,build,2998,ompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3097,deployability,build,build,3097,ge1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3227,deployability,build,build,3227,11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3277,deployability,build,build,3277,root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3314,deployability,build,build,3314,ling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4195,deployability,build,build,4195,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:342,energy efficiency,core,core,342,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:421,energy efficiency,core,core,421,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:500,energy efficiency,core,core,500,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:813,energy efficiency,core,core,813,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:891,energy efficiency,core,core,891,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:969,energy efficiency,core,core,969,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1047,energy efficiency,core,core,1047,"ing_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1125,energy efficiency,core,core,1125,"sting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1203,energy efficiency,core,core,1203," [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1281,energy efficiency,core,core,1281,"> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1359,energy efficiency,core,core,1359,e1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareER,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1437,energy efficiency,core,core,1437,ge1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1515,energy efficiency,core,core,1515,age1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1593,energy efficiency,core,core,1593,f6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1671,energy efficiency,core,core,1671,ort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1749,energy efficiency,core,core,1749,/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1896,energy efficiency,core,core,1896,otcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2061,energy efficiency,core,core,2061,tage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2286,energy efficiency,core,core,2286,otcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2475,energy efficiency,core,core,2475,e1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2553,energy efficiency,core,core,2553,e1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2631,energy efficiency,core,core,2631,e1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/cli,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2737,energy efficiency,core,core,2737,ild/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2884,energy efficiency,core,core,2884,ild/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3010,energy efficiency,core,core,3010,ptionsE+0x2d)[0x74943d]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0x42)[0x690242]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling11Interpreter7declareERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_11TransactionE+0x4a)[0x6903ea]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/line,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3493,energy efficiency,core,core,3493,1/src/rootcling_stage1[0x5e06ec]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3546,energy efficiency,core,core,3546,oot6/core/rootcling_stage1/src/rootcling_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirecto,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3584,energy efficiency,core,core,3584,ng_stage1[0x5ee507]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3625,energy efficiency,core,core,3625,ot6/core/rootcling_stage1/src/rootcling_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3663,energy efficiency,core,core,3663,g_stage1(ROOT_rootcling_Driver+0xff)[0x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3701,energy efficiency,core,core,3701,x5f55ce]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3745,energy efficiency,core,core,3745,ling_stage1/src/rootcling_stage1(main+0x4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3785,energy efficiency,core,core,3785,4c)[0x4f9ee1]. /lib64/libc.so.6(__libc_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3823,energy efficiency,core,core,3823,_start_main+0xeb)[0x7efbff14ae0b]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStrea,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3862,energy efficiency,core,core,3862,e/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3906,energy efficiency,core,core,3906,c/rootcling_stage1(_start+0x2a)[0x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/gi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3944,energy efficiency,core,core,3944,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3981,energy efficiency,core,core,3981,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4024,energy efficiency,core,core,4024,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4064,energy efficiency,core,core,4064,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4239,energy efficiency,core,core,4239,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4277,energy efficiency,core,core,4277,x4f9bda]. Stack dump:. 0. Program arguments: /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /home/linev/build/root6/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /home/linev/git/root6 -excludePath /home/linev/build/root6 -I/home/linev/git/root6 -I/home/linev/build/root6/etc/cling/ -I/home/linev/build/root6/include -I/home/linev/git/root6/io/io -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/git/root6/core/clib/res -I/usr/include -I/home/linev/git/root6/core/base/inc -I/home/linev/git/root6/core/base/v7/inc -I/home/linev/git/root6/core/clib/inc -I/home/linev/git/root6/core/cont/inc -I/home/linev/git/root6/core/foundation/inc -I/home/linev/git/root6/core/macosx/inc -I/home/linev/git/root6/core/unix/inc -I/home/linev/git/root6/core/winnt/inc -I/home/linev/git/root6/core/clingutils/inc -I/home/linev/git/root6/core/meta/inc -I/home/linev/git/root6/core/gui/inc -I/home/linev/git/root6/core/textinput/inc -I/home/linev/git/root6/core/thread/inc -I/home/linev/git/root6/core/thread -I/home/linev/git/root6/io/io/inc -I/home/linev/git/root6/io/io/v7/inc -I/home/linev/git/root6/io/io/res -I/home/linev/build/root6/include -I/home/linev/git/root6/core/clib/res -I/home/linev/git/root6/core/thread/inc -writeEmptyRootPCM ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TVirtualObject.h TVirtualArray.h TZIPFile.h ROOT/RFile.hxx /home/linev/git/root6/io/io/inc/LinkDef.h . ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6,interoperability,platform,platform,6,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:310,reliability,fail,failed,310,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:260,testability,Assert,Assertion,260,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:117,usability,Support,Support,117,"On my platform I see following crash. ```. rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]. /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]. /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]. /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]. /lib64/libc.so.6(+0x25431)[0x7efbff149431]. /lib64/libc.so.6(+0x34592)[0x7efbff158592]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]. /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4861,availability,operat,operator,4861,"erpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:5508,availability,operat,operator,5508," (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1474,deployability,Modul,ModulePrivateLoc,1474,"x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6818,deployability,Modul,ModuleName,6818,"Context.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6872,deployability,Modul,ModuleFileName,6872,"read_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7111,deployability,Modul,Module,7111,"serData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7129,deployability,Modul,ModuleFileName,7129,", RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7333,deployability,Modul,ModuleNameLoc,7333,">, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7352,deployability,Modul,Module,7352,") (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7370,deployability,Modul,ModuleFileName,7370,", Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7610,deployability,Modul,Module,7610,", clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9561,deployability,build,build,9561,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9585,deployability,modul,moduleExtensions,9585,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9886,deployability,build,build,9886,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9910,deployability,modul,moduleExtensions,9910,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7539,energy efficiency,load,loadModule,7539,"mpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:10186,energy efficiency,core,core,10186,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:10345,energy efficiency,core,core,10345,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:10475,energy efficiency,core,core,10475,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1474,modifiability,Modul,ModulePrivateLoc,1474,"x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6818,modifiability,Modul,ModuleName,6818,"Context.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6872,modifiability,Modul,ModuleFileName,6872,"read_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7111,modifiability,Modul,Module,7111,"serData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7129,modifiability,Modul,ModuleFileName,7129,", RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7333,modifiability,Modul,ModuleNameLoc,7333,">, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7352,modifiability,Modul,Module,7352,") (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7370,modifiability,Modul,ModuleFileName,7370,", Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7610,modifiability,Modul,Module,7610,", clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9585,modifiability,modul,moduleExtensions,9585,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9910,modifiability,modul,moduleExtensions,9910,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7539,performance,load,loadModule,7539,"mpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1474,safety,Modul,ModulePrivateLoc,1474,"x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6818,safety,Modul,ModuleName,6818,"Context.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6834,safety,Input,Input,6834,"9. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6872,safety,Modul,ModuleFileName,6872,"read_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7111,safety,Modul,Module,7111,"serData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7129,safety,Modul,ModuleFileName,7129,", RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7333,safety,Modul,ModuleNameLoc,7333,">, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7352,safety,Modul,Module,7352,") (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7370,safety,Modul,ModuleFileName,7370,", Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7610,safety,Modul,Module,7610,", clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9129,safety,input,input,9129,"reter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9585,safety,modul,moduleExtensions,9585,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9910,safety,modul,moduleExtensions,9910,"xer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fffffffc068, isGenreflex=false) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:4270. #47 0x000000000079cbd8 in ROOT_rootcling_Driver (argc=247, argv=0x7fffffffc068, config=...) at /home/linev/git/root6/core/dictgen/src/rootcling_impl.cxx:6037. #48 0x00000000006a0d01 in main (argc=247, argv=0x7fffffffc068) at /home/linev/git/root6/core/rootcling_stage1/src/rootcling_stage1.cxx:45. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3056,security,Ident,IdentLoc,3056,"ib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3102,security,Ident,Ident,3102,"208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7839,security,Hash,HashLoc,7839,", OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3408,testability,Context,Context,3408,"lOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3612,testability,Context,Context,3612,"arseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:455,usability,Support,Support,455,"Here is full output from debugger:. ```. #0 0x00007ffff7a59fb1 in raise () from /lib64/libc.so.6. #1 0x00007ffff7a4355d in abort () from /lib64/libc.so.6. #2 0x00007ffff7a43431 in __assert_fail_base.cold () from /lib64/libc.so.6. #3 0x00007ffff7a52592 in __assert_fail () from /lib64/libc.so.6. #4 0x0000000000a94fee in llvm::isa_impl_cl<clang::EnumDecl, clang::NamedDecl const*>::doit (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106. #5 0x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:682,usability,Support,Support,682,"Here is full output from debugger:. ```. #0 0x00007ffff7a59fb1 in raise () from /lib64/libc.so.6. #1 0x00007ffff7a4355d in abort () from /lib64/libc.so.6. #2 0x00007ffff7a43431 in __assert_fail_base.cold () from /lib64/libc.so.6. #3 0x00007ffff7a52592 in __assert_fail () from /lib64/libc.so.6. #4 0x0000000000a94fee in llvm::isa_impl_cl<clang::EnumDecl, clang::NamedDecl const*>::doit (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106. #5 0x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:909,usability,Support,Support,909,"Here is full output from debugger:. ```. #0 0x00007ffff7a59fb1 in raise () from /lib64/libc.so.6. #1 0x00007ffff7a4355d in abort () from /lib64/libc.so.6. #2 0x00007ffff7a43431 in __assert_fail_base.cold () from /lib64/libc.so.6. #3 0x00007ffff7a52592 in __assert_fail () from /lib64/libc.so.6. #4 0x0000000000a94fee in llvm::isa_impl_cl<clang::EnumDecl, clang::NamedDecl const*>::doit (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106. #5 0x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1089,usability,Support,Support,1089,"o.6. #1 0x00007ffff7a4355d in abort () from /lib64/libc.so.6. #2 0x00007ffff7a43431 in __assert_fail_base.cold () from /lib64/libc.so.6. #3 0x00007ffff7a52592 in __assert_fail () from /lib64/libc.so.6. #4 0x0000000000a94fee in llvm::isa_impl_cl<clang::EnumDecl, clang::NamedDecl const*>::doit (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106. #5 0x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1252,usability,Support,Support,1252,"_assert_fail () from /lib64/libc.so.6. #4 0x0000000000a94fee in llvm::isa_impl_cl<clang::EnumDecl, clang::NamedDecl const*>::doit (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106. #5 0x0000000000a94ec7 in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl const*, clang::NamedDecl const*>::doit (Val=@0x7fffffff33c8: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:133. #6 0x0000000000a94bca in llvm::isa_impl_wrap<clang::EnumDecl, clang::NamedDecl* const, clang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_leve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:1790,usability,tool,tools,1790,"lang::NamedDecl const*>::doit (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:124. #7 0x0000000000a943f8 in llvm::isa<clang::EnumDecl, clang::NamedDecl*> (Val=@0x7fffffff3408: 0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2047,usability,tool,tools,2047,"oot6/interpreter/llvm/src/include/llvm/Support/Casting.h:144. #8 0x0000000000a94412 in llvm::cast<clang::EnumDecl, clang::NamedDecl> (Val=0x0) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:255. #9 0x00000000015fe2d8 in clang::Sema::ActOnTag (this=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2321,usability,tool,tools,2321,"his=0x79158a0, S=0x7c467c0, TagSpec=16, TUK=clang::Sema::TUK_Definition, KWLoc=..., SS=..., Name=0x954d000, NameLoc=..., Attr=0x0, AS=clang::AS_none, ModulePrivateLoc=..., TemplateParameterLists=..., . OwnedDecl=@0x7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2536,usability,tool,tools,2536,"7fffffff3f5f: false, IsDependent=@0x7fffffff3f5e: false, ScopedEnumKWLoc=..., ScopedEnumUsesClassTag=false, UnderlyingType=..., IsTypeSpecifier=false, IsTemplateParamOrArg=false, SkipBody=0x7fffffff3f60). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2753,usability,tool,tools,2753,"ev/git/root6/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:13678. #10 0x000000000120b6d6 in clang::Parser::ParseEnumSpecifier (this=0x74b46c0, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b317",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:2940,usability,tool,tools,2940,"..., AS=clang::AS_none, DSC=clang::Parser::DSC_top_level) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:4261. #11 0x0000000001208f56 in clang::Parser::ParseDeclarationSpecifiers (this=0x74b46c0, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DSC_top_level, LateAttrs=0x0). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3291,usability,tool,tools,3291,"root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3605. #12 0x00000000012b3974 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x74b46c0, attrs=..., DS=..., AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3493,usability,tool,tools,3493,"me/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:921. #13 0x00000000012b3f38 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x74b46c0, attrs=..., DS=0x0, AS=clang::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::Fronten",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3693,usability,tool,tools,3693,"::AS_none) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1002. #14 0x00000000012b35b0 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:3883,usability,tool,tools,3883,"DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:852. #15 0x0000000001221b30 in clang::Parser::ParseInnerNamespace (this=0x74b46c0, IdentLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4055,usability,tool,tools,4055,"entLoc=std::vector of length 0, capacity 0, Ident=std::vector of length 0, capacity 0, NamespaceLoc=std::vector of length 0, capacity 0, index=0, InlineLoc=..., attrs=..., . Tracker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4233,usability,tool,tools,4233,"ker=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:220. #16 0x0000000001221939 in clang::Parser::ParseNamespace (this=0x74b46c0, Context=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4407,usability,tool,tools,4407,"ntext=0, DeclEnd=..., InlineLoc=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:195. #17 0x0000000001201f54 in clang::Parser::ParseDeclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4581,usability,tool,tools,4581,"eclaration (this=0x74b46c0, Context=0, DeclEnd=..., attrs=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:1669. #18 0x00000000012b3177 in clang::Parser::ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4772,usability,tool,tools,4772,":ParseExternalDeclaration (this=0x74b46c0, attrs=..., DS=0x0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:785. #19 0x00000000012b27aa in clang::Parser::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:4957,usability,tool,tools,4957,"::ParseTopLevelDecl (this=0x74b46c0, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:620. #20 0x00000000011f71ff in clang::ParseAST (S=..., PrintStats=false, SkipFunctionBodies=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:147. #21 0x000000000104cfb5 in clang::ASTFrontendAction::ExecuteAction (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:997. #22 0x000000000104ca0f in clang::FrontendAction::Execute (this=0x7fffffff58a0) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896. #23 0x0000000000ff4ead in clang::CompilerInstance::ExecuteAction (this=0x7fffffff5a90, Act=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:5802,usability,Support,Support,5802,"nstance.cpp:984. #24 0x0000000000ff53ba in <lambda()>::operator()(void) const (__closure=0x7fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., Imp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:5894,usability,User,UserData,5894,"fffffff5e68) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:5969,usability,Support,Support,5969,"Frontend/CompilerInstance.cpp:1154. #25 0x0000000000ffbdb9 in llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6113,usability,User,UserData,6113,", clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6216,usability,Support,Support,6216,"lvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>)::<lambda()> >(intptr_t) (callable=140737488313960) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:98. #26 0x000000000121d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6466,usability,Support,Support,6466,"1d274 in llvm::function_ref<void ()>::operator()() const (this=0x7fffffff5940) at /home/linev/git/root6/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:113. #27 0x0000000003c3b1dc in llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (this=0x7fffffff5a80, Fn=...) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:359. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6834,usability,Input,Input,6834,"9. #28 0x0000000003c3b28c in RunSafelyOnThread_Dispatch (UserData=0x7fffffff5a10) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:6976,usability,tool,tools,6976,"ashRecoveryContext.cpp:402. #29 0x0000000003cd95e3 in llvm::llvm_execute_on_thread (Fn=0x3c3b246 <RunSafelyOnThread_Dispatch(void*)>, UserData=0x7fffffff5a10, RequestedStackSize=8388608) at /home/linev/git/root6/interpreter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7195,usability,tool,tools,7195,"eter/llvm/src/lib/Support/Threading.cpp:45. #30 0x0000000003c3b313 in llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) (this=0x7fffffff5a80, Fn=..., RequestedStackSize=8388608). at /home/linev/git/root6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7436,usability,tool,tools,7436,"6/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:408. #31 0x0000000000ff5bbb in compileModuleImpl(clang::CompilerInstance &, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void(clang::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7700,usability,tool,tools,7700,"g::CompilerInstance&)>, llvm::function_ref<void(clang::CompilerInstance&)>) (ImportingInstance=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:7966,usability,tool,tools,7966,"vm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151. #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /hom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:8147,usability,tool,tools,8147,"t /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190. #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:8352,usability,tool,tools,8352,"ule=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263. #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:8507,usability,tool,tools,8507," in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true). at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:8669,usability,tool,tools,8669,"/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769. #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:8828,usability,tool,tools,8828,"d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886. #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9008,usability,tool,tools,9008,"6 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:9129,usability,input,input,9129,"reter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970. #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736. #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981. #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788. #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:351. #41 0x00000000012b24ab in clang::Parser::ParseTopLevelDecl (this=0x6d14650, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:559. #42 0x00000000009dcc54 in cling::IncrementalParser::ParseInternal (this=0x6d0aa20, input=...) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #43 0x00000000009db11e in cling::IncrementalParser::Initialize (this=0x6d0aa20, result=..., isChildInterpreter=false) at /home/linev/git/root6/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:349. #44 0x000000000084a39c in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false, parentInterp=0x0). at /home/linev/git/root6/interpreter/cling/lib/Interpreter/Interpreter.cpp:296. #45 0x00000000007a02f1 in cling::Interpreter::Interpreter (this=0x6d064f0, argc=57, argv=0x6d036e0, llvmdir=0x6d06fb0 ""/home/linev/build/root6/etc/cling"", moduleExtensions=std::vector of length 0, capacity 0, noRuntime=false). at /home/linev/git/root6/interpreter/cling/include/cling/Interpreter/Interpreter.h:341. #46 0x0000000000792643 in RootClingMain (argc=247, argv=0x7fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:411,deployability,modul,module,411,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:411,modifiability,modul,module,411,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:411,safety,modul,module,411,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:872,security,PrevEn,PrevEnum,872,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:58,usability,tool,tools,58,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:115,usability,tool,tools,115,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:214,usability,tool,tools,214,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5004:276,usability,tool,tools,276,"Can you try this:. ```. diff --git a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. index 75f43c507a..b1c7c61f2b 100644. --- a/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp. @@ -12944,7 +12944,7 @@ bool Sema::CheckEnumRedeclaration(. . // We have a definition coming from a module and a forward declaration. // coming after. - if (Prev->isFromASTFile() && hasFwdDeclAnnotation(New)). + if (Prev->isFromASTFile() && New && hasFwdDeclAnnotation(New)). return false;. . Diag(EnumLoc, diag::err_enum_redeclare_fixed_mismatch). @@ -13675,7 +13675,7 @@ Decl *Sema::ActOnTag(Scope *S, unsigned TagSpec, TagUseKind TUK,. if (CheckEnumRedeclaration(NameLoc.isValid() ? NameLoc : KWLoc,. ScopedEnum, EnumUnderlyingTy,. EnumUnderlyingIsImplicit, PrevEnum,. - cast<EnumDecl>(SkipBody->New))). + cast_or_null<EnumDecl>(SkipBody->New))). return TUK == TUK_Declaration ? PrevTagDecl : nullptr;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5004
https://github.com/root-project/root/pull/5007:54,deployability,modul,modules,54,"@mrodozov, @smuzaffar we should pick that fix too for modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5007
https://github.com/root-project/root/pull/5007:54,modifiability,modul,modules,54,"@mrodozov, @smuzaffar we should pick that fix too for modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5007
https://github.com/root-project/root/pull/5007:54,safety,modul,modules,54,"@mrodozov, @smuzaffar we should pick that fix too for modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5007
https://github.com/root-project/root/pull/5009:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5009
https://github.com/root-project/root/pull/5010:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:60,safety,test,test,60,"Hello @lmoneta, is `w = 1` somehow a special case? From the test I see it is superseded in ` TH1K`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:60,testability,test,test,60,"Hello @lmoneta, is `w = 1` somehow a special case? From the test I see it is superseded in ` TH1K`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:122,deployability,updat,update,122,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:200,deployability,updat,update,200,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:122,safety,updat,update,122,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:151,safety,test,tests,151,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:200,safety,updat,update,200,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:122,security,updat,update,122,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:200,security,updat,update,200,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:151,testability,test,tests,151,"Hi, . This should be possible , if there are no side effects which I cannot think about now. . Maybe the best is that you update the PR and see if all tests pass. . In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:120,availability,redund,redundancy,120,"Hi @lmoneta, as for `TProfile` I'm not sure what would be the behavior when defining a default weight because there the redundancy happens in that particular member:. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L100. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L98. If default `w` is set to 1. Which method will be executed when calling `Fill(""3.14"",2.78)`? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:120,deployability,redundan,redundancy,120,"Hi @lmoneta, as for `TProfile` I'm not sure what would be the behavior when defining a default weight because there the redundancy happens in that particular member:. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L100. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L98. If default `w` is set to 1. Which method will be executed when calling `Fill(""3.14"",2.78)`? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:120,reliability,redundan,redundancy,120,"Hi @lmoneta, as for `TProfile` I'm not sure what would be the behavior when defining a default weight because there the redundancy happens in that particular member:. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L100. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L98. If default `w` is set to 1. Which method will be executed when calling `Fill(""3.14"",2.78)`? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:120,safety,redund,redundancy,120,"Hi @lmoneta, as for `TProfile` I'm not sure what would be the behavior when defining a default weight because there the redundancy happens in that particular member:. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L100. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L98. If default `w` is set to 1. Which method will be executed when calling `Fill(""3.14"",2.78)`? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:62,usability,behavi,behavior,62,"Hi @lmoneta, as for `TProfile` I'm not sure what would be the behavior when defining a default weight because there the redundancy happens in that particular member:. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L100. https://github.com/root-project/root/blob/d99446efa92485518cc13a3dba85176f83f2dccc/hist/hist/inc/TProfile.h#L98. If default `w` is set to 1. Which method will be executed when calling `Fill(""3.14"",2.78)`? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:413,availability,error,error,413,"The issue is that if we have two methods (as in `TProfile`):. ```. virtual Int_t Fill(const char *namex, Double_t y, Double_t w); . ```. and . ```. virtual Int_t Fill(const char *namex, Double_t y); . ```. If I set default `w` to 1. `Fill` becomes ambiguous:. ```. root [0] Double_t p1(Double_t x){return x;}. root [1] Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. root [2] p1(3.2). ROOT_prompt_2:1:1: error: call to 'p1' is ambiguous. p1(3.2). ^~. ROOT_prompt_0:1:10: note: candidate function. Double_t p1(Double_t x){return x;}. ^. ROOT_prompt_1:1:10: note: candidate function. Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:413,performance,error,error,413,"The issue is that if we have two methods (as in `TProfile`):. ```. virtual Int_t Fill(const char *namex, Double_t y, Double_t w); . ```. and . ```. virtual Int_t Fill(const char *namex, Double_t y); . ```. If I set default `w` to 1. `Fill` becomes ambiguous:. ```. root [0] Double_t p1(Double_t x){return x;}. root [1] Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. root [2] p1(3.2). ROOT_prompt_2:1:1: error: call to 'p1' is ambiguous. p1(3.2). ^~. ROOT_prompt_0:1:10: note: candidate function. Double_t p1(Double_t x){return x;}. ^. ROOT_prompt_1:1:10: note: candidate function. Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:413,safety,error,error,413,"The issue is that if we have two methods (as in `TProfile`):. ```. virtual Int_t Fill(const char *namex, Double_t y, Double_t w); . ```. and . ```. virtual Int_t Fill(const char *namex, Double_t y); . ```. If I set default `w` to 1. `Fill` becomes ambiguous:. ```. root [0] Double_t p1(Double_t x){return x;}. root [1] Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. root [2] p1(3.2). ROOT_prompt_2:1:1: error: call to 'p1' is ambiguous. p1(3.2). ^~. ROOT_prompt_0:1:10: note: candidate function. Double_t p1(Double_t x){return x;}. ^. ROOT_prompt_1:1:10: note: candidate function. Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:413,usability,error,error,413,"The issue is that if we have two methods (as in `TProfile`):. ```. virtual Int_t Fill(const char *namex, Double_t y, Double_t w); . ```. and . ```. virtual Int_t Fill(const char *namex, Double_t y); . ```. If I set default `w` to 1. `Fill` becomes ambiguous:. ```. root [0] Double_t p1(Double_t x){return x;}. root [1] Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. root [2] p1(3.2). ROOT_prompt_2:1:1: error: call to 'p1' is ambiguous. p1(3.2). ^~. ROOT_prompt_0:1:10: note: candidate function. Double_t p1(Double_t x){return x;}. ^. ROOT_prompt_1:1:10: note: candidate function. Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:94,availability,error,error,94,@vargasa please fork also rootest (https://github.com/root-project/roottest) to fix the build error on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:88,deployability,build,build,88,@vargasa please fork also rootest (https://github.com/root-project/roottest) to fix the build error on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:94,performance,error,error,94,@vargasa please fork also rootest (https://github.com/root-project/roottest) to fix the build error on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:94,safety,error,error,94,@vargasa please fork also rootest (https://github.com/root-project/roottest) to fix the build error on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:94,usability,error,error,94,@vargasa please fork also rootest (https://github.com/root-project/roottest) to fix the build error on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:11,deployability,build,build,11,@phsft-bot build !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:14,safety,test,tests,14,"I see all the tests passed. . However, I realized that we cannot apply this PR. . This will break the case . ``h1->Fill(0)``. because will be ambiguous. I think this was the reason that the default weight of 1was not added at the beginning. I need then to close this PR . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:14,testability,test,tests,14,"I see all the tests passed. . However, I realized that we cannot apply this PR. . This will break the case . ``h1->Fill(0)``. because will be ambiguous. I think this was the reason that the default weight of 1was not added at the beginning. I need then to close this PR . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5010:256,usability,close,close,256,"I see all the tests passed. . However, I realized that we cannot apply this PR. . This will break the case . ``h1->Fill(0)``. because will be ambiguous. I think this was the reason that the default weight of 1was not added at the beginning. I need then to close this PR . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5011:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5011
https://github.com/root-project/root/pull/5012:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5012
https://github.com/root-project/root/pull/5012:75,deployability,updat,updates,75,This needs https://github.com/root-project/roottest/pull/448 for reference updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5012
https://github.com/root-project/root/pull/5012:75,safety,updat,updates,75,This needs https://github.com/root-project/roottest/pull/448 for reference updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5012
https://github.com/root-project/root/pull/5012:75,security,updat,updates,75,This needs https://github.com/root-project/roottest/pull/448 for reference updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5012
https://github.com/root-project/root/pull/5013:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5013:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5013:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5013:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5013:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5014:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5014
https://github.com/root-project/root/pull/5015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5015
https://github.com/root-project/root/pull/5016:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:219,deployability,version,version,219,"You need to protect the new project line with `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`, since it can't be allowed to be called inside ROOT. You also need to ensure that it's okay to call it again with the same name and a version specified (I believe so), and you should also add `LANGUAGES CXX`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:219,integrability,version,version,219,"You need to protect the new project line with `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`, since it can't be allowed to be called inside ROOT. You also need to ensure that it's okay to call it again with the same name and a version specified (I believe so), and you should also add `LANGUAGES CXX`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:227,interoperability,specif,specified,227,"You need to protect the new project line with `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`, since it can't be allowed to be called inside ROOT. You also need to ensure that it's okay to call it again with the same name and a version specified (I believe so), and you should also add `LANGUAGES CXX`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:219,modifiability,version,version,219,"You need to protect the new project line with `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`, since it can't be allowed to be called inside ROOT. You also need to ensure that it's okay to call it again with the same name and a version specified (I believe so), and you should also add `LANGUAGES CXX`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:151,availability,Failur,Failure,151,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:192,availability,Error,Error,192,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:151,deployability,Fail,Failure,151,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:207,deployability,modul,modules,207,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:446,deployability,Stack,Stack,446,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:494,deployability,modul,modules,494,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:403,energy efficiency,current,current,403,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:237,integrability,messag,message,237,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:237,interoperability,messag,message,237,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:207,modifiability,modul,modules,207,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:494,modifiability,modul,modules,494,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:151,performance,Failur,Failure,151,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:192,performance,Error,Error,192,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:151,reliability,Fail,Failure,151,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:192,safety,Error,Error,192,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:207,safety,modul,modules,207,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:494,safety,modul,modules,494,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:192,usability,Error,Error,192,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:. ```. 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):. 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for. 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current. 10:57:03 directory? 10:57:03 Call Stack (most recent call first):. 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY). 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE). ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:0,availability,Failur,Failures,0,"Failures are unrelated to these changes, I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:0,deployability,Fail,Failures,0,"Failures are unrelated to these changes, I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:0,performance,Failur,Failures,0,"Failures are unrelated to these changes, I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5016:0,reliability,Fail,Failures,0,"Failures are unrelated to these changes, I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:22,deployability,fail,failing,22,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:104,modifiability,variab,variable,104,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:475,modifiability,variab,variables,475,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:22,reliability,fail,failing,22,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:12,safety,test,tests,12,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:398,safety,except,except,398,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:12,testability,test,tests,12,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:601,usability,behavi,behaviour,601,"I think the tests are failing because the Macro ROOT_GENERATE_DICTIONARY also uses the `${definitions}` variable, and then the ${definitions} leaks out of REFLEX_GENERATE_DICTIONARY in a form that is not handled by ROOT_GENERATE_DICTIONARY. . I added `set(definitions)` now also to ROOT_GENERATE_DICTIONARY. ~~includedirs is already ""purged"" because it is set to something like ""CMAKE_SOURCE_DIR"", except if used outside ROOT , so maybe that should be emptied as well.~~ the variables have different names. Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:263,safety,review,reviewed,263,"> Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour? I like thesw changes, many thanks for fix! Nice catch about leaking ${definitions} in ROOT_GENERATE_DICTIONARY! (in fact code is old and probably should be reviewed)... @vgvassilev are you ok with ROOT_GENERATE_DICTIONARY changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:263,testability,review,reviewed,263,"> Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour? I like thesw changes, many thanks for fix! Nice catch about leaking ${definitions} in ROOT_GENERATE_DICTIONARY! (in fact code is old and probably should be reviewed)... @vgvassilev are you ok with ROOT_GENERATE_DICTIONARY changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:96,usability,behavi,behaviour,96,"> Unless the fact that ${definitions} is not purged is a feature, or someone is relying on this behaviour? I like thesw changes, many thanks for fix! Nice catch about leaking ${definitions} in ROOT_GENERATE_DICTIONARY! (in fact code is old and probably should be reviewed)... @vgvassilev are you ok with ROOT_GENERATE_DICTIONARY changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:310,deployability,configurat,configurations,310,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:310,integrability,configur,configurations,310,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:157,modifiability,variab,variable,157,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:310,modifiability,configur,configurations,310,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:564,reliability,diagno,diagnose,564,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:310,security,configur,configurations,310,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:114,testability,understand,understand,114,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:564,testability,diagno,diagnose,564,Thanks for the PR. `ROOT_GENERATE_DICTIONARY` seems to be a function and it has lexical scoping rules so I do not understand why resetting the `definitions` variable make things work. Why do we need another switch for `REFLEX_GENERATE_DICTIONARY`? We should be able to deduce the include paths from the target configurations. Passing different include paths using `USES` would mean that your dictionary has a different set of header files (compiled in a different way) than the library the dictionary is compiled in. That's quite dangerous as it can bring hard to diagnose inconsistencies. The direction ROOT has taken in the past is that it encourages single cmake call to produce library and its dictionaries. This is what `ROOT_STANDARD_LIBRARY_PACKAGE` is. Maybe we should have something similar for reflex or even better (add a flag for ROOT_STANDARD_LIBRARY_PACKAGE` which calls `genreflex` instead of `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:526,availability,consist,consistency,526,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1141,deployability,configurat,configurations,1141,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1195,deployability,configurat,configurations,1195,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:669,integrability,PUB,PUBLIC,669,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:726,integrability,PUB,PUBLIC,726,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1141,integrability,configur,configurations,1141,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1195,integrability,configur,configurations,1195,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:608,interoperability,SHARE,SHARED,608,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:936,interoperability,xml,xml,936,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1141,modifiability,configur,configurations,1141,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1195,modifiability,configur,configurations,1195,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:457,reliability,Doe,Doesn,457,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1141,security,configur,configurations,1141,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1195,security,configur,configurations,1195,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:439,usability,support,supported,439,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:526,usability,consist,consistency,526,"${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? . Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? ```cmake. add_library(edm4hep SHARED ${sources} ${headers}). target_link_libraries(edm4hep PUBLIC podio::podio). target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. USES edm4hep ) # creates edm4hep.cxx. target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. ```. > We should be able to deduce the include paths from the target configurations. I don't know what you mean by ""target configurations"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:661,availability,consist,consistency,661,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1416,availability,consist,consistent,1416,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:814,integrability,PUB,PUBLIC,814,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:873,integrability,PUB,PUBLIC,873,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1449,integrability,rout,routine,1449,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:751,interoperability,SHARE,SHARED,751,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1085,interoperability,xml,xml,1085,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:592,reliability,Doe,Doesn,592,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1431,security,control,controlled,1431,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1431,testability,control,controlled,1431,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:242,usability,prefer,prefer,242,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:572,usability,support,supported,572,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:661,usability,consist,consistency,661,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1416,usability,consist,consistent,1416,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > . > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY? > . > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either. > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library? > . > ```cmake. > add_library(edm4hep SHARED ${sources} ${headers}). > target_link_libraries(edm4hep PUBLIC podio::podio). > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>). > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml. > USES edm4hep ) # creates edm4hep.cxx. > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict. > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:53,deployability,depend,depend,53,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:136,deployability,modul,modules,136,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:53,integrability,depend,depend,53,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:347,interoperability,SHARE,SHARED,347,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:53,modifiability,depend,depend,53,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:136,modifiability,modul,modules,136,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:20,reliability,doe,doesn,20,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:47,safety,test,tests,47,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:53,safety,depend,depend,53,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:136,safety,modul,modules,136,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:47,testability,test,tests,47,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:53,testability,depend,depend,53,Going to a function doesn't work. At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`. e.g.: roottest/cmake/modules/RoottestMacros.cmake. ```cmake. REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}. SELECTION ${ARG_SELECTION}. ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:208,deployability,infrastructur,infrastructure,208,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,deployability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,integrability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,interoperability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:36,modifiability,variab,variable,36,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,modifiability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:302,modifiability,variab,variable,302,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,reliability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,security,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:241,testability,integr,integrate,241,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:335,usability,progress,progress,335,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:239,availability,error,error,239,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:258,availability,Error,Error,258,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:847,availability,error,errors,847,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:289,deployability,build,buildroot,289,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:419,deployability,Stack,Stack,419,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:489,deployability,modul,modules,489,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:403,interoperability,specif,specified,403,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:12,modifiability,variab,variable,12,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:489,modifiability,modul,modules,489,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:239,performance,error,error,239,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:258,performance,Error,Error,258,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:847,performance,error,errors,847,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:75,reliability,doe,doesn,75,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:113,safety,test,test,113,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:239,safety,error,error,239,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:258,safety,Error,Error,258,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:489,safety,modul,modules,489,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:847,safety,error,errors,847,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:113,testability,test,test,113,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:168,testability,simpl,simply,168,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:168,usability,simpl,simply,168,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:239,usability,error,error,239,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:258,usability,Error,Error,258,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:847,usability,error,errors,847,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. ... but. So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```. CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. Call Stack (most recent call first):. /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake. IF(TARGET ${dictionary}). LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). ENDIF(). ```. ```cmake. IF(TARGET ${dictionary}). target_sources(${dictionary} PRIVATE ${gensrcdict}). ENDIF(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:245,availability,error,error,245,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:272,availability,Error,Error,272,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:877,availability,error,errors,877,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:303,deployability,build,buildroot,303,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:437,deployability,Stack,Stack,437,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:509,deployability,modul,modules,509,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1902,deployability,modul,modules,1902,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:419,interoperability,specif,specified,419,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:14,modifiability,variab,variable,14,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:509,modifiability,modul,modules,509,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1024,modifiability,variab,variable,1024,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1902,modifiability,modul,modules,1902,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1962,modifiability,reu,reuse,1962,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:245,performance,error,error,245,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:272,performance,Error,Error,272,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:877,performance,error,errors,877,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:77,reliability,doe,doesn,77,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:115,safety,test,test,115,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:245,safety,error,error,245,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:272,safety,Error,Error,272,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:509,safety,modul,modules,509,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:877,safety,error,errors,877,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1902,safety,modul,modules,1902,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:115,testability,test,test,115,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:174,testability,simpl,simply,174,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:174,usability,simpl,simply,174,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:245,usability,error,error,245,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:272,usability,Error,Error,272,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:877,usability,error,errors,877,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test. > ... but. > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. > . > ```. > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):. > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified. > Call Stack (most recent call first):. > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY). > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY). > ```. > . > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > . > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > . > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before. > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. > . > ```cmake. > IF(TARGET ${dictionary}). > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>). > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>). > ENDIF(). > ```. > . > ```cmake. > IF(TARGET ${dictionary}). > target_sources(${dictionary} PRIVATE ${gensrcdict}). > ENDIF(). > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:484,availability,consist,consistent,484,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:517,integrability,rout,routine,517,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:499,security,control,controlled,499,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:499,testability,control,controlled,499,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:651,testability,understand,understand,651,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:484,usability,consist,consistent,484,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:581,availability,consist,consistent,581,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1116,deployability,build,build,1116,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1478,deployability,build,build,1478,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:614,integrability,rout,routine,614,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:930,integrability,wrap,wrapped,930,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1002,integrability,wrap,wrapped,1002,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1174,integrability,rout,routines,1174,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1375,integrability,wrap,wrapper,1375,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1508,integrability,translat,translates,1508,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1375,interoperability,wrapper,wrapper,1375,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1469,interoperability,specif,specific,1469,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1508,interoperability,translat,translates,1508,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:865,modifiability,refact,refactoring,865,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:865,performance,refactor,refactoring,865,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1165,safety,isol,isolated,1165,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1247,safety,test,tested,1247,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:596,security,control,controlled,596,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1165,security,iso,isolated,1165,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:596,testability,control,controlled,596,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:760,testability,understand,understand,760,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1165,testability,isol,isolated,1165,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1247,testability,test,tested,1247,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:581,usability,consist,consistent,581,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:1422,usability,help,helper,1422,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work. > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > . > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation? > . > That `target_sources` call is not what made we want a new switch, though. > . > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:48,deployability,build,build,48,Thanks! I think you have to trigger the jenkins build again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:24,deployability,infrastructur,infrastructure,24,We have issues with our infrastructure at the moment. It may take a while to resolve this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5021:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5021
https://github.com/root-project/root/pull/5023:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5023
https://github.com/root-project/root/pull/5026:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:42,availability,failur,failure,42,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:34,deployability,modul,modules,34,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:42,deployability,fail,failure,42,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:34,modifiability,modul,modules,34,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:42,performance,failur,failure,42,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:42,reliability,fail,failure,42,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:34,safety,modul,modules,34,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5026:6,usability,confirm,confirm,6,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5026
https://github.com/root-project/root/pull/5027:0,availability,Failur,Failures,0,Failures are unrelated/pre-existing. This is ready to merge. (@Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5027
https://github.com/root-project/root/pull/5027:0,deployability,Fail,Failures,0,Failures are unrelated/pre-existing. This is ready to merge. (@Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5027
https://github.com/root-project/root/pull/5027:0,performance,Failur,Failures,0,Failures are unrelated/pre-existing. This is ready to merge. (@Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5027
https://github.com/root-project/root/pull/5027:0,reliability,Fail,Failures,0,Failures are unrelated/pre-existing. This is ready to merge. (@Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5027
https://github.com/root-project/root/pull/5028:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5028
https://github.com/root-project/root/pull/5028:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5028
https://github.com/root-project/root/pull/5028:4,safety,test,test,4,All test passed. This is ready to be merged in conjunction with root-project/roottest#447,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5028
https://github.com/root-project/root/pull/5028:4,testability,test,test,4,All test passed. This is ready to be merged in conjunction with root-project/roottest#447,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5028
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:15,availability,error,error,15,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:205,availability,failur,failures,205,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:45,deployability,build,builds,45,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:205,deployability,fail,failures,205,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:152,interoperability,platform,platforms,152,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:15,performance,error,error,15,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:205,performance,failur,failures,205,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:205,reliability,fail,failures,205,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:15,safety,error,error,15,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5030:15,usability,error,error,15,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5030
https://github.com/root-project/root/pull/5032:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5032
https://github.com/root-project/root/pull/5034:53,deployability,Stack,StackTrace,53,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:142,deployability,patch,patch,142,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:40,safety,prevent,prevents,40,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:142,safety,patch,patch,142,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:40,security,preven,prevents,40,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:103,security,sign,signal,103,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:142,security,patch,patch,142,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:46,energy efficiency,current,currently,46,"Ok what about this: we throw away the changes currently proposed in this PR, and instead we go here:. https://github.com/root-project/root/blob/master/core/base/src/TApplication.cxx#L1347. and before calling `gSystem->Abort()`, we call `gSystem->IgnoreSignal(kSigAbort)`, so that `TXXSystem::DispatchSignals` is not even invoked when the user types `.qqqqqq` from the ROOT prompt. This fixes the case of not printing an unexpected abort signal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:151,energy efficiency,core,core,151,"Ok what about this: we throw away the changes currently proposed in this PR, and instead we go here:. https://github.com/root-project/root/blob/master/core/base/src/TApplication.cxx#L1347. and before calling `gSystem->Abort()`, we call `gSystem->IgnoreSignal(kSigAbort)`, so that `TXXSystem::DispatchSignals` is not even invoked when the user types `.qqqqqq` from the ROOT prompt. This fixes the case of not printing an unexpected abort signal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:437,security,sign,signal,437,"Ok what about this: we throw away the changes currently proposed in this PR, and instead we go here:. https://github.com/root-project/root/blob/master/core/base/src/TApplication.cxx#L1347. and before calling `gSystem->Abort()`, we call `gSystem->IgnoreSignal(kSigAbort)`, so that `TXXSystem::DispatchSignals` is not even invoked when the user types `.qqqqqq` from the ROOT prompt. This fixes the case of not printing an unexpected abort signal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:338,usability,user,user,338,"Ok what about this: we throw away the changes currently proposed in this PR, and instead we go here:. https://github.com/root-project/root/blob/master/core/base/src/TApplication.cxx#L1347. and before calling `gSystem->Abort()`, we call `gSystem->IgnoreSignal(kSigAbort)`, so that `TXXSystem::DispatchSignals` is not even invoked when the user types `.qqqqqq` from the ROOT prompt. This fixes the case of not printing an unexpected abort signal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:122,deployability,Stack,Stack,122,"Humm ... yes but this would not take care of the infinite recursion ... . So, the PR is probably right .. never print the Stack Trace (nor call ::abort) during that signal handling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:165,security,sign,signal,165,"Humm ... yes but this would not take care of the infinite recursion ... . So, the PR is probably right .. never print the Stack Trace (nor call ::abort) during that signal handling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:128,testability,Trace,Trace,128,"Humm ... yes but this would not take care of the infinite recursion ... . So, the PR is probably right .. never print the Stack Trace (nor call ::abort) during that signal handling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:349,deployability,stack,stack,349,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:103,reliability,doe,does,103,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:392,safety,except,exception,392,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:527,safety,except,exception,527,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:163,security,sign,signal,163,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:191,security,sign,signal,191,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:355,testability,trace,trace,355,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:98,usability,User,User,98,"I am not sure how the infinite recursion can happen in my last proposal? For our three cases:. 1. User does `.qqqqqq` from the ROOT prompt, we force to ignore the signal (i.e. unregister the signal handler), then emit a `SIGABRT` which is handled by the system. 2. Application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs, the stack trace is printed. 3. PyROOT sets the exception handler, application unexpectedly emits a `SIGABRT`, our `DispatchSignals` handler runs and invokes `HandleException` on the exception handler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:112,deployability,stack,stack,112,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:255,deployability,stack,stack,255,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:386,deployability,stack,stack,386,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:517,deployability,stack,stack,517,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:56,reliability,doe,does,56,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:129,security,sign,signal,129,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:174,security,sign,signal,174,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:224,security,sign,signal,224,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:305,security,sign,signal,305,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:355,security,sign,signal,355,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:436,security,sign,signal,436,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:486,security,sign,signal,486,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:118,testability,trace,trace,118,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:261,testability,trace,trace,261,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:392,testability,trace,trace,392,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:523,testability,trace,trace,523,"> For our three cases:. They are more cases, but your 2 does an infinite recursion because *after* printing the stack trace, the signal handler calls ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort which sends the signal (at least on MacOS) which is caught by the signal handler which print the stack trace and then call ::abort etc ... :).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:63,deployability,stack,stack,63,"You say the abort signal is triggered again after printing the stack trace, could you point to the code that triggers the signal again? At least in Linux I cannot reproduce this infinite recursion :disappointed: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:18,security,sign,signal,18,"You say the abort signal is triggered again after printing the stack trace, could you point to the code that triggers the signal again? At least in Linux I cannot reproduce this infinite recursion :disappointed: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:122,security,sign,signal,122,"You say the abort signal is triggered again after printing the stack trace, could you point to the code that triggers the signal again? At least in Linux I cannot reproduce this infinite recursion :disappointed: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:69,testability,trace,trace,69,"You say the abort signal is triggered again after printing the stack trace, could you point to the code that triggers the signal again? At least in Linux I cannot reproduce this infinite recursion :disappointed: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5897,availability,error,error,5897,"frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:120,deployability,stack,stack,120,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:7426,deployability,stack,stack,7426," + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347:13. frame #62: 0x00000001001592f4 libCore.so`TApplication::Run(this=0x0000000101209850, retrn=false) at TApplication.cxx:1623:13. frame #63: 0x00000001000d5336 libRint.so`TRint::Run(this=0x0000000101209850, retrn=false) at TRint.cxx:462:18. frame #64: 0x0000000100001e84 root.exe`main(argc=1, argv=0x00007ffeefbff668) at rmain.cxx:30:12. frame #65: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. frame #66: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. ```. with the ExitOnException then .qqqqq (currently on my macos) prints the stack trace and goes back to the prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:7392,energy efficiency,current,currently,7392," + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347:13. frame #62: 0x00000001001592f4 libCore.so`TApplication::Run(this=0x0000000101209850, retrn=false) at TApplication.cxx:1623:13. frame #63: 0x00000001000d5336 libRint.so`TRint::Run(this=0x0000000101209850, retrn=false) at TRint.cxx:462:18. frame #64: 0x0000000100001e84 root.exe`main(argc=1, argv=0x00007ffeefbff668) at rmain.cxx:30:12. frame #65: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. frame #66: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. ```. with the ExitOnException then .qqqqq (currently on my macos) prints the stack trace and goes back to the prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:158,integrability,queue,queue,158,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:158,performance,queue,queue,158,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5897,performance,error,error,5897,"frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5897,safety,error,error,5897,"frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:205,security,sign,signal,205,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1221,security,sign,signum,1221,"rame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #18: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #19: 0x000000010038fbb1 l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1362,security,sign,signum,1362,"84. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #18: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #19: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #20: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:2484,security,sign,signum,2484,"0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #18: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #19: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #20: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #21: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #22: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #23: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #24: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #25: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #26: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #27: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #28: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #29: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #30: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #31: 0x000000010038fbb1 l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:2625,security,sign,signum,2625,"e #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #18: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #19: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #20: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #21: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #22: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #23: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #24: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #25: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #26: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #27: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #28: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #29: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #30: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #31: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #32: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:3747,security,sign,signum,3747,"0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #25: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #26: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #27: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #28: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #29: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #30: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #31: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #32: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #33: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #34: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #35: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #36: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #37: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #38: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #39: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #40: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #41: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #42: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #43: 0x000000010038fbb1 l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:3888,security,sign,signum,3888,"e #26: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #27: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #28: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #29: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #30: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #31: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #32: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #33: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #34: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #35: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #36: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #37: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #38: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #39: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #40: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #41: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #42: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #43: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #44: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5010,security,sign,signum,5010,"0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #37: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #38: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #39: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #40: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #41: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #42: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #43: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #44: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5151,security,sign,signum,5151,"e #38: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #39: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #40: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #41: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #42: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #43: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #44: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:126,testability,trace,traces,126,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:7432,testability,trace,trace,7432," + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347:13. frame #62: 0x00000001001592f4 libCore.so`TApplication::Run(this=0x0000000101209850, retrn=false) at TApplication.cxx:1623:13. frame #63: 0x00000001000d5336 libRint.so`TRint::Run(this=0x0000000101209850, retrn=false) at TRint.cxx:462:18. frame #64: 0x0000000100001e84 root.exe`main(argc=1, argv=0x00007ffeefbff668) at rmain.cxx:30:12. frame #65: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. frame #66: 0x00007fff5a9e43d5 libdyld.dylib`start + 1. ```. with the ExitOnException then .qqqqq (currently on my macos) prints the stack trace and goes back to the prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:191,usability,stop,stop,191,"After calling:. ```. gApplication->ExitOnException(TApplication::kAbort);. ```. and doing .qqqq or other aborts you get stack traces like:. ```. * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT. * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10. frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18. frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27. frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32. frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10. frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19. frame #17: 0x00000001000d71de libRint.so`TRint::HandleExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:5897,usability,error,error,5897,"frame #45: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11. frame #46: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29. frame #47: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29. frame #48: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11. frame #49: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284. frame #50: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127. frame #51: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4. frame #52: 0x0000000100156db5 libCore.so`TApplication::ProcessLine(this=0x0000000101209850, line="".qqqqqq"", sync=false, err=0x00007ffeefbfce54) at TApplication.cxx:1348:16. frame #53: 0x00000001000d5a02 libRint.so`TRint::ProcessLineNr(this=0x0000000101209850, filestem=""ROOT_prompt_"", line="".qqqqqq"", error=0x00007ffeefbfce54) at TRint.cxx:763:11. frame #54: 0x00000001000d6d61 libRint.so`TRint::HandleTermInput(this=0x0000000101209850) at TRint.cxx:609:13. frame #55: 0x00000001000d2bda libRint.so`TTermInputHandler::Notify(this=0x000000010105c0d0) at TRint.cxx:131:25. frame #56: 0x00000001000d7c19 libRint.so`TTermInputHandler::ReadNotify(this=0x000000010105c0d0) at TRint.cxx:123:33. frame #57: 0x0000000100392402 libCore.so`TUnixSystem::CheckDescriptors(this=0x0000000101106340) at TUnixSystem.cxx:1311:17. frame #58: 0x0000000100391da7 libCore.so`TUnixSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TUnixSystem.cxx:1066:14. frame #59: 0x000000010038c37c libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000101106340, pendingOnly=false) at TMacOSXSystem.mm:358:27. frame #60: 0x00000001001f5d6e libCore.so`TSystem::InnerLoop(this=0x0000000101106340) at TSystem.cxx:397:4. frame #61: 0x00000001001f5bad libCore.so`TSystem::Run(this=0x0000000101106340) at TSystem.cxx:347",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:651,deployability,stack,stack,651,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:929,deployability,stack,stack,929,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:984,deployability,stack,stack,984,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:377,interoperability,specif,specified,377,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1188,interoperability,registr,registration,1188,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:460,safety,avoid,avoid,460,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:963,safety,prevent,prevent,963,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:963,security,preven,prevent,963,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:657,testability,trace,trace,657,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:935,testability,trace,trace,935,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:990,testability,trace,trace,990,"I see, thanks @pcanal , I indeed get the infinite recursion for:. ```. root.exe -b -l -e 'gErrorAbortLevel = kWarning;Warning(""prompt"",""finido .."")'. ```. The second case of infinite recursion:. ```. root.exe -b -l -e 'gApplication->ExitOnException(TApplication::kAbort);'. root [] .qqqqqq. ```. can be solved by calling `gSystem->IgnoreSignal(kSigAbort)` in the place where I specified in my comment above, but we still have the first case. At this point, to avoid all cases of infinite recursion, we have the option to come back to the changes originally proposed by this PR. The problem is that, for an unexpected `SIGABRT`, we would not print the stack trace. I thought of adding a condition check here:. https://github.com/root-project/root/pull/5034/files#diff-bf6694106c88ff6a674af44b92371bbaR3635. to also see if `gApplication` is `TRint` (I come from the ROOT prompt), and only in that case I return and don't print the stack trace. But that would still prevent printing the stack trace in an unexpected `SIGABRT` from the ROOT prompt (not `.qqqqqq`). So what is your opinion @pcanal , do you think there is a way to make it work for all cases or should we think of removing the registration of a handler for `SIGABRT` in TXXXSystem as it was before?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:254,availability,failur,failure,254,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:405,availability,recov,recover,405,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:518,availability,state,state,518,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:254,deployability,fail,failure,254,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:313,deployability,stack,stack,313,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:405,deployability,recov,recover,405,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:620,deployability,stack,stack,620,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:723,deployability,Stack,StackTrack,723,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:794,deployability,stack,stack,794,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:518,integrability,state,state,518,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:254,performance,failur,failure,254,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:254,reliability,fail,failure,254,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:405,reliability,recov,recover,405,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:405,safety,recov,recover,405,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:902,safety,avoid,avoid,902,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:80,security,sign,signal,80,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:405,security,recov,recover,405,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:277,testability,assert,assert,277,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:319,testability,trace,trace,319,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:364,testability,assert,assert,364,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:35,usability,clear,clear,35,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:187,usability,clear,clear,187,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:215,usability,behavi,behavior,215,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:416,usability,stop,stop,416,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:444,usability,stop,stop,444,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:485,usability,stop,stop,485,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert). * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:453,availability,failur,failure,453,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:625,availability,recov,recover,625,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:738,availability,state,state,738,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:931,availability,error,error,931,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1134,availability,fault,fault,1134,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:215,deployability,stack,stack,215,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:321,deployability,Stack,StackTrace,321,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:375,deployability,stack,stack,375,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:453,deployability,fail,failure,453,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:580,deployability,stack,stack,580,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:625,deployability,recov,recover,625,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:829,energy efficiency,current,current,829,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1134,energy efficiency,fault,fault,1134,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:493,integrability,messag,message,493,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:738,integrability,state,state,738,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:493,interoperability,messag,message,493,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:453,performance,failur,failure,453,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:931,performance,error,error,931,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1134,performance,fault,fault,1134,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:453,reliability,fail,failure,453,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:625,reliability,recov,recover,625,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1038,reliability,doe,does,1038,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1134,reliability,fault,fault,1134,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:132,safety,avoid,avoid,132,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:625,safety,recov,recover,625,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:931,safety,error,error,931,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1134,safety,fault,fault,1134,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:7,security,modif,modified,7,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:112,security,sign,signal,112,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:625,security,recov,recover,625,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:221,testability,trace,trace,221,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:266,testability,assert,assert,266,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:381,testability,trace,trace,381,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:434,testability,assert,assert,434,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:446,testability,assert,assert,446,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:586,testability,trace,trace,586,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:636,usability,stop,stop,636,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:664,usability,stop,stop,664,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:705,usability,stop,stop,705,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:846,usability,stop,stops,846,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:931,usability,error,error,931,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:968,usability,stop,stop,968,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:1047,usability,stop,stop,1047,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:11,deployability,build,builds,11,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:131,deployability,stack,stack,131,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:22,energy efficiency,green,green,22,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:137,testability,trace,trace,137,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:36,usability,confirm,confirm,36,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5034:146,usability,stop,stopping,146,"Hi @pcanal builds are green, if you confirm I will merge. We can still come back later and revise our decisions about printing the stack trace or stopping the process if necessary, but at least this will solve the CMS issue with `.qqqqqq` reported in ROOT-10545.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5034
https://github.com/root-project/root/pull/5036:141,deployability,updat,update,141,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:199,interoperability,bind,bindings,199,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:199,modifiability,bind,bindings,199,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:90,safety,test,test,90,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:141,safety,updat,update,141,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:243,safety,test,test,243,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:273,safety,test,test,273,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:141,security,updat,update,141,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:90,testability,test,test,90,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:243,testability,test,test,243,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:273,testability,test,test,273,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:82,availability,failur,failure,82,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:82,deployability,fail,failure,82,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:82,performance,failur,failure,82,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:82,reliability,fail,failure,82,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:77,safety,test,test,77,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:77,testability,test,test,77,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:11,deployability,build,build,11,@ph-sftbot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:11,deployability,build,build,11,@ph-sftbot build just on ROOT-fedora27/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora27/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5037:76,performance,time,time,76,Could we get a comment around these specially ordered includes so that next time somebody does not reorder by name for instance.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:90,reliability,doe,does,90,Could we get a comment around these specially ordered includes so that next time somebody does not reorder by name for instance.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:151,availability,consist,consistency,151,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:27,safety,detect,detect,27,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:72,safety,compl,complain,72,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:27,security,detect,detect,27,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:72,security,compl,complain,72,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:151,usability,consist,consistency,151,"Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:153,availability,consist,consistency,153,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:596,integrability,coupl,couple,596,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:596,modifiability,coupl,couple,596,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:322,reliability,doe,does,322,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:29,safety,detect,detect,29,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:74,safety,compl,complain,74,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:716,safety,safe,safe,716,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:29,security,detect,detect,29,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:74,security,compl,complain,74,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:596,testability,coupl,couple,596,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5037:153,usability,consist,consistency,153,"> Theoretically, cppyy could detect if one of those macros is defined and complain it should be included first. This would be a better way we can ensure consistency. Sorry I came up with this on a second iteration... I am not sure this is something to be handled by Cppyy, I see it more as a Python thing. And what Python does to handle this issue is tell developers to first include its header, instead of checking for the macros in its header. > @etejedor, should one do the same in all other sources where Python.h appears. I guess, TMemoryRegulator.h also should be fixed same way. I fixed a couple more cases, thanks, they didn't show any issue (not every case has to be an issue) but it is better to be on the safe side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5038:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04-i386/cxx14 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04-i386/cxx14 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04-i386/cxx14 with flags -DCTEST_TEST_EXCLUDE_NONE=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:14,availability,failur,failures,14,The left over failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:14,deployability,fail,failures,14,The left over failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:14,performance,failur,failures,14,The left over failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5038:14,reliability,fail,failures,14,The left over failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5038
https://github.com/root-project/root/pull/5039:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:12,availability,failur,failures,12,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:12,deployability,fail,failures,12,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:33,deployability,infrastructur,infrastructure,33,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:12,performance,failur,failures,12,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:12,reliability,fail,failures,12,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:91,deployability,releas,releases,91,"@pcanal I see that the commit is in master but it seems to be missing from the recent ROOT releases (v6-20-02, v6-20-04). It's an important fix for ALICE Grid jobs. Can it be included in the future ROOT releases? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:203,deployability,releas,releases,203,"@pcanal I see that the commit is in master but it seems to be missing from the recent ROOT releases (v6-20-02, v6-20-04). It's an important fix for ALICE Grid jobs. Can it be included in the future ROOT releases? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:36,deployability,patch,patch,36,I will add to the commit to the v20 patch branch today (i.e. it will be part of v6.20/06).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:36,safety,patch,patch,36,I will add to the commit to the v20 patch branch today (i.e. it will be part of v6.20/06).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5039:36,security,patch,patch,36,I will add to the commit to the v20 patch branch today (i.e. it will be part of v6.20/06).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5041:29,deployability,version,version,29,@lmoneta I have push the new version. May be you can look at it. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5041
https://github.com/root-project/root/pull/5041:29,integrability,version,version,29,@lmoneta I have push the new version. May be you can look at it. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5041
https://github.com/root-project/root/pull/5041:29,modifiability,version,version,29,@lmoneta I have push the new version. May be you can look at it. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5041
https://github.com/root-project/root/pull/5049:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:50,integrability,messag,message,50,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:113,integrability,messag,message,113,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:50,interoperability,messag,message,50,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:113,interoperability,messag,message,113,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:146,security,access,access,146,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:255,security,access,access,255,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5050:146,energy efficiency,optim,optimization,146,Old code can be always activated again - I only add new method to handle special situation when there is no inner surface in pgon. Plus add small optimization.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5050
https://github.com/root-project/root/pull/5050:146,performance,optimiz,optimization,146,Old code can be always activated again - I only add new method to handle special situation when there is no inner surface in pgon. Plus add small optimization.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5050
https://github.com/root-project/root/pull/5051:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5051
https://github.com/root-project/root/pull/5051:0,availability,Failur,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5051
https://github.com/root-project/root/pull/5051:0,deployability,Fail,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5051
https://github.com/root-project/root/pull/5051:0,performance,Failur,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5051
https://github.com/root-project/root/pull/5051:0,reliability,Fail,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5051
https://github.com/root-project/root/pull/5056:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5056:4,availability,failur,failure,4,The failure is from broken reference string. I do not see how this could relate to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5056:4,deployability,fail,failure,4,The failure is from broken reference string. I do not see how this could relate to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5056:4,performance,failur,failure,4,The failure is from broken reference string. I do not see how this could relate to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5056:4,reliability,fail,failure,4,The failure is from broken reference string. I do not see how this could relate to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5057:13,usability,user,user-images,13,![x](https://user-images.githubusercontent.com/6951222/75339867-a03bd780-5891-11ea-8aab-e6bcc0b4dcb5.png). New plotting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5057
https://github.com/root-project/root/pull/5062:19,availability,error,error,19,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:257,availability,Failur,Failure,257,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:175,deployability,build,build,175,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:209,deployability,build,build,209,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:257,deployability,Fail,Failure,257,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:19,performance,error,error,19,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:257,performance,Failur,Failure,257,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:257,reliability,Fail,Failure,257,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:14,safety,test,test,14,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:19,safety,error,error,19,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:230,safety,test,test,230,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:14,testability,test,test,14,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:230,testability,test,test,230,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:19,usability,error,error,19,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```. /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure. Expected: files->At(4)->GetTitle(). Which is: ""root://some.domain/path/to/file.root"". To be equal to: ""root://some.domain/path//to/file.root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:68,availability,failur,failure,68,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:68,deployability,fail,failure,68,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:68,performance,failur,failure,68,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:68,reliability,fail,failure,68,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:63,safety,test,test,63,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:63,testability,test,test,63,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:143,usability,help,helps,143,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:97,availability,failur,failure,97,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:184,availability,failur,failure,184,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:7,deployability,build,builds,7,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:20,deployability,automat,automatic,20,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:97,deployability,fail,failure,97,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:184,deployability,fail,failure,184,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:89,energy efficiency,current,current,89,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:97,performance,failur,failure,97,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:184,performance,failur,failure,184,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:97,reliability,fail,failure,97,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:184,reliability,fail,failure,184,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:20,testability,automat,automatic,20,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:166,testability,simpl,simply,166,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:166,usability,simpl,simply,166,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5065:38,deployability,fail,failed,38,"Jenkins `Finished: SUCCESS`, but show failed status - strange.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5065
https://github.com/root-project/root/pull/5065:38,reliability,fail,failed,38,"Jenkins `Finished: SUCCESS`, but show failed status - strange.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5065
https://github.com/root-project/root/pull/5065:45,usability,statu,status,45,"Jenkins `Finished: SUCCESS`, but show failed status - strange.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5065
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu1904-clang/default with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ubuntu1804-clangHEAD with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ubuntu1904-clang/default with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ubuntu1904-clang with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu1904-clang with flags -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:17,deployability,build,build,17,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:82,deployability,build,build,82,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:51,modifiability,concern,concerned,51,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:159,safety,sanit,sanitizer,159,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:159,security,sanit,sanitizer,159,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:51,testability,concern,concerned,51,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:192,usability,clear,clear,192,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:19,deployability,build,build,19,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:84,deployability,build,build,84,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:53,modifiability,concern,concerned,53,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:161,safety,sanit,sanitizer,161,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:161,security,sanit,sanitizer,161,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:53,testability,concern,concerned,53,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:194,usability,clear,clear,194,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear? Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora30/cxx14 with flags -Dasan=ON -DCMAKE_CXX_COMPILER=""clang++""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -Dasan=ON -DCMAKE_CXX_COMPILER=clang++,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora30/cxx14 with flags ""-Dasan=ON"" ""-DCMAKE_CXX_COMPILER=clang++""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora30/cxx14 with flags -Dasan=ON -DCMAKE_CXX_COMPILER=\\""clang++\\""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_CXX_COMPILER=clang++ -Dasan=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_CXX_COMPILER=clang,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5067:4,availability,failur,failures,4,The failures are obviously not related to this change... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:4,deployability,fail,failures,4,The failures are obviously not related to this change... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:4,performance,failur,failures,4,The failures are obviously not related to this change... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:4,reliability,fail,failures,4,The failures are obviously not related to this change... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5068:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5068
https://github.com/root-project/root/pull/5068:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5068
https://github.com/root-project/root/pull/5068:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5068
https://github.com/root-project/root/pull/5069:66,availability,consist,consistently,66,"What is your algorithm to remove the headers? We usually (but not consistently) strive for include explicitly what you use explicitly (so for example, technically, if a source code use both TString and TObjString it should include both TString.h and TObjString.h even if (at the moment) one includes the other).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:66,usability,consist,consistently,66,"What is your algorithm to remove the headers? We usually (but not consistently) strive for include explicitly what you use explicitly (so for example, technically, if a source code use both TString and TObjString it should include both TString.h and TObjString.h even if (at the moment) one includes the other).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:32,testability,simpl,simple,32,"With `TObjString` is relatively simple - if it used in the code, include should be there. Very similar with `TObjArray`. When removing `TEnv.h`, I checked if `gEnv` there. When removing `TSystem.h` - if `gSystem` used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:32,usability,simpl,simple,32,"With `TObjString` is relatively simple - if it used in the code, include should be there. Very similar with `TObjArray`. When removing `TEnv.h`, I checked if `gEnv` there. When removing `TSystem.h` - if `gSystem` used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:26,availability,error,errors,26,"> to only fix white space errors in lines that you touched. Sorry, this is my default settings. I also using eclipse - how I can remove spaces only on edited lines?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:26,performance,error,errors,26,"> to only fix white space errors in lines that you touched. Sorry, this is my default settings. I also using eclipse - how I can remove spaces only on edited lines?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:26,safety,error,errors,26,"> to only fix white space errors in lines that you touched. Sorry, this is my default settings. I also using eclipse - how I can remove spaces only on edited lines?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:26,usability,error,errors,26,"> to only fix white space errors in lines that you touched. Sorry, this is my default settings. I also using eclipse - how I can remove spaces only on edited lines?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:119,interoperability,format,formatted,119,"Let see - if tests will run, I will rebase tomorrow changes I did with TMVA and RooFit - there sources are not as good formatted. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:13,safety,test,tests,13,"Let see - if tests will run, I will rebase tomorrow changes I did with TMVA and RooFit - there sources are not as good formatted. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:13,testability,test,tests,13,"Let see - if tests will run, I will rebase tomorrow changes I did with TMVA and RooFit - there sources are not as good formatted. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:38,safety,avoid,avoid,38,"@hageboeck . I rebase code, trying to avoid reformat of rest of the code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:152,integrability,event,eventual,152,It may be worth setting up include what you use (https://include-what-you-use.org/) to make sure we are not breaking things. We should be able to catch eventual problems with transitive includes with -Dcxxmodules=On but we cannot trigger this check in the PR unfortunately. CC: @oshadura,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:187,deployability,depend,dependencies,187,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:262,deployability,automat,automatic,262,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:187,integrability,depend,dependencies,187,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:187,modifiability,depend,dependencies,187,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:187,safety,depend,dependencies,187,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:346,safety,compl,complete,346,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:483,safety,avoid,avoid,483,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:346,security,compl,complete,346,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:187,testability,depend,dependencies,187,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:262,testability,automat,automatic,262,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:272,usability,tool,tool,272,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:547,usability,user,users,547,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5071:9,deployability,fail,failing,9,JupyROOT failing tests has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5071:9,reliability,fail,failing,9,JupyROOT failing tests has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5071:17,safety,test,tests,17,JupyROOT failing tests has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5071:17,testability,test,tests,17,JupyROOT failing tests has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5072:91,deployability,depend,dependncies,91,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:84,energy efficiency,Reduc,Reduce,84,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:91,integrability,depend,dependncies,91,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:91,modifiability,depend,dependncies,91,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:91,safety,depend,dependncies,91,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:91,testability,depend,dependncies,91,> What is the benefit? `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:99,deployability,depend,dependncies,99,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:92,energy efficiency,Reduc,Reduce,92,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:99,integrability,depend,dependncies,99,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:99,modifiability,depend,dependncies,99,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:99,safety,depend,dependncies,99,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5072:99,testability,depend,dependncies,99,"> > What is the benefit? > . > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5073:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5073
https://github.com/root-project/root/pull/5073:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5073
https://github.com/root-project/root/pull/5079:98,availability,avail,available,98,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:308,availability,echo,echo,308,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:271,deployability,log,logicalcpu,271,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:36,energy efficiency,current,currently,36,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:76,energy efficiency,core,core,76,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:98,reliability,availab,available,98,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:98,safety,avail,available,98,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:271,safety,log,logicalcpu,271,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:98,security,availab,available,98,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:271,security,log,logicalcpu,271,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:271,testability,log,logicalcpu,271,"@Axel-Naumann , which shell are you currently using, and **nproc** is a GNU core utility which is available default in every Linux distro and shell. If it's not running on your shell I assume you are using a non-Linux machine. . In mac it's alternative is **sysctl -n hw.logicalcpu**, and in windows, it's **echo %NUMBER_OF_PROCESSORS%**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:17,deployability,updat,update,17,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:50,deployability,updat,updates,50,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:17,safety,updat,update,17,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:50,safety,updat,updates,50,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:17,security,updat,update,17,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:50,security,updat,updates,50,> Do you want to update your PR accordingly? what updates I should add? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:14,deployability,log,logicalcpu,14,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:95,energy efficiency,core,cores,95,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:223,energy efficiency,core,cores,223,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:264,energy efficiency,core,cores,264,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:14,safety,log,logicalcpu,14,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:14,security,log,logicalcpu,14,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:124,security,access,access,124,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:14,testability,log,logicalcpu,14,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:54,testability,simpl,simple,54,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:54,usability,simpl,simple,54,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:0,deployability,Updat,Updated,0,"Updated, please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:0,safety,Updat,Updated,0,"Updated, please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:0,security,Updat,Updated,0,"Updated, please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:103,energy efficiency,core,cores,103,"OK, let me be more explicit:. ```. cmake ../root. $ make -j8. In `-j8`, ""8"" is the number of processor cores you have. ```. seems to be enough. I don't think the `-jN` case adds much, I believe people will understand that themselves?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:206,testability,understand,understand,206,"OK, let me be more explicit:. ```. cmake ../root. $ make -j8. In `-j8`, ""8"" is the number of processor cores you have. ```. seems to be enough. I don't think the `-jN` case adds much, I believe people will understand that themselves?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:72,energy efficiency,core,cores,72,"what about this? ```. $make -jN. In -jN, ""N"" is the number of processor cores you have. eg. -j8. ```. otherwise, change you suggested is also fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:11,usability,user,users,11,"I know our users:. > In https://... you say `$make -jN` but that's broken: ""make: the '-j' option requires a positive integer argument"". Please fix! So yeah, I would indeed give the example ""-j8"" and explain that it's just an example, like I tried in my suggestion. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:131,deployability,updat,updated,131,"yes, you are right, I also think -jN may not add much, if they face any problem then they can google it or create an issue. commit updated please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:131,safety,updat,updated,131,"yes, you are right, I also think -jN may not add much, if they face any problem then they can google it or create an issue. commit updated please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:131,security,updat,updated,131,"yes, you are right, I also think -jN may not add much, if they face any problem then they can google it or create an issue. commit updated please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:30,performance,time,time,30,"@Axel-Naumann , Did you found time to look into this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:294,safety,review,review,294,"@codetronaut the same story here, 4 commits to change 1 line of documentation? I don't think it is reasonable. Things to read: https://chris.beams.io/posts/git-commit/ and please google ""why we need to squash commits"". Usually contributors come to ROOT with ready PRs that just require a small review process. I am sorry but I will need to close this PR, since it is not a playground, please reopen PR later when it will be ready.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:294,testability,review,review,294,"@codetronaut the same story here, 4 commits to change 1 line of documentation? I don't think it is reasonable. Things to read: https://chris.beams.io/posts/git-commit/ and please google ""why we need to squash commits"". Usually contributors come to ROOT with ready PRs that just require a small review process. I am sorry but I will need to close this PR, since it is not a playground, please reopen PR later when it will be ready.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:64,usability,document,documentation,64,"@codetronaut the same story here, 4 commits to change 1 line of documentation? I don't think it is reasonable. Things to read: https://chris.beams.io/posts/git-commit/ and please google ""why we need to squash commits"". Usually contributors come to ROOT with ready PRs that just require a small review process. I am sorry but I will need to close this PR, since it is not a playground, please reopen PR later when it will be ready.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5079:340,usability,close,close,340,"@codetronaut the same story here, 4 commits to change 1 line of documentation? I don't think it is reasonable. Things to read: https://chris.beams.io/posts/git-commit/ and please google ""why we need to squash commits"". Usually contributors come to ROOT with ready PRs that just require a small review process. I am sorry but I will need to close this PR, since it is not a playground, please reopen PR later when it will be ready.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5080:320,testability,simpl,simply,320,> Now you just have to find all includes that could also be handled with a forward declaration. ;-). I do not intend to touch such cases. There are many good reasons to have them as is. But I just looked through the code (with Eclipse help) and tried to exclude heavy includes like `TMath.h` or `TVirtualX.h` there they simply not used,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:235,usability,help,help,235,> Now you just have to find all includes that could also be handled with a forward declaration. ;-). I do not intend to touch such cases. There are many good reasons to have them as is. But I just looked through the code (with Eclipse help) and tried to exclude heavy includes like `TMath.h` or `TVirtualX.h` there they simply not used,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:320,usability,simpl,simply,320,> Now you just have to find all includes that could also be handled with a forward declaration. ;-). I do not intend to touch such cases. There are many good reasons to have them as is. But I just looked through the code (with Eclipse help) and tried to exclude heavy includes like `TMath.h` or `TVirtualX.h` there they simply not used,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:143,deployability,build,building,143,@Axel-Naumann @bellenot Something wrong with Jenkins link https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/12463/console - it shows building of previous PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:22,deployability,log,log,22,"What do you mean? The log says:. `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:121,interoperability,conflict,conflicts,121,"What do you mean? The log says:. `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:22,safety,log,log,22,"What do you mean? The log says:. `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:22,security,log,log,22,"What do you mean? The log says:. `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:22,testability,log,log,22,"What do you mean? The log says:. `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5080:55,deployability,build,build,55,"If I click on jenkins link, and then on mac or windows build, I see list of changes from previous PR. But yes, few lines later it says something about merging PR #5080 - somehow misleading. False alarm.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5080
https://github.com/root-project/root/pull/5081:38,integrability,messag,message,38,@kamahori Can you add a proper commit message explaining what this code is doing? (it could be helpful https://chris.beams.io/posts/git-commit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:38,interoperability,messag,message,38,@kamahori Can you add a proper commit message explaining what this code is doing? (it could be helpful https://chris.beams.io/posts/git-commit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:95,usability,help,helpful,95,@kamahori Can you add a proper commit message explaining what this code is doing? (it could be helpful https://chris.beams.io/posts/git-commit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:43,availability,avail,available,43,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:115,availability,failur,failure,115,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:115,deployability,fail,failure,115,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:172,deployability,infrastructur,infrastructure,172,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:187,deployability,configurat,configuration,187,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:187,integrability,configur,configuration,187,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:187,modifiability,configur,configuration,187,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:115,performance,failur,failure,115,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:43,reliability,availab,available,43,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:115,reliability,fail,failure,115,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:29,safety,test,tests,29,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:43,safety,avail,available,43,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:150,safety,test,test,150,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:43,security,availab,available,43,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:187,security,configur,configuration,187,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:29,testability,test,tests,29,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:150,testability,test,test,150,"@kamahori Jenkins results of tests are not available for people without CERN account, I am sorry for this. Windows failure is not connected with your test, but is actually infrastructure configuration issue (you need to fork https://github.com/root-project/roottest and it will be gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:40,integrability,messag,message,40,"Sorry, I'm not sure how to remove merge message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:40,interoperability,messag,message,40,"Sorry, I'm not sure how to remove merge message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:158,integrability,coupl,couple,158,@pcanal asked if you can rename file from TTree.cxx to testTTreeCompression.cxx or something similar not to confuse with actual TTree.cxx sources. I will add couple of comments to fix small typos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:158,modifiability,coupl,couple,158,@pcanal asked if you can rename file from TTree.cxx to testTTreeCompression.cxx or something similar not to confuse with actual TTree.cxx sources. I will add couple of comments to fix small typos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:55,safety,test,testTTreeCompression,55,@pcanal asked if you can rename file from TTree.cxx to testTTreeCompression.cxx or something similar not to confuse with actual TTree.cxx sources. I will add couple of comments to fix small typos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:55,testability,test,testTTreeCompression,55,@pcanal asked if you can rename file from TTree.cxx to testTTreeCompression.cxx or something similar not to confuse with actual TTree.cxx sources. I will add couple of comments to fix small typos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:158,testability,coupl,couple,158,@pcanal asked if you can rename file from TTree.cxx to testTTreeCompression.cxx or something similar not to confuse with actual TTree.cxx sources. I will add couple of comments to fix small typos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:32,availability,failur,failures,32,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:32,deployability,fail,failures,32,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:32,performance,failur,failures,32,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:32,reliability,fail,failures,32,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:27,safety,test,test,27,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:27,testability,test,test,27,"@kamahori no worries about test failures, it is unrelated to your changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:90,modifiability,exten,extended,90,@pcanal can you please review this PR? and give some suggestions how it could be improved extended?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:23,safety,review,review,23,@pcanal can you please review this PR? and give some suggestions how it could be improved extended?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5081:23,testability,review,review,23,@pcanal can you please review this PR? and give some suggestions how it could be improved extended?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5082:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:113,availability,failur,failure,113,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:158,availability,state,state,158,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:113,deployability,fail,failure,113,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:158,integrability,state,state,158,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:113,performance,failur,failure,113,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5082:113,reliability,fail,failure,113,@phsft-bot build just on mac1014/cxx17 with flags -Druntime_cxxmodules=On. The PR is only relevant for unix. The failure on windows is due to some broken git state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5082
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build with flags -Dfail-on-missing=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build with flags -Dfail-on-missing=OFF just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build with flags -Dfail-on-missing=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build with flags -Dfail-on-missing=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -Dfail-on-missing=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:71,availability,servic,services,71,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:278,availability,servic,services,278,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:511,availability,servic,services,511,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:748,availability,servic,services,748,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:2,deployability,Build,Build,2,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:8,deployability,fail,failed,8,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:71,deployability,servic,services,71,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:123,deployability,build,build,123,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:172,deployability,Fail,Failing,172,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:278,deployability,servic,services,278,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:330,deployability,build,build,330,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:511,deployability,servic,services,511,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:563,deployability,build,build,563,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:748,deployability,servic,services,748,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:800,deployability,build,build,800,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:993,deployability,fail,failing,993,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:71,integrability,servic,services,71,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:278,integrability,servic,services,278,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:459,integrability,buffer,buffer,459,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:511,integrability,servic,services,511,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:615,integrability,buffer,buffer,615,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:748,integrability,servic,services,748,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:71,modifiability,servic,services,71,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:278,modifiability,servic,services,278,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:511,modifiability,servic,services,511,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:748,modifiability,servic,services,748,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:8,reliability,fail,failed,8,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:172,reliability,Fail,Failing,172,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:993,reliability,fail,failing,993,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:180,safety,test,tests,180,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:342,safety,test,testReport,342,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:575,safety,test,testReport,575,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:812,safety,test,testReport,812,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:1042,safety,test,testSummary,1042,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:1144,safety,test,testSummary,1144,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:180,testability,test,tests,180,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:342,testability,test,testReport,342,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:575,testability,test,testReport,575,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:812,testability,test,testReport,812,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:1042,testability,test,testSummary,1042,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:1144,testability,test,testSummary,1144,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:917,usability,confirm,confirm,917,> Build failed on mac1014/cxx17. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/console). > . > ### Warnings:. > ### Failing tests:. > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/). > * [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/). > * [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/). @eguiraud can you confirm that the two fcc ones are not related to these changes? we see them failing also in other PRs:. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-writeFcc&date=2020-03-24. http://cdash.cern.ch/testSummary.php?project=1&name=roottest-root-dataframe-test_readFcc&date=2020-03-24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:86,availability,failur,failure,86,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:20,deployability,fail,fails,20,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:45,deployability,fail,fails,45,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:86,deployability,fail,failure,86,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:177,deployability,fail,failed,177,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:86,performance,failur,failure,86,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:20,reliability,fail,fails,20,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:45,reliability,fail,fails,45,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:86,reliability,fail,failure,86,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:177,reliability,fail,failed,177,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:127,safety,safe,safe,127,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:172,safety,test,test,172,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5083:172,testability,test,test,172,"@maxgalli `readFcc` fails because `writeFcc` fails. I have no idea what's causing the failure in `writeFcc`, but I assume it's safe to say it's not these changes since the test failed in the exact same way in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5083
https://github.com/root-project/root/pull/5084:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:55,availability,error,errors,55,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:47,performance,time,timeout,47,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:55,performance,error,errors,55,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:39,safety,prevent,prevent,39,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:47,safety,timeout,timeout,47,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:55,safety,error,errors,55,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:39,security,preven,prevent,39,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:55,usability,error,errors,55,"@kgizdov please fork also roottest, to prevent timeout errors on `windows10/cxx14`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:124,integrability,messag,message,124,"@oshadura sure. As soon as everyone is happy and all proposed changes are in, I will squash the commits with one big commit message. @bellenot I did - does it work now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:124,interoperability,messag,message,124,"@oshadura sure. As soon as everyone is happy and all proposed changes are in, I will squash the commits with one big commit message. @bellenot I did - does it work now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:151,reliability,doe,does,151,"@oshadura sure. As soon as everyone is happy and all proposed changes are in, I will squash the commits with one big commit message. @bellenot I did - does it work now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:77,deployability,build,build,77,> @bellenot I did - does it work now? @kgizdov Thanks! We'll see at the next build of one of your PRs (I unlocked the last build by hand) :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:123,deployability,build,build,123,> @bellenot I did - does it work now? @kgizdov Thanks! We'll see at the next build of one of your PRs (I unlocked the last build by hand) :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:20,reliability,doe,does,20,> @bellenot I did - does it work now? @kgizdov Thanks! We'll see at the next build of one of your PRs (I unlocked the last build by hand) :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:32,deployability,version,version,32,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:47,deployability,patch,patch,47,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:32,integrability,version,version,32,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:32,modifiability,version,version,32,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:47,safety,patch,patch,47,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:47,security,patch,patch,47,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:32,deployability,build,builds,32,"I'm confused. I checked all the builds manually and they all succeeded, but the overall build is set as failed. Anyone know what to be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:88,deployability,build,build,88,"I'm confused. I checked all the builds manually and they all succeeded, but the overall build is set as failed. Anyone know what to be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:104,deployability,fail,failed,104,"I'm confused. I checked all the builds manually and they all succeeded, but the overall build is set as failed. Anyone know what to be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:104,reliability,fail,failed,104,"I'm confused. I checked all the builds manually and they all succeeded, but the overall build is set as failed. Anyone know what to be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5085:11,deployability,build,build,11,@phsft-bot build with flags -Ddev=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:81,deployability,log,log,81,"I think it is ready to go, but why Jenkins is red? (I can't open this particular log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:81,safety,log,log,81,"I think it is ready to go, but why Jenkins is red? (I can't open this particular log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:81,security,log,log,81,"I think it is ready to go, but why Jenkins is red? (I can't open this particular log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:81,testability,log,log,81,"I think it is ready to go, but why Jenkins is red? (I can't open this particular log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5085:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5085
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:107,integrability,messag,message,107,@gargvaibhav64 please provide description of PR (why are you doing this changes) and please improve commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:107,interoperability,messag,message,107,@gargvaibhav64 please provide description of PR (why are you doing this changes) and please improve commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,availability,failur,failures,24,"@gargvaibhav64, Jenkins failures for you: https://gist.github.com/oshadura/3bbb2f650bb77dbde1c2c187af363822 . Please check if code compile locally",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,deployability,fail,failures,24,"@gargvaibhav64, Jenkins failures for you: https://gist.github.com/oshadura/3bbb2f650bb77dbde1c2c187af363822 . Please check if code compile locally",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,performance,failur,failures,24,"@gargvaibhav64, Jenkins failures for you: https://gist.github.com/oshadura/3bbb2f650bb77dbde1c2c187af363822 . Please check if code compile locally",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,reliability,fail,failures,24,"@gargvaibhav64, Jenkins failures for you: https://gist.github.com/oshadura/3bbb2f650bb77dbde1c2c187af363822 . Please check if code compile locally",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:23,deployability,manag,manage,23,@gargvaibhav64 did you manage to have progress here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:23,energy efficiency,manag,manage,23,@gargvaibhav64 did you manage to have progress here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:23,safety,manag,manage,23,@gargvaibhav64 did you manage to have progress here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:38,usability,progress,progress,38,@gargvaibhav64 did you manage to have progress here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:18,deployability,build,build,18,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,deployability,fail,failing,24,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:46,deployability,Build,Build,46,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:63,deployability,fail,fail,63,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,reliability,fail,failing,24,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:63,reliability,fail,fail,63,"@oshadura I fixed build failing on Unix/OS X. Build will still fail on Windows for Druntime_cxxmodules=On, working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:88,deployability,infrastructur,infrastructure,88,"Did you clone roottest.git? (it usually fist thing you need to do, since a small bug in infrastructure system)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:120,availability,error,error,120,"@oshadura Yes, I had cloned rootest.git earlier, I just rebased my master branch to the current master. . Can I see the error output please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:88,energy efficiency,current,current,88,"@oshadura Yes, I had cloned rootest.git earlier, I just rebased my master branch to the current master. . Can I see the error output please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:120,performance,error,error,120,"@oshadura Yes, I had cloned rootest.git earlier, I just rebased my master branch to the current master. . Can I see the error output please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:120,safety,error,error,120,"@oshadura Yes, I had cloned rootest.git earlier, I just rebased my master branch to the current master. . Can I see the error output please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:120,usability,error,error,120,"@oshadura Yes, I had cloned rootest.git earlier, I just rebased my master branch to the current master. . Can I see the error output please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:4,deployability,build,build,4,"The build should be green this time, @vgvassilev please review it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:20,energy efficiency,green,green,20,"The build should be green this time, @vgvassilev please review it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:31,performance,time,time,31,"The build should be green this time, @vgvassilev please review it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:56,safety,review,review,56,"The build should be green this time, @vgvassilev please review it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:56,testability,review,review,56,"The build should be green this time, @vgvassilev please review it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,deployability,fail,failing,24,"@oshadura Can I see the failing output please? . Also, did the Windows build succeed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:71,deployability,build,build,71,"@oshadura Can I see the failing output please? . Also, did the Windows build succeed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:24,reliability,fail,failing,24,"@oshadura Can I see the failing output please? . Also, did the Windows build succeed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5086:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14 with flags -Druntime_cxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,fail,fail,11,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:399,integrability,pub,public,399,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:436,integrability,pub,public,436,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:998,integrability,pub,public,998,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:510,modifiability,Paramet,Parameters,510,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,reliability,fail,fail,11,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:219,reliability,doe,does,219,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:800,reliability,DoE,DoEvalPar,800,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:684,safety,test,test,684,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:715,safety,Test,Test,715,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:910,safety,test,testStatFunctions,910,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:955,safety,Test,Test,955,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1033,safety,test,testWrite,1033,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:684,testability,test,test,684,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:715,testability,Test,Test,715,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:910,testability,test,testStatFunctions,910,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:955,testability,Test,Test,955,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1033,testability,test,testWrite,1033,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:258,usability,Minim,Minimal,258,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:. ```. cat stressMC_reduced.cxx . #include <TTree.h>. #include <TF1.h>. using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {. public:. unsigned int NPar() const override { return 0; }. const double * Parameters() const override { return nullptr; }. ROOT::Math::IGenFunction * Clone() const override { return nullptr; }. void SetParameters(const double * p) override { }. // test cumulative function. void Test() {. TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);. }. private:. double DoEvalPar(double x, const double * ) const override {. return 0;. }. };. typedef StatFunction Dist_beta;. int testStatFunctions() {. Dist_beta dist;. dist.Test();. return 0;. }. class VectorTest {. public:. template<class V>. double testWrite(V & dataV, std::string typeName="""") {. TTree tree(""VectorTree"","""");. // need to add namespace to full type name. if (typeName == """") {. }. tree.Fill();. return 0;. }. };. int stressMC_reduced(double nscale = 1) {. return 0;. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:25,safety,test,testing,25,Is this WIP or ready for testing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:25,testability,test,testing,25,Is this WIP or ready for testing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:62,deployability,manag,manage,62,> Is this WIP or ready for testing? It is ready to go in if I manage to resolve the last issue in https://github.com/root-project/root/pull/5094#issuecomment-607082228,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:62,energy efficiency,manag,manage,62,> Is this WIP or ready for testing? It is ready to go in if I manage to resolve the last issue in https://github.com/root-project/root/pull/5094#issuecomment-607082228,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:27,safety,test,testing,27,> Is this WIP or ready for testing? It is ready to go in if I manage to resolve the last issue in https://github.com/root-project/root/pull/5094#issuecomment-607082228,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:62,safety,manag,manage,62,> Is this WIP or ready for testing? It is ready to go in if I manage to resolve the last issue in https://github.com/root-project/root/pull/5094#issuecomment-607082228,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:27,testability,test,testing,27,> Is this WIP or ready for testing? It is ready to go in if I manage to resolve the last issue in https://github.com/root-project/root/pull/5094#issuecomment-607082228,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:292,availability,avail,available,292,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:208,energy efficiency,core,core,208,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:282,energy efficiency,current,currently,282,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:427,energy efficiency,load,loading,427,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:876,energy efficiency,core,core,876,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:924,integrability,interfac,interface,924,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:643,interoperability,bind,bindings,643,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:924,interoperability,interfac,interface,924,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:643,modifiability,bind,bindings,643,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:924,modifiability,interfac,interface,924,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:427,performance,load,loading,427,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:292,reliability,availab,available,292,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:733,reliability,doe,does,733,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:292,safety,avail,available,292,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:674,safety,test,test,674,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:292,security,availab,available,292,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:674,testability,test,test,674,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out? EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:180,availability,avail,available,180,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:58,energy efficiency,current,current,58,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:180,reliability,availab,available,180,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:21,safety,test,test,21,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:102,safety,compl,completion,102,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:180,safety,avail,available,180,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:102,security,compl,completion,102,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:146,security,expos,expose,146,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:168,security,ident,identifiers,168,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:180,security,availab,available,180,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:21,testability,test,test,21,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:66,usability,behavi,behavior,66,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:113,usability,close,close,113,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,availability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,availability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,availability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,availability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,availability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,availability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,availability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:2,deployability,Build,Build,2,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:8,deployability,fail,failed,8,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:136,deployability,build,build,136,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:222,deployability,build,buildname,222,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,deployability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:417,deployability,build,build,417,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:445,deployability,Fail,Failing,445,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,deployability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:582,deployability,build,build,582,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,deployability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:817,deployability,build,build,817,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,deployability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1080,deployability,build,build,1080,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,deployability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1316,deployability,build,build,1316,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,deployability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1551,deployability,build,build,1551,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,deployability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1784,deployability,build,build,1784,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1884,deployability,infrastructur,infrastructure,1884,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1913,deployability,log,login,1913,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:201,integrability,filter,filtercount,201,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,integrability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,integrability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,integrability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,integrability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,integrability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,integrability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,integrability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,modifiability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,modifiability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,modifiability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,modifiability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,modifiability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,modifiability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,modifiability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:23,performance,perform,performance-,23,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:271,performance,perform,performance-,271,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:8,reliability,fail,failed,8,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:445,reliability,Fail,Failing,445,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:453,safety,test,tests,453,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:482,safety,test,test,482,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:594,safety,test,testReport,594,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:617,safety,test,test,617,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:689,safety,test,test,689,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:829,safety,test,testReport,829,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:868,safety,test,test,868,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1092,safety,test,testReport,1092,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1328,safety,test,testReport,1328,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1563,safety,test,testReport,1563,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1796,safety,test,testReport,1796,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1913,safety,log,login,1913,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1935,safety,test,tests,1935,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1913,security,log,login,1913,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:453,testability,test,tests,453,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:482,testability,test,test,482,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:594,testability,test,testReport,594,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:617,testability,test,test,617,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:689,testability,test,test,689,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:829,testability,test,testReport,829,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:868,testability,test,test,868,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1092,testability,test,testReport,1092,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1328,testability,test,testReport,1328,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1563,testability,test,testReport,1563,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1796,testability,test,testReport,1796,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1913,testability,log,login,1913,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1935,testability,test,tests,1935,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:23,usability,perform,performance-,23,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:271,usability,perform,performance-,271,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,availability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,availability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,availability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,availability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,availability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,availability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,availability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:2,deployability,Build,Build,2,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:8,deployability,fail,failed,8,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:136,deployability,build,build,136,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:222,deployability,build,buildname,222,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,deployability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:417,deployability,build,build,417,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:445,deployability,Fail,Failing,445,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,deployability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:582,deployability,build,build,582,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,deployability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:817,deployability,build,build,817,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,deployability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1080,deployability,build,build,1080,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,deployability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1316,deployability,build,build,1316,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,deployability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1551,deployability,build,build,1551,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,deployability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1784,deployability,build,build,1784,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1875,deployability,fail,fail,1875,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:201,integrability,filter,filtercount,201,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,integrability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,integrability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,integrability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,integrability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,integrability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,integrability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,integrability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:365,modifiability,servic,services,365,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:530,modifiability,servic,services,530,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:765,modifiability,servic,services,765,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1028,modifiability,servic,services,1028,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1264,modifiability,servic,services,1264,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1499,modifiability,servic,services,1499,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1732,modifiability,servic,services,1732,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:23,performance,perform,performance-,23,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:271,performance,perform,performance-,271,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:8,reliability,fail,failed,8,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:445,reliability,Fail,Failing,445,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1875,reliability,fail,fail,1875,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:453,safety,test,tests,453,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:482,safety,test,test,482,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:594,safety,test,testReport,594,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:617,safety,test,test,617,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:689,safety,test,test,689,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:829,safety,test,testReport,829,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:868,safety,test,test,868,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1092,safety,test,testReport,1092,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1328,safety,test,testReport,1328,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1563,safety,test,testReport,1563,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1796,safety,test,testReport,1796,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:453,testability,test,tests,453,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:482,testability,test,test,482,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:594,testability,test,testReport,594,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:617,testability,test,test,617,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:689,testability,test,test,689,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:829,testability,test,testReport,829,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:868,testability,test,test,868,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1092,testability,test,testReport,1092,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1328,testability,test,testReport,1328,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1563,testability,test,testReport,1563,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:1796,testability,test,testReport,1796,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:23,usability,perform,performance-,23,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:271,usability,perform,performance-,271,> Build failed on ROOT-performance-centos7-multicore/default. > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console). > ### Failing tests:. > . > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/). > . > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/). > . > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/). > . > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/). > . > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5094:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5094
https://github.com/root-project/root/pull/5095:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5095
https://github.com/root-project/root/pull/5099:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:24,deployability,build,build,24,"To 'fix' the Windows CI build, please fork the roottest repository (https://github.com/root-project/roottest)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:56,integrability,repositor,repository,56,"To 'fix' the Windows CI build, please fork the roottest repository (https://github.com/root-project/roottest)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:56,interoperability,repositor,repository,56,"To 'fix' the Windows CI build, please fork the roottest repository (https://github.com/root-project/roottest)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:138,availability,down,downloaded,138,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:258,deployability,fail,failed,258,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:320,deployability,fail,failed,320,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:372,deployability,patch,patch,372,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:180,interoperability,share,share,180,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:414,interoperability,share,share,414,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:258,reliability,fail,failed,258,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:320,reliability,fail,failed,320,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:161,safety,test,test,161,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:234,safety,test,tests,234,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:252,safety,test,tests,252,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:309,safety,test,tests,309,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:372,safety,patch,patch,372,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:424,safety,test,test,424,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:342,security,modif,modification,342,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:372,security,patch,patch,372,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:71,testability,understand,understand,71,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:161,testability,test,test,161,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:234,testability,test,tests,234,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:252,testability,test,tests,252,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:309,testability,test,tests,309,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:424,testability,test,test,424,"Hi @pcanal,. I have implemented the changes you requested. . I did not understand though your instruction on ""fix""ing the windows CI. . I downloaded and run the test suit, shall I share the output somehow? The result is. ```bash. 74% tests passed, 240 tests failed out of 934. ```. I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:82,integrability,repositor,repository,82,The Windows CI part requires that your github account has a fork of both the root repository (you already do) but also the roottest repository (you seem to now also do).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:132,integrability,repositor,repository,132,The Windows CI part requires that your github account has a fork of both the root repository (you already do) but also the roottest repository (you seem to now also do).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:82,interoperability,repositor,repository,82,The Windows CI part requires that your github account has a fork of both the root repository (you already do) but also the roottest repository (you seem to now also do).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:132,interoperability,repositor,repository,132,The Windows CI part requires that your github account has a fork of both the root repository (you already do) but also the roottest repository (you seem to now also do).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:18,availability,error,errors,18,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:168,availability,error,error,168,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:305,availability,Error,Error,305,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:406,availability,error,error,406,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:46,deployability,build,build,46,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:88,deployability,build,build,88,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:315,deployability,build,build,315,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:357,deployability,build,build,357,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:363,deployability,build,build,363,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:158,energy efficiency,Load,LoadHDU,158,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:395,integrability,messag,message,395,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:395,interoperability,messag,message,395,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:18,performance,error,errors,18,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:158,performance,Load,LoadHDU,158,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:168,performance,error,error,168,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:305,performance,Error,Error,305,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:406,performance,error,error,406,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:18,safety,error,errors,18,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:168,safety,error,error,168,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:276,safety,except,exception,276,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:305,safety,Error,Error,305,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:406,safety,error,error,406,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:18,usability,error,errors,18,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:168,usability,error,error,168,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:305,usability,Error,Error,305,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:406,usability,error,error,406,The fit tutorials errors is. ```. Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C... Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file. libc++abi.dylib: terminating with uncaught exception of type int. CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):. error code: Child aborted. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:24,interoperability,specif,specify,24,"I am sorry, I forgot to specify the tutorial dir, as at the beginning of the other tutorial scripts. ```C++. TString dir = gROOT->GetTutorialDir();. TFITSHDU* hdu = new TFITSHDU(dir + ""/fitsio/rmf_obs5029747.fits"", 1);. ```. It could execute only from `tutorials/fitsio/`. Apologies",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:4,availability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:4,performance,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:4,safety,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:4,usability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:64,safety,test,tests,64,"Hi @pcanal, could you wait before merging? I am doing some more tests with a file with larger arrays in columns. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:64,testability,test,tests,64,"Hi @pcanal, could you wait before merging? I am doing some more tests with a file with larger arrays in columns. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:196,availability,avail,available,196,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:544,deployability,releas,released,544,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:219,integrability,repositor,repository,219,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:120,interoperability,specif,specifically,120,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:219,interoperability,repositor,repository,219,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:196,reliability,availab,available,196,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:196,safety,avail,available,196,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:372,safety,test,test,372,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:417,safety,test,test-data,417,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:643,safety,input,input,643,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:701,safety,test,tests,701,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:28,security,modif,modification,28,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:196,security,availab,available,196,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:372,testability,test,test,372,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:417,testability,test,test-data,417,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:701,testability,test,tests,701,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:477,usability,tool,tools,477,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:643,usability,input,input,643,"Hello,. sorry for this last modification. . The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/). All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. . It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:38,deployability,fail,failed,38,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:64,deployability,patch,patch,64,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:38,reliability,fail,failed,38,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:45,safety,test,test,45,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:64,safety,patch,patch,64,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:64,security,patch,patch,64,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:45,testability,test,test,45,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch? Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:10,deployability,fail,failed,10,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:36,deployability,patch,patch,36,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:10,reliability,fail,failed,10,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:17,safety,test,test,17,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:36,safety,patch,patch,36,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:36,security,patch,patch,36,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:17,testability,test,test,17,"> are the failed test related to my patch? No, sorry about that - please ignore them. > Is there something else you want me to change, otherwise could you accept it? I'd like @pcanal to have the final say here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5100:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5100:30,deployability,build,build,30,"Cdash tells that the previous build succeeded, let’s retry to get the green gh status.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5100:70,energy efficiency,green,green,70,"Cdash tells that the previous build succeeded, let’s retry to get the green gh status.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5100:79,usability,statu,status,79,"Cdash tells that the previous build succeeded, let’s retry to get the green gh status.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5101:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5101
https://github.com/root-project/root/pull/5103:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5103
https://github.com/root-project/root/pull/5105:165,availability,down,download,165,"About cuDNN, it's not respecting fail-on-missing. We have to fix that. The default should be the same as CUDA in my opinion, but as it requires an nvidia account to download and install, I strongly suggest to have it off by default. @Axel-Naumann, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:33,deployability,fail,fail-on-missing,33,"About cuDNN, it's not respecting fail-on-missing. We have to fix that. The default should be the same as CUDA in my opinion, but as it requires an nvidia account to download and install, I strongly suggest to have it off by default. @Axel-Naumann, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:178,deployability,instal,install,178,"About cuDNN, it's not respecting fail-on-missing. We have to fix that. The default should be the same as CUDA in my opinion, but as it requires an nvidia account to download and install, I strongly suggest to have it off by default. @Axel-Naumann, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:33,reliability,fail,fail-on-missing,33,"About cuDNN, it's not respecting fail-on-missing. We have to fix that. The default should be the same as CUDA in my opinion, but as it requires an nvidia account to download and install, I strongly suggest to have it off by default. @Axel-Naumann, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:39,deployability,fail,fail,39,"I am not saying that the system should fail if missing, but if cuda is enabled and you have already cudnn in the system, by default it should be enabled !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:39,reliability,fail,fail,39,"I am not saying that the system should fail if missing, but if cuda is enabled and you have already cudnn in the system, by default it should be enabled !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:222,availability,avail,available,222,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:11,deployability,fail,fail-on-missing,11,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:67,deployability,fail,fail,67,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:11,reliability,fail,fail-on-missing,11,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:67,reliability,fail,fail,67,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:222,reliability,availab,available,222,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:222,safety,avail,available,222,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:222,security,availab,available,222,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:45,deployability,build,build,45,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:67,deployability,build,build,67,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:73,deployability,fail,failed,73,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:122,deployability,fail,failed,122,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:149,deployability,build,builds,149,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:90,performance,lock,lock,90,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:73,reliability,fail,failed,73,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:122,reliability,fail,failed,122,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5105:90,security,lock,lock,90,"Jenkins is stuck waiting for a 32bit node to build on. The Windows build failed because a lock file already exists, so it failed to clone. All other builds passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5105
https://github.com/root-project/root/pull/5107:0,availability,Error,Error,0,Error has nothing to do with the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5107
https://github.com/root-project/root/pull/5107:0,performance,Error,Error,0,Error has nothing to do with the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5107
https://github.com/root-project/root/pull/5107:0,safety,Error,Error,0,Error has nothing to do with the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5107
https://github.com/root-project/root/pull/5107:0,usability,Error,Error,0,Error has nothing to do with the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5107
https://github.com/root-project/root/pull/5108:107,availability,down,down,107,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:62,integrability,event,events,62,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:36,modifiability,paramet,parametrize,36,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:11,usability,command,command,11,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:139,usability,user,user-images,139,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:96,testability,simpl,simplified,96,@couet Could you have a look over the plotting code? I'm not sure whether the plotting could be simplified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:96,usability,simpl,simplified,96,@couet Could you have a look over the plotting code? I'm not sure whether the plotting could be simplified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:7,availability,Ping,Ping,7,@couet Ping!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:7,availability,Ping,Ping,7,@couet Ping!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:52,deployability,log,logs,52,"@stwunsch I didn't see tutorials running in Jenkins logs, so I will start full build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:79,deployability,build,build,79,"@stwunsch I didn't see tutorials running in Jenkins logs, so I will start full build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:52,safety,log,logs,52,"@stwunsch I didn't see tutorials running in Jenkins logs, so I will start full build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:52,security,log,logs,52,"@stwunsch I didn't see tutorials running in Jenkins logs, so I will start full build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:52,testability,log,logs,52,"@stwunsch I didn't see tutorials running in Jenkins logs, so I will start full build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5108:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5108
https://github.com/root-project/root/pull/5112:38,safety,review,review,38,@ashlaban or @stwunsch can you please review this ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5112
https://github.com/root-project/root/pull/5112:38,testability,review,review,38,@ashlaban or @stwunsch can you please review this ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5112
https://github.com/root-project/root/pull/5113:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5113
https://github.com/root-project/root/pull/5114:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5116:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5116
https://github.com/root-project/root/pull/5118:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5118
https://github.com/root-project/root/pull/5118:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5118
https://github.com/root-project/root/pull/5118:4,availability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5118
