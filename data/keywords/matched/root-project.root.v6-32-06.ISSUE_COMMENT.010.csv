id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/1946:4,safety,patch,patch,4,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:215,safety,Modul,ModularFunctionMinimizer,215,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:600,safety,Modul,ModularFunctionMinimizer,600,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:4,security,patch,patch,4,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:128,security,intrus,intrusive,128,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:476,security,access,access,476,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:546,security,modif,modified,546,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:808,security,modif,modified,808,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:215,testability,Modula,ModularFunctionMinimizer,215,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:600,testability,Modula,ModularFunctionMinimizer,600,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:323,usability,Minim,Minimizer,323,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:2,usability,confirm,confirm,2,I confirm that this solution fixes the original issue that motivated #1677,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:33,availability,error,error,33,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:4,deployability,log,logs,4,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:33,performance,error,error,33,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:87,reliability,doe,doesn,87,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:4,safety,log,logs,4,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:33,safety,error,error,33,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:4,security,log,logs,4,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:4,testability,log,logs,4,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:33,usability,error,error,33,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:127,deployability,build,build,127,"@henryiii Yeah, one file was not moved out of treeplayer that should have been. This is being fixed and then we can re-run the build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1946:0,energy efficiency,Cool,Cool,0,"Cool, thanks everyone!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1946
https://github.com/root-project/root/pull/1947:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -DLLVM_BUILD_TYPE=Debug -Droofit=Off -Druntime_cxxmodules=On -Dctest_test_exclude_none=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1947
https://github.com/root-project/root/pull/1948:11,deployability,build,build,11,@phsft-bot build again please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1948
https://github.com/root-project/root/pull/1949:11,deployability,build,build,11,@phsft-bot build just on ubuntu14/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1949
https://github.com/root-project/root/pull/1950:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1950
https://github.com/root-project/root/pull/1950:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1950
https://github.com/root-project/root/pull/1951:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:0,deployability,Build,Build,0,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:57,deployability,Build,Build,57,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:63,deployability,fail,failed,63,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:93,interoperability,plug,plugins,93,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:63,reliability,fail,failed,63,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:32,usability,statu,status,32,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:101,usability,workflow,workflow,101,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1951:114,usability,Workflow,WorkflowRun,114,Build is actually finished with status OK. ```. 22:23:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1951
https://github.com/root-project/root/pull/1954:11,deployability,build,build,11,@phsft-bot build just on ubuntu14/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:50,availability,error,errors,50,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:11,deployability,build,build,11,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:35,deployability,infrastructur,infrastructure,35,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:50,performance,error,errors,50,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:50,safety,error,errors,50,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1954:50,usability,error,errors,50,@phsft-bot build given that we had infrastructure errors before,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1954
https://github.com/root-project/root/pull/1955:82,deployability,build,build,82,I have just tested it locally and seems to work. @linev this also should fix your build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1955
https://github.com/root-project/root/pull/1955:12,safety,test,tested,12,I have just tested it locally and seems to work. @linev this also should fix your build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1955
https://github.com/root-project/root/pull/1955:12,testability,test,tested,12,I have just tested it locally and seems to work. @linev this also should fix your build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1955
https://github.com/root-project/root/pull/1957:95,interoperability,platform,platform,95,Hi @stwunsch can you open a JIRA ticket with a reproducer of the `TFile` python issue? In what platform does this happen?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1957
https://github.com/root-project/root/pull/1957:104,reliability,doe,does,104,Hi @stwunsch can you open a JIRA ticket with a reproducer of the `TFile` python issue? In what platform does this happen?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1957
https://github.com/root-project/root/pull/1957:26,deployability,build,buildds,26,Here are the names of the buildds and the build nodes:. - ` master-x86_64-mac1012-clang90-opt-cxx14root7 (macitois19.cern.ch)`. - `master-x86_64-mac1013-clang90-dbg (macitois22.cern.ch) `,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1957
https://github.com/root-project/root/pull/1957:42,deployability,build,build,42,Here are the names of the buildds and the build nodes:. - ` master-x86_64-mac1012-clang90-opt-cxx14root7 (macitois19.cern.ch)`. - `master-x86_64-mac1013-clang90-dbg (macitois22.cern.ch) `,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1957
https://github.com/root-project/root/pull/1958:114,deployability,log,log,114,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:35,integrability,messag,message,35,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:35,interoperability,messag,message,35,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:114,safety,log,log,114,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:114,security,log,log,114,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:114,testability,log,log,114,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:283,deployability,log,log,283,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:23,integrability,messag,message,23,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:60,integrability,messag,message,60,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:204,integrability,messag,message,204,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:23,interoperability,messag,message,23,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:60,interoperability,messag,message,60,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:204,interoperability,messag,message,204,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:283,safety,log,log,283,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:283,security,log,log,283,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:342,security,auth,authored,342,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:283,testability,log,log,283,"Already done :) The PR message is generated from the commit message! Cheers,. Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:. > . > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or mute the thread. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:46,availability,error,errors,46,@phsft-bot build again and hope that the TVec errors are fixed ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:11,deployability,build,build,11,@phsft-bot build again and hope that the TVec errors are fixed ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:46,performance,error,errors,46,@phsft-bot build again and hope that the TVec errors are fixed ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:46,safety,error,errors,46,@phsft-bot build again and hope that the TVec errors are fixed ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:46,usability,error,errors,46,@phsft-bot build again and hope that the TVec errors are fixed ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:39,deployability,build,build,39,"You need to rebase, otherwise you will build the exact same code as before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:258,availability,failur,failure,258,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:129,deployability,build,build,129,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:135,deployability,log,log,135,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:195,deployability,build,build,195,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:252,deployability,build,build,252,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:258,deployability,fail,failure,258,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:221,performance,time,time,221,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:258,performance,failur,failure,258,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:258,reliability,fail,failure,258,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:135,safety,log,log,135,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:135,security,log,log,135,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:135,testability,log,log,135,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:146,usability,support,supports,146,"@amadio, I don't think that's true. It is my impression that the merge request is built against the latest master (something the build log output supports). So rebuilding a PR _does_ potentially build different code each time. (To clarify, the initial build failure was in `math/vecops/CMakeFiles/VecOps.dir/G__VecOps.cxx.o`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:32,deployability,build,build,32,@ashlaban Ok. Let's try a final build and merge then!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:40,availability,failur,failures,40,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:40,deployability,fail,failures,40,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:40,performance,failur,failures,40,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:40,reliability,fail,failures,40,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:35,safety,test,test,35,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1958:35,testability,test,test,35,"@lmoneta, this is ok to merge! (No test failures related to TMVA, this is true also for slc6/gcc49.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1958
https://github.com/root-project/root/pull/1959:112,availability,consist,consistent,112,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:27,deployability,updat,updated,27,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:127,energy efficiency,current,currently,127,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:170,energy efficiency,current,current,170,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:27,safety,updat,updated,27,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:27,security,updat,updated,27,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:112,usability,consist,consistent,112,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:161,safety,test,test,161,"I've added the change I just mentioned to `RootUseFile` as a separate commit; I can remove it if necessary. It would be nice if someone could add a target based test in Jenkins, as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:161,testability,test,test,161,"I've added the change I just mentioned to `RootUseFile` as a separate commit; I can remove it if necessary. It would be nice if someone could add a target based test in Jenkins, as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,deployability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,integrability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,interoperability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,modifiability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:189,modifiability,variab,variable,189,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,reliability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,security,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:58,testability,integr,integrate-root-my-project-cmake,58,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:13,usability,document,documentation,13,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:204,usability,document,documentation,204,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:631,availability,error,error,631,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:168,deployability,patch,patch,168,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:372,deployability,scale,scales,372,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:482,deployability,depend,dependencies,482,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:560,deployability,version,version,560,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:603,deployability,version,version,603,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:372,energy efficiency,scale,scales,372,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:482,integrability,depend,dependencies,482,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:560,integrability,version,version,560,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:603,integrability,version,version,603,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:372,modifiability,scal,scales,372,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:482,modifiability,depend,dependencies,482,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:560,modifiability,version,version,560,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:603,modifiability,version,version,603,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:372,performance,scale,scales,372,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:631,performance,error,error,631,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:505,reliability,doe,does,505,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:168,safety,patch,patch,168,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:387,safety,compl,complicated,387,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:482,safety,depend,dependencies,482,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:631,safety,error,error,631,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:168,security,patch,patch,168,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:387,security,compl,complicated,387,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:482,testability,depend,dependencies,482,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:500,usability,user,user,500,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:631,usability,error,error,631,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt). * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:310,deployability,build,build,310,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:370,deployability,continu,continuing,370,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:112,integrability,interfac,interface,112,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:112,interoperability,interfac,interface,112,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:112,modifiability,interfac,interface,112,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:305,safety,test,test,305,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:41,testability,simpl,simple,41,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:305,testability,test,test,305,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:41,usability,simpl,simple,41,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:244,usability,user,user,244,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:33,deployability,build,builds,33,"@amadio, please rerun one of the builds (no need to restart all of them yet). I've fixed the one problem I knew about, and put in a debug printout to see if there's a problem with the splitting of flags. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:126,deployability,version,version,126,"The problem was that generator expressions need quotes to protect the expansion of variables (I think that was fixed in a new version of cmake because it wasn’t causing a problem for me locally). I’ve added the quotes and also removed the extra empty list items, too. Debug print removed, full rebuild is okay (fingers crossed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:126,integrability,version,version,126,"The problem was that generator expressions need quotes to protect the expansion of variables (I think that was fixed in a new version of cmake because it wasn’t causing a problem for me locally). I’ve added the quotes and also removed the extra empty list items, too. Debug print removed, full rebuild is okay (fingers crossed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:83,modifiability,variab,variables,83,"The problem was that generator expressions need quotes to protect the expansion of variables (I think that was fixed in a new version of cmake because it wasn’t causing a problem for me locally). I’ve added the quotes and also removed the extra empty list items, too. Debug print removed, full rebuild is okay (fingers crossed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:126,modifiability,version,version,126,"The problem was that generator expressions need quotes to protect the expansion of variables (I think that was fixed in a new version of cmake because it wasn’t causing a problem for me locally). I’ve added the quotes and also removed the extra empty list items, too. Debug print removed, full rebuild is okay (fingers crossed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:11,deployability,build,build,11,@phsft-bot build slc6/clang39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:93,availability,sli,slight,93,"Okay, it passes, great. So should I leave in the second commit? That's the one that makes (a slight) change to the root use file to also use generator expressions in `compile_options()` to get local directory scoping instead of setting the `CMAKE_CXX_FLAGS` and friends. Once I have an answer to that (and remove that commit if that's considered better), it is ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:93,reliability,sli,slight,93,"Okay, it passes, great. So should I leave in the second commit? That's the one that makes (a slight) change to the root use file to also use generator expressions in `compile_options()` to get local directory scoping instead of setting the `CMAKE_CXX_FLAGS` and friends. Once I have an answer to that (and remove that commit if that's considered better), it is ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:523,deployability,contain,contain,523,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:558,deployability,depend,dependent,558,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:811,deployability,depend,dependencies,811,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:970,deployability,automat,automatically,970,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:944,energy efficiency,Core,Core,944,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:558,integrability,depend,dependent,558,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:811,integrability,depend,dependencies,811,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:452,interoperability,standard,standard,452,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:423,modifiability,inherit,inherit,423,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:558,modifiability,depend,dependent,558,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:811,modifiability,depend,dependencies,811,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:558,safety,depend,dependent,558,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:811,safety,depend,dependencies,811,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:558,testability,depend,dependent,558,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:811,testability,depend,dependencies,811,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:970,testability,automat,automatically,970,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:540,usability,user,user,540,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:825,usability,user,users,825,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:212,integrability,compon,component,212,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:212,interoperability,compon,component,212,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:212,modifiability,compon,component,212,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:242,performance,time,times,242,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:45,usability,prefer,prefer,45,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:265,usability,user,user,265,"So what flags are absolutely necessary? I do prefer adding the absolutely required flags to the targets themselves. And, for the libraries, the nice thing about `ROOT::Libraries` is that you don't have to list a component to require multiple times, and a beginning user won't know which of the base libraries to add.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:18,deployability,depend,dependency,18,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:18,integrability,depend,dependency,18,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:18,modifiability,depend,dependency,18,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:18,safety,depend,dependency,18,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:18,testability,depend,dependency,18,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:308,deployability,depend,depend,308,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:548,deployability,build,build,548,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:308,integrability,depend,depend,308,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:380,integrability,compon,components,380,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:380,interoperability,compon,components,380,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:198,modifiability,variab,variable,198,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:308,modifiability,depend,depend,308,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:380,modifiability,compon,components,380,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:478,modifiability,pac,packages,478,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:640,modifiability,pac,packages,640,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:273,reliability,doe,does,273,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:308,safety,depend,depend,308,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:308,testability,depend,depend,308,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:471,testability,simpl,simple,471,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:500,testability,simpl,simple,500,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:268,usability,user,user,268,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:471,usability,simpl,simple,471,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:500,usability,simpl,simple,500,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:540,usability,tool,tool,540,"As a quick summary:. The only thing left in this PR is the addition of a `ROOT::Libraries` target, which provides a convenience target that mimics `${ROOT_LIBRARIES}` only with targets instead of a variable full of strings. The main three reasons to have it:. * A new user does not need to know whether they depend on `ROOT::Physics` or `ROOT::TreePlayer`, etc. * Adding required components to the `find_package` will also add them here, so no need to repeat yourself in simple packages. * It is not simple or trivial for an external CMake tool to build this target (Flags, for example, is a bit ugly to make, but it can be done). Advanced packages, like Geant, would not be expected to use the convenience target.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,deployability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,deployability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:361,deployability,depend,dependencies,361,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:401,deployability,automat,automatically,401,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:124,energy efficiency,model,model,124,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,integrability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:267,integrability,compon,components,267,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,integrability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:361,integrability,depend,dependencies,361,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:383,integrability,compon,component,383,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,interoperability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:255,interoperability,specif,specific,255,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:267,interoperability,compon,components,267,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,interoperability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:383,interoperability,compon,component,383,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,modifiability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:267,modifiability,compon,components,267,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,modifiability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:361,modifiability,depend,dependencies,361,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:383,modifiability,compon,component,383,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,reliability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,reliability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:361,safety,depend,dependencies,361,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:124,security,model,model,124,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,security,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,security,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:154,testability,integr,integration,154,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:325,testability,integr,integrated,325,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:361,testability,depend,dependencies,361,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:401,testability,automat,automatically,401,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:55,usability,user,user-facing,55,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:76,usability,close,closed,76,"Hi, making a sweep of old PRs -- no activity for the last year, can this be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:248,deployability,updat,update,248,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:248,safety,updat,update,248,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:248,security,updat,update,248,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:63,usability,user,users,63,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:302,usability,close,closed,302,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:200,deployability,configurat,configuration,200,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:377,deployability,depend,dependencies,377,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:495,deployability,contain,contain,495,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:580,deployability,contain,contains,580,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:615,deployability,contain,contains,615,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:200,integrability,configur,configuration,200,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:377,integrability,depend,dependencies,377,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:648,integrability,rout,route,648,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:337,interoperability,standard,standard,337,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:200,modifiability,configur,configuration,200,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:377,modifiability,depend,dependencies,377,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:377,safety,depend,dependencies,377,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:200,security,configur,configuration,200,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:377,testability,depend,dependencies,377,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:95,usability,help,help,95,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:697,usability,user,users,697,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:818,usability,close,close,818,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:7,reliability,doe,doesn,7,"Ok, it doesn't sound like this is going to get merged as is -- at least not without some more offline discussion. Closing the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:522,availability,mainten,maintenance,522,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:641,deployability,version,version,641,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:641,integrability,version,version,641,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:580,modifiability,maintain,maintained,580,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:641,modifiability,version,version,641,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:522,reliability,mainten,maintenance,522,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:580,safety,maintain,maintained,580,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:351,security,barrier,barrier,351,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1959:485,usability,user,users,485,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1959
https://github.com/root-project/root/pull/1960:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1960
https://github.com/root-project/root/pull/1963:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1963
https://github.com/root-project/root/pull/1964:156,modifiability,variab,variable,156,"Consider. ```. commit f0be4fb83343a3f32e22b1badbd6b6898e2debb6. Author: Philippe Canal <pcanal@fnal.gov>. Date: Tue May 1 11:47:26 2018 -0500. Avoid unused variable warning. diff --git a/gui/webdisplay/src/TWebWindowsManager.cxx b/gui/webdisplay/src/TWebWindowsManager.cxx. index 1bf0d0d431..72279f993a 100644. --- a/gui/webdisplay/src/TWebWindowsManager.cxx. +++ b/gui/webdisplay/src/TWebWindowsManager.cxx. @@ -314,11 +314,21 @@ bool ROOT::Experimental::TWebWindowsManager::Show(ROOT::Experimental::TWebWindow. where = gROOT->GetWebDisplay().Data();. . bool is_native = where.empty() || (where == ""native""),. - is_qt5 = (where == ""qt5""), is_cef = (where == ""cef""),. - is_local = where == ""local"", // either cef or qt5. is_chrome = (where == ""chrome"") || (where == ""chromium""),. is_firefox = (where == ""firefox"");. . +#ifdef R__HAS_CEFWEB. + bool is_cef = (where == ""cef"");. +#endif. +. +#ifdef R__HAS_QT5WEB. + bool is_qt5 = (where == ""qt5"");. +#endif. +. +#if defined(R__HAS_CEFWEB) || defined(R__HAS_QT5WEB). + bool is_local = where == ""local""; // either cef or qt5. +#endif. +. #ifdef R__HAS_CEFWEB. if (is_local). is_cef = true;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:143,safety,Avoid,Avoid,143,"Consider. ```. commit f0be4fb83343a3f32e22b1badbd6b6898e2debb6. Author: Philippe Canal <pcanal@fnal.gov>. Date: Tue May 1 11:47:26 2018 -0500. Avoid unused variable warning. diff --git a/gui/webdisplay/src/TWebWindowsManager.cxx b/gui/webdisplay/src/TWebWindowsManager.cxx. index 1bf0d0d431..72279f993a 100644. --- a/gui/webdisplay/src/TWebWindowsManager.cxx. +++ b/gui/webdisplay/src/TWebWindowsManager.cxx. @@ -314,11 +314,21 @@ bool ROOT::Experimental::TWebWindowsManager::Show(ROOT::Experimental::TWebWindow. where = gROOT->GetWebDisplay().Data();. . bool is_native = where.empty() || (where == ""native""),. - is_qt5 = (where == ""qt5""), is_cef = (where == ""cef""),. - is_local = where == ""local"", // either cef or qt5. is_chrome = (where == ""chrome"") || (where == ""chromium""),. is_firefox = (where == ""firefox"");. . +#ifdef R__HAS_CEFWEB. + bool is_cef = (where == ""cef"");. +#endif. +. +#ifdef R__HAS_QT5WEB. + bool is_qt5 = (where == ""qt5"");. +#endif. +. +#if defined(R__HAS_CEFWEB) || defined(R__HAS_QT5WEB). + bool is_local = where == ""local""; // either cef or qt5. +#endif. +. #ifdef R__HAS_CEFWEB. if (is_local). is_cef = true;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:64,security,Auth,Author,64,"Consider. ```. commit f0be4fb83343a3f32e22b1badbd6b6898e2debb6. Author: Philippe Canal <pcanal@fnal.gov>. Date: Tue May 1 11:47:26 2018 -0500. Avoid unused variable warning. diff --git a/gui/webdisplay/src/TWebWindowsManager.cxx b/gui/webdisplay/src/TWebWindowsManager.cxx. index 1bf0d0d431..72279f993a 100644. --- a/gui/webdisplay/src/TWebWindowsManager.cxx. +++ b/gui/webdisplay/src/TWebWindowsManager.cxx. @@ -314,11 +314,21 @@ bool ROOT::Experimental::TWebWindowsManager::Show(ROOT::Experimental::TWebWindow. where = gROOT->GetWebDisplay().Data();. . bool is_native = where.empty() || (where == ""native""),. - is_qt5 = (where == ""qt5""), is_cef = (where == ""cef""),. - is_local = where == ""local"", // either cef or qt5. is_chrome = (where == ""chrome"") || (where == ""chromium""),. is_firefox = (where == ""firefox"");. . +#ifdef R__HAS_CEFWEB. + bool is_cef = (where == ""cef"");. +#endif. +. +#ifdef R__HAS_QT5WEB. + bool is_qt5 = (where == ""qt5"");. +#endif. +. +#if defined(R__HAS_CEFWEB) || defined(R__HAS_QT5WEB). + bool is_local = where == ""local""; // either cef or qt5. +#endif. +. #ifdef R__HAS_CEFWEB. if (is_local). is_cef = true;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:2,usability,person,personally,2,I personally definitely prefer `(void)unused_var` over a preprocessor maze...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:24,usability,prefer,prefer,24,I personally definitely prefer `(void)unused_var` over a preprocessor maze...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:76,availability,consist,consistent,76,In general I agree but the maze is already there .... so one may as well be consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:76,usability,consist,consistent,76,In general I agree but the maze is already there .... so one may as well be consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:298,availability,avail,available,298,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:327,availability,error,error,327,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:57,modifiability,variab,variables,57,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:327,performance,error,error,327,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:298,reliability,availab,available,298,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:298,safety,avail,available,298,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:327,safety,error,error,327,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:298,security,availab,available,298,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:173,usability,clear,clear,173,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:327,usability,error,error,327,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:347,usability,indicat,indicated,347,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. . I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:22,deployability,build,build,22,By the way - standard build options does not include this library.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:13,interoperability,standard,standard,13,By the way - standard build options does not include this library.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:36,reliability,doe,does,36,By the way - standard build options does not include this library.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1964:11,deployability,build,build,11,@phsft-bot build with flags -Dcxx14=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1964
https://github.com/root-project/root/pull/1966:141,deployability,patch,patch,141,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:171,deployability,patch,patch,171,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:202,integrability,repositor,repository,202,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:202,interoperability,repositor,repository,202,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:141,safety,patch,patch,141,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:171,safety,patch,patch,171,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:28,security,modif,modification,28,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:141,security,patch,patch,141,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1966:171,security,patch,patch,171,"@Axel-Naumann . As long all modification of civetweb.c were removed from https://github.com/root-project/root/pull/1956,. you can apply this patch. Actually, exactly this patch was merged into civetweb repository - see https://github.com/civetweb/civetweb/pull/615",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1966
https://github.com/root-project/root/pull/1970:10,availability,failur,failures,10,There are failures checking out the repo...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1970
https://github.com/root-project/root/pull/1970:10,deployability,fail,failures,10,There are failures checking out the repo...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1970
https://github.com/root-project/root/pull/1970:10,performance,failur,failures,10,There are failures checking out the repo...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1970
https://github.com/root-project/root/pull/1970:10,reliability,fail,failures,10,There are failures checking out the repo...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1970
https://github.com/root-project/root/pull/1971:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1971
https://github.com/root-project/root/pull/1971:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1971
https://github.com/root-project/root/pull/1971:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1971
https://github.com/root-project/root/pull/1971:0,availability,ping,ping,0,ping @lmoneta! It's only a textual change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1971
https://github.com/root-project/root/pull/1972:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1972
https://github.com/root-project/root/pull/1973:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1973
https://github.com/root-project/root/pull/1975:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_xxhash=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:11,deployability,build,build,11,@phsft-bot build with flags -Dfail-on-missing=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:7,deployability,fail,failing,7,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:46,deployability,fail,fail-on-missing,46,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:72,deployability,build,builds,72,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:121,deployability,fail,failing,121,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:7,reliability,fail,failing,7,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:46,reliability,fail,fail-on-missing,46,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:121,reliability,fail,failing,121,"(Note: failing is *good* here, because we had fail-on-missing=ON in the builds, and things were not being found, and not failing...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:11,deployability,build,build,11,@phsft-bot build with flags -Dall=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:18,deployability,build,builds,18,I think I got the builds stuck... I'm cancelling and restarting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:38,usability,cancel,cancelling,38,I think I got the builds stuck... I'm cancelling and restarting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1975:11,deployability,build,build,11,@phsft-bot build with flags -Dall=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1975
https://github.com/root-project/root/pull/1976:11,deployability,build,build,11,@phsft-bot build with flags -Dimt=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1976
https://github.com/root-project/root/pull/1976:11,deployability,build,build,11,@phsft-bot build with flags -Dimt=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1976
https://github.com/root-project/root/pull/1977:20,safety,test,testing,20,"@oshadura Yes, I am testing it locally and will merge by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1977
https://github.com/root-project/root/pull/1977:20,testability,test,testing,20,"@oshadura Yes, I am testing it locally and will merge by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1977
https://github.com/root-project/root/pull/1980:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1980
https://github.com/root-project/root/pull/1980:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1980
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -DLLVM_BUILD_TYPE=Debug -Droofit=Off -Druntime_cxxmodules=On -Dctest_test_exclude_none=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -DLLVM_BUILD_TYPE=Debug -Droofit=Off -Druntime_cxxmodules=On -Dctest_test_exclude_none=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1981:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1981
https://github.com/root-project/root/pull/1984:0,deployability,Depend,Depends,0,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:0,integrability,Depend,Depends,0,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:0,modifiability,Depend,Depends,0,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:0,safety,Depend,Depends,0,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:45,safety,test,test,45,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:0,testability,Depend,Depends,0,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:45,testability,test,test,45,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:9,availability,failur,failures,9,roottest failures silenced by https://github.com/root-project/roottest/pull/210.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:9,deployability,fail,failures,9,roottest failures silenced by https://github.com/root-project/roottest/pull/210.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:9,performance,failur,failures,9,roottest failures silenced by https://github.com/root-project/roottest/pull/210.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:9,reliability,fail,failures,9,roottest failures silenced by https://github.com/root-project/roottest/pull/210.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:13,performance,time,timeout,13,Only a clone timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1984:13,safety,timeout,timeout,13,Only a clone timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1984
https://github.com/root-project/root/pull/1986:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1986
https://github.com/root-project/root/pull/1988:11,deployability,build,build,11,@phsft-bot build with flags -Dveccore=OFF -Dvc=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:27,deployability,configurat,configuration,27,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:27,integrability,configur,configuration,27,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:27,modifiability,configur,configuration,27,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:0,safety,Test,Testing,0,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:27,security,configur,configuration,27,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:0,testability,Test,Testing,0,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1988:11,deployability,build,build,11,@phsft-bot build with flags -Dveccore=OFF -Dvc=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1988
https://github.com/root-project/root/pull/1991:26,deployability,patch,patches,26,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1991:44,deployability,patch,patches,44,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1991:26,safety,patch,patches,26,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1991:44,safety,patch,patches,44,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1991:26,security,patch,patches,26,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1991:44,security,patch,patches,44,"Also merged into v6-14-00-patches, v6-12-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1991
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:216,deployability,modul,modules,216,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:216,modifiability,modul,modules,216,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:264,modifiability,variab,variable,264,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:27,safety,test,test,27,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:132,safety,test,tests,132,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:216,safety,modul,modules,216,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:407,safety,test,tests,407,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:502,safety,test,testing,502,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:27,testability,test,test,27,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:132,testability,test,tests,132,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:407,testability,test,tests,407,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:502,testability,test,testing,502,"Are we guaranteed that any test excluded through `ROOT_runtime_cxxmodules_FOUND` is only temporarily excluded? If not (i.e. if some tests are only temporarily excluded and others are deemed to be ""inappropriate"" for modules) then please use a dedicated, greppable variable:. ```. if (ROOT_runtime_cxxmodules_FOUND). set(FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES On). endif(). ```. and exclude these tests using. ```. if (NOT FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES). ```. rather than testing for the underlying feature `ROOT_runtime_cxxmodules_FOUND`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:147,deployability,modul,modules,147,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:251,deployability,patch,patch,251,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:147,modifiability,modul,modules,147,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:21,safety,test,tests,21,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:103,safety,test,test,103,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:147,safety,modul,modules,147,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:251,safety,patch,patch,251,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:251,security,patch,patch,251,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:21,testability,test,tests,21,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:103,testability,test,test,103,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:23,safety,test,tests,23,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:200,safety,test,tests,200,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:282,safety,test,tests,282,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:23,testability,test,tests,23,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:200,testability,test,tests,200,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:282,testability,test,tests,282,> It's guaranteed that tests excluded by this ROOT_runtime_cxxmodules_FOUND are temporary. Are temporary and will always be? I.e. also future usages of this exclusion mechanism will only ever exclude tests temporarily? So grepping for `ROOT_runtime_cxxmodules_FOUND` will only find tests that must be re-enabled? Good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:33,availability,failur,failures,33,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:33,deployability,fail,failures,33,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:134,deployability,patch,patch,134,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:33,performance,failur,failures,33,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:33,reliability,fail,failures,33,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:15,safety,test,test,15,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:134,safety,patch,patch,134,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:149,safety,compl,completely,149,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:134,security,patch,patch,134,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:149,security,compl,completely,149,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:15,testability,test,test,15,"At least these test and tutorial failures are already fixed in my branch, so I hope it will be temporary temporary until we land that patch. But I'm completely fine to use `FIXME_TEMPORARILY_EXCLUDED_FOR_RUNTIME_CXXMODULES` if you have a strong opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:41,availability,failur,failure,41,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:26,deployability,infrastructur,infrastructure,26,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:41,deployability,fail,failure,41,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:4,energy efficiency,green,green,4,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:41,performance,failur,failure,41,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:41,reliability,fail,failure,41,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1992:10,safety,except,except,10,All green except for that infrastructure failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1992
https://github.com/root-project/root/pull/1993:51,interoperability,connector,connector-odbc,51,This may be useful: https://github.com/mysql/mysql-connector-odbc/blob/master/cmake/FindMySQL.cmake,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:53,interoperability,connector,connector-odbc,53,> This may be useful: https://github.com/mysql/mysql-connector-odbc/blob/master/cmake/FindMySQL.cmake. One missing part there is the support for mariaDB ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:133,usability,support,support,133,> This may be useful: https://github.com/mysql/mysql-connector-odbc/blob/master/cmake/FindMySQL.cmake. One missing part there is the support for mariaDB ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:49,deployability,instal,installed,49,Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first `find_program` overwriting it with mysql.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,safety,test,tested,9,Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first `find_program` overwriting it with mysql.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,testability,test,tested,9,Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first `find_program` overwriting it with mysql.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:51,deployability,instal,installed,51,"> Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first find_program overwriting it with mysql. Since the first search, looks only in ```${MYSQL_DIR} $ENV{MYSQL_DIR}```, it ought to find only one of the two (which ever was meant to). Line 21 is likely to contain a typo (i.e. it seems like it should be ```mysql_config mariadb_config```).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:317,deployability,contain,contain,317,"> Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first find_program overwriting it with mysql. Since the first search, looks only in ```${MYSQL_DIR} $ENV{MYSQL_DIR}```, it ought to find only one of the two (which ever was meant to). Line 21 is likely to contain a typo (i.e. it seems like it should be ```mysql_config mariadb_config```).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:11,safety,test,tested,11,"> Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first find_program overwriting it with mysql. Since the first search, looks only in ```${MYSQL_DIR} $ENV{MYSQL_DIR}```, it ought to find only one of the two (which ever was meant to). Line 21 is likely to contain a typo (i.e. it seems like it should be ```mysql_config mariadb_config```).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:11,testability,test,tested,11,"> Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first find_program overwriting it with mysql. Since the first search, looks only in ```${MYSQL_DIR} $ENV{MYSQL_DIR}```, it ought to find only one of the two (which ever was meant to). Line 21 is likely to contain a typo (i.e. it seems like it should be ```mysql_config mariadb_config```).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:177,interoperability,compatib,compatible,177,"Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:145,modifiability,evolv,evolving,145,"Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:125,modifiability,maintain,maintained,125,"@pcanal I concur, line 21 is a typo: my case was being fulfilled by the first case. @amadio `mariadb-c-client` appears to be maintained but relatively frozen. I suspect it follows the Community Edition of `mysql`'s client code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:125,safety,maintain,maintained,125,"@pcanal I concur, line 21 is a typo: my case was being fulfilled by the first case. @amadio `mariadb-c-client` appears to be maintained but relatively frozen. I suspect it follows the Community Edition of `mysql`'s client code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:282,deployability,instal,installs,282,"@amadio I would like the comments I had to be addressed if possible. In particular, there are several hard coded paths as hints that don't make sense. We should remove those. Also, we should only look for `mysql_config` or `mariadb_config`, I don't know if there is any system that installs `mariadb` as a replacement for `mariadb_config`. The question in my other [comment](https://github.com/root-project/root/pull/1993#issuecomment-388276196) is also still relevant. I'd recommend to rebase this and do another round of review before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:523,safety,review,review,523,"@amadio I would like the comments I had to be addressed if possible. In particular, there are several hard coded paths as hints that don't make sense. We should remove those. Also, we should only look for `mysql_config` or `mariadb_config`, I don't know if there is any system that installs `mariadb` as a replacement for `mariadb_config`. The question in my other [comment](https://github.com/root-project/root/pull/1993#issuecomment-388276196) is also still relevant. I'd recommend to rebase this and do another round of review before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:523,testability,review,review,523,"@amadio I would like the comments I had to be addressed if possible. In particular, there are several hard coded paths as hints that don't make sense. We should remove those. Also, we should only look for `mysql_config` or `mariadb_config`, I don't know if there is any system that installs `mariadb` as a replacement for `mariadb_config`. The question in my other [comment](https://github.com/root-project/root/pull/1993#issuecomment-388276196) is also still relevant. I'd recommend to rebase this and do another round of review before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:122,usability,hint,hints,122,"@amadio I would like the comments I had to be addressed if possible. In particular, there are several hard coded paths as hints that don't make sense. We should remove those. Also, we should only look for `mysql_config` or `mariadb_config`, I don't know if there is any system that installs `mariadb` as a replacement for `mariadb_config`. The question in my other [comment](https://github.com/root-project/root/pull/1993#issuecomment-388276196) is also still relevant. I'd recommend to rebase this and do another round of review before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:353,deployability,API,API,353,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:376,deployability,API,API,376,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:434,deployability,API,API,434,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:353,integrability,API,API,353,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:376,integrability,API,API,376,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:434,integrability,API,API,434,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:179,interoperability,compatib,compatible,179,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:319,interoperability,specif,specifically,319,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:353,interoperability,API,API,353,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:376,interoperability,API,API,376,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:434,interoperability,API,API,434,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:479,interoperability,specif,specifically,479,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:147,modifiability,evolv,evolving,147,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:457,usability,support,support,457,"> Separate question: Should we have separate `FindMySQL.cmake` and `FindMariaDB.cmake`, and call one after the other? I don't know how the fork is evolving, how long they will be compatible, etc. Do you know? @amadio Sorry I lost track of this. `mariadb-c-client` is a distinct code base from `mariadb` and is intended specifically to provide the MyQSL API. `mariadb`'s own C-API appears to overlap (and therefore clash) with MySQL's API, so presumably any support for `mariadb` specifically would have to be cognizant of this (and the One Definition Rule, of course). I believe that the full `mariadb` would satisfy the MySQL linkage requirement, so I don't think it is appropriate to separate them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,availability,failur,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,deployability,fail,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,performance,failur,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1993:9,reliability,fail,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1993
https://github.com/root-project/root/pull/1994:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1994
https://github.com/root-project/root/pull/1995:26,reliability,doe,doesn,26,"Note to future self: this doesn't work as not all ROOT (e.g. python) use TRint, not parse the command line flags, and TCling will then be left in strict mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1995
https://github.com/root-project/root/pull/1995:94,usability,command,command,94,"Note to future self: this doesn't work as not all ROOT (e.g. python) use TRint, not parse the command line flags, and TCling will then be left in strict mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1995
https://github.com/root-project/root/pull/1997:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1997
https://github.com/root-project/root/pull/1997:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1997
https://github.com/root-project/root/pull/1997:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1997
https://github.com/root-project/root/pull/1997:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1997
https://github.com/root-project/root/pull/1998:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1998
https://github.com/root-project/root/pull/1999:9,availability,failur,failure,9,the only failure is infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1999
https://github.com/root-project/root/pull/1999:9,deployability,fail,failure,9,the only failure is infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1999
https://github.com/root-project/root/pull/1999:20,deployability,infrastructur,infrastructure,20,the only failure is infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1999
https://github.com/root-project/root/pull/1999:9,performance,failur,failure,9,the only failure is infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1999
https://github.com/root-project/root/pull/1999:9,reliability,fail,failure,9,the only failure is infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/1999
https://github.com/root-project/root/pull/2001:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2001
https://github.com/root-project/root/pull/2002:15,deployability,fail,failing,15,Looking at the failing test ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2002
https://github.com/root-project/root/pull/2002:15,reliability,fail,failing,15,Looking at the failing test ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2002
https://github.com/root-project/root/pull/2002:23,safety,test,test,23,Looking at the failing test ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2002
https://github.com/root-project/root/pull/2002:23,testability,test,test,23,Looking at the failing test ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2002
https://github.com/root-project/root/pull/2002:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc48,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2002
https://github.com/root-project/root/pull/2004:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2004
https://github.com/root-project/root/pull/2006:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2006
https://github.com/root-project/root/pull/2008:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2008
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:148,energy efficiency,load,loaded,148,"I don't see how this gets us closer to a working solution. Consider:. * Transaction 1 triggers the deserialization of. `int foo() // unused, no lib loaded.`. * Transaction 2:. ` void bar() { foo(); }`. `foo()`'s library will not be loaded, even though it is used (in Transaction 2) and comes from the PCM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:232,energy efficiency,load,loaded,232,"I don't see how this gets us closer to a working solution. Consider:. * Transaction 1 triggers the deserialization of. `int foo() // unused, no lib loaded.`. * Transaction 2:. ` void bar() { foo(); }`. `foo()`'s library will not be loaded, even though it is used (in Transaction 2) and comes from the PCM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:148,performance,load,loaded,148,"I don't see how this gets us closer to a working solution. Consider:. * Transaction 1 triggers the deserialization of. `int foo() // unused, no lib loaded.`. * Transaction 2:. ` void bar() { foo(); }`. `foo()`'s library will not be loaded, even though it is used (in Transaction 2) and comes from the PCM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:232,performance,load,loaded,232,"I don't see how this gets us closer to a working solution. Consider:. * Transaction 1 triggers the deserialization of. `int foo() // unused, no lib loaded.`. * Transaction 2:. ` void bar() { foo(); }`. `foo()`'s library will not be loaded, even though it is used (in Transaction 2) and comes from the PCM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:29,usability,close,closer,29,"I don't see how this gets us closer to a working solution. Consider:. * Transaction 1 triggers the deserialization of. `int foo() // unused, no lib loaded.`. * Transaction 2:. ` void bar() { foo(); }`. `foo()`'s library will not be loaded, even though it is used (in Transaction 2) and comes from the PCM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:128,deployability,modul,module-release,128,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:326,deployability,patch,patch,326,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:262,integrability,interfac,interface,262,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:262,interoperability,interfac,interface,262,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:128,modifiability,modul,module-release,128,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:262,modifiability,interfac,interface,262,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:128,safety,modul,module-release,128,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:326,safety,patch,patch,326,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2009:326,security,patch,patch,326,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because. ```. [yuka@yuka-arch module-release]$ root -l -b. root [0] gMinuit. IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]! ```. we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2009
https://github.com/root-project/root/pull/2010:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2010
https://github.com/root-project/root/pull/2010:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2010
https://github.com/root-project/root/pull/2010:11,deployability,build,build,11,@phsft-bot build!!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2010
https://github.com/root-project/root/pull/2010:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2010
https://github.com/root-project/root/pull/2010:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2010
https://github.com/root-project/root/pull/2011:11,deployability,build,build,11,@phsft-bot build with flags -Dall=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2011
https://github.com/root-project/root/pull/2011:11,deployability,build,build,11,@phsft-bot build with flags -Dall=On -Druntime_cxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2011
https://github.com/root-project/root/pull/2011:11,deployability,build,build,11,@phsft-bot build with flags -Dall=On -Druntime_cxxmodules=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2011
https://github.com/root-project/root/pull/2011:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2011
https://github.com/root-project/root/pull/2012:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2012
https://github.com/root-project/root/pull/2013:0,availability,failur,failure,0,failure are unrelated (likely infrastructure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2013
https://github.com/root-project/root/pull/2013:0,deployability,fail,failure,0,failure are unrelated (likely infrastructure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2013
https://github.com/root-project/root/pull/2013:30,deployability,infrastructur,infrastructure,30,failure are unrelated (likely infrastructure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2013
https://github.com/root-project/root/pull/2013:0,performance,failur,failure,0,failure are unrelated (likely infrastructure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2013
https://github.com/root-project/root/pull/2013:0,reliability,fail,failure,0,failure are unrelated (likely infrastructure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2013
https://github.com/root-project/root/pull/2016:41,deployability,depend,depend,41,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,deployability,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:41,integrability,depend,depend,41,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,integrability,integration test,integration test,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,interoperability,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:41,modifiability,depend,depend,41,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,modifiability,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,reliability,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:41,safety,depend,depend,41,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:83,safety,test,test,83,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,security,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:41,testability,depend,depend,41,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:71,testability,integr,integration,71,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:83,testability,test,test,83,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:4,deployability,build,build,4,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:30,deployability,fail,failing,30,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:87,deployability,build,build,87,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:30,reliability,fail,failing,30,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:25,safety,test,test,25,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:104,safety,test,tests,104,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:25,testability,test,test,25,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:104,testability,test,tests,104,"Mac build has a roottest test failing, I'm going to merge this anyway, as the previous build passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:0,availability,Failur,Failures,0,Failures after merging are because branch cannot be found anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:0,deployability,Fail,Failures,0,Failures after merging are because branch cannot be found anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:0,performance,Failur,Failures,0,Failures after merging are because branch cannot be found anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2016:0,reliability,Fail,Failures,0,Failures after merging are because branch cannot be found anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2016
https://github.com/root-project/root/pull/2017:38,availability,error,error,38,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:133,availability,error,error,133,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:286,availability,error,error,286,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:44,integrability,messag,message,44,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:139,integrability,messag,message,139,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:44,interoperability,messag,message,44,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:139,interoperability,messag,message,139,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:38,performance,error,error,38,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:133,performance,error,error,133,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:286,performance,error,error,286,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:38,safety,error,error,38,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:78,safety,input,input,78,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:133,safety,error,error,133,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:286,safety,error,error,286,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:38,usability,error,error,38,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:73,usability,user,user,73,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:78,usability,input,input,78,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:133,usability,error,error,133,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:187,usability,user,user,187,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:266,usability,user,user,266,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:286,usability,error,error,286,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it? If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:19,availability,error,error,19,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:194,availability,error,error,194,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:338,availability,Error,Error,338,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:471,availability,Error,Error,471,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:515,availability,Error,Error,515,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:560,availability,Error,Error,560,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:734,availability,Error,Error,734,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:25,integrability,messag,message,25,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:716,integrability,messag,message,716,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:25,interoperability,messag,message,25,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:716,interoperability,messag,message,716,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:19,performance,error,error,19,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:194,performance,error,error,194,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:338,performance,Error,Error,338,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:471,performance,Error,Error,471,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:515,performance,Error,Error,515,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:560,performance,Error,Error,560,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:734,performance,Error,Error,734,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:19,safety,error,error,19,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:194,safety,error,error,194,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:338,safety,Error,Error,338,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:471,safety,Error,Error,471,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:491,safety,Input,InputFormulaIntoCling,491,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:515,safety,Error,Error,515,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:560,safety,Error,Error,560,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:734,safety,Error,Error,734,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:219,security,ident,identifier,219,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:19,usability,error,error,19,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:42,usability,clear,clear,42,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:194,usability,error,error,194,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:338,usability,Error,Error,338,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:435,usability,prototyp,prototype,435,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:471,usability,Error,Error,471,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:491,usability,Input,InputFormulaIntoCling,491,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:515,usability,Error,Error,515,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:560,usability,Error,Error,560,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2017:734,usability,Error,Error,734,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```. TF1 f(""f"",""sinn(x)+cos(x)""). ```. we get . ```. input_line_11:2:65: error: use of undeclared identifier 'sinn'. Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }. ^. Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid ! (TF1 &) Name: f Title: sinn(x)+cos(x). ```. Before we were getting also an extra message as . ```. Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s). ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2017
https://github.com/root-project/root/pull/2018:8,availability,failur,failure,8,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:40,availability,failur,failure,40,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:72,availability,failur,failure,72,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:8,deployability,fail,failure,8,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:19,deployability,infrastructur,infrastructure,19,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:40,deployability,fail,failure,40,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:72,deployability,fail,failure,72,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:92,deployability,updat,update,92,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:8,performance,failur,failure,8,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:40,performance,failur,failure,40,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:72,performance,failur,failure,72,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:118,performance,cach,caching,118,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:8,reliability,fail,failure,8,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:40,reliability,fail,failure,40,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:72,reliability,fail,failure,72,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:92,safety,updat,update,92,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2018:92,security,updat,update,92,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2018
https://github.com/root-project/root/pull/2019:25,deployability,patch,patches,25,Also applied to v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2019
https://github.com/root-project/root/pull/2019:25,safety,patch,patches,25,Also applied to v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2019
https://github.com/root-project/root/pull/2019:25,security,patch,patches,25,Also applied to v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2019
https://github.com/root-project/root/pull/2021:11,deployability,build,build,11,@phsft-bot build on mac1013/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2021
https://github.com/root-project/root/pull/2021:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2021
https://github.com/root-project/root/pull/2021:0,safety,Test,Test,0,Test in roottest/cling/dict/ROOT-9185,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2021
https://github.com/root-project/root/pull/2021:0,testability,Test,Test,0,Test in roottest/cling/dict/ROOT-9185,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2021
https://github.com/root-project/root/pull/2022:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:18,deployability,fail,failing,18,"Note that this is failing in master without modules as well, @couet is notified.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:44,deployability,modul,modules,44,"Note that this is failing in master without modules as well, @couet is notified.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:44,modifiability,modul,modules,44,"Note that this is failing in master without modules as well, @couet is notified.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:18,reliability,fail,failing,18,"Note that this is failing in master without modules as well, @couet is notified.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:44,safety,modul,modules,44,"Note that this is failing in master without modules as well, @couet is notified.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:15,availability,failur,failure,15,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:15,deployability,fail,failure,15,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:30,deployability,modul,modules-related,30,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:30,modifiability,modul,modules-related,30,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:15,performance,failur,failure,15,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:15,reliability,fail,failure,15,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:30,safety,modul,modules-related,30,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:56,usability,close,close,56,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:24,deployability,fail,failing,24,"True, this is no longer failing in nightlies. Closing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2022:24,reliability,fail,failing,24,"True, this is no longer failing in nightlies. Closing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2022
https://github.com/root-project/root/pull/2023:8,availability,failur,failure,8,Windows failure is not related I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2023
https://github.com/root-project/root/pull/2023:8,deployability,fail,failure,8,Windows failure is not related I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2023
https://github.com/root-project/root/pull/2023:8,performance,failur,failure,8,Windows failure is not related I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2023
https://github.com/root-project/root/pull/2023:8,reliability,fail,failure,8,Windows failure is not related I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2023
https://github.com/root-project/root/pull/2023:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2023
https://github.com/root-project/root/pull/2024:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2024
https://github.com/root-project/root/pull/2025:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2025
https://github.com/root-project/root/pull/2027:8,availability,failur,failure,8,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:8,deployability,fail,failure,8,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:19,deployability,infrastructur,infrastructure,19,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:92,deployability,updat,update,92,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:8,performance,failur,failure,8,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:8,reliability,fail,failure,8,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:92,safety,updat,update,92,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:92,security,updat,update,92,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2027:145,usability,behavi,behavior,145,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2027
https://github.com/root-project/root/pull/2028:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:26,deployability,fail,failed,26,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,deployability,log,login,63,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:26,reliability,fail,failed,26,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,safety,log,login,63,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,security,log,login,63,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,testability,log,login,63,"Hi @lmoneta,. The Jenkins failed for some odd reason. I cannot login to see the details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,safety,test,test,63,"I think this PR could be merged. Could you maybe uncomment the test, so we have it running ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:63,testability,test,test,63,"I think this PR could be merged. Could you maybe uncomment the test, so we have it running ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:91,interoperability,conflict,conflict,91,"I close now this PR. If the author wants to merge this, we can re-open, but we need to fix conflict and add the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:112,safety,test,test,112,"I close now this PR. If the author wants to merge this, we can re-open, but we need to fix conflict and add the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:28,security,auth,author,28,"I close now this PR. If the author wants to merge this, we can re-open, but we need to fix conflict and add the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:112,testability,test,test,112,"I close now this PR. If the author wants to merge this, we can re-open, but we need to fix conflict and add the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2028:2,usability,close,close,2,"I close now this PR. If the author wants to merge this, we can re-open, but we need to fix conflict and add the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2028
https://github.com/root-project/root/pull/2029:79,deployability,releas,release,79,"This would be very nice to have in 6.14, as well, since that will be the first release with Minuit2 standalone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:81,deployability,releas,release,81,"> This would be very nice to have in 6.14, as well, since that will be the first release with Minuit2 standalone. We need @Axel-Naumann's approval for that. For me it's fine, as it's something for the standalone Minuit2 in any case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:0,availability,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:0,deployability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:0,performance,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2029:0,reliability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2029
https://github.com/root-project/root/pull/2031:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2031
https://github.com/root-project/root/pull/2031:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2031
https://github.com/root-project/root/pull/2032:26,deployability,patch,patches,26,Also merged into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2032
https://github.com/root-project/root/pull/2032:26,safety,patch,patches,26,Also merged into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2032
https://github.com/root-project/root/pull/2032:26,security,patch,patches,26,Also merged into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2032
https://github.com/root-project/root/pull/2033:7,availability,ping,pinged,7,I have pinged @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:127,deployability,releas,released,127,"Hi Carsten, . I think the PR is fine and we can merge it. Do you want me to port the fix also in the 6.14 branch which sill be released soon ? . Thank you for this PR. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:18,availability,failur,failures,18,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:18,deployability,fail,failures,18,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:122,deployability,build,build,122,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:18,performance,failur,failures,18,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:18,reliability,fail,failures,18,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:92,safety,test,testDetails,92,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:108,safety,test,test,108,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:92,testability,test,testDetails,92,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:108,testability,test,test,108,"Hi Carsten, . The failures that there are now in stressRoofit, see : . http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:115,safety,test,tests,115,"I found that my implementation was insufficient. I added one more commit to the branch of my fork. Now, the stress tests run through without issues. . Please merge the bugfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2033:115,testability,test,tests,115,"I found that my implementation was insufficient. I added one more commit to the branch of my fork. Now, the stress tests run through without issues. . Please merge the bugfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2033
https://github.com/root-project/root/pull/2034:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2034
https://github.com/root-project/root/pull/2034:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=On -Dvdt=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2034
https://github.com/root-project/root/pull/2035:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2035
https://github.com/root-project/root/pull/2037:27,deployability,patch,patches,27,Cherrypicked into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2037
https://github.com/root-project/root/pull/2037:27,safety,patch,patches,27,Cherrypicked into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2037
https://github.com/root-project/root/pull/2037:27,security,patch,patches,27,Cherrypicked into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2037
https://github.com/root-project/root/pull/2038:70,integrability,coupl,couple,70,Thanks a lot @SimeonEhrig ! This will magically show up in cling in a couple of minutes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2038
https://github.com/root-project/root/pull/2038:70,modifiability,coupl,couple,70,Thanks a lot @SimeonEhrig ! This will magically show up in cling in a couple of minutes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2038
https://github.com/root-project/root/pull/2038:70,testability,coupl,couple,70,Thanks a lot @SimeonEhrig ! This will magically show up in cling in a couple of minutes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2038
https://github.com/root-project/root/pull/2039:24,safety,test,test,24,@xvallspl I wonder if a test can be adequate here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:24,testability,test,test,24,@xvallspl I wonder if a test can be adequate here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:106,safety,test,test,106,"@dpiparo sure. The problem reported was numerical reproducibility between machines, so we probably want a test with a ref file I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:106,testability,test,test,106,"@dpiparo sure. The problem reported was numerical reproducibility between machines, so we probably want a test with a ref file I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:9,testability,context,context,9,Original context: https://github.com/cms-sw/cmssw/issues/23105,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:189,energy efficiency,reduc,reduction,189,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:131,safety,test,test,131,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:49,testability,simpl,simple,49,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:131,testability,test,test,131,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:49,usability,simpl,simple,49,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:506,availability,error,error,506,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:365,deployability,depend,depends,365,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:165,energy efficiency,core,core,165,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:262,energy efficiency,core,core,262,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:365,integrability,depend,depends,365,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:365,modifiability,depend,depends,365,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:506,performance,error,error,506,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:365,safety,depend,depends,365,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:506,safety,error,error,506,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:365,testability,depend,depends,365,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:459,testability,simpl,simply,459,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:233,usability,user,user,233,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:406,usability,indicat,indicates,406,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:459,usability,simpl,simply,459,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:506,usability,error,error,506,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:239,availability,error,error,239,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:423,availability,error,errors,423,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:217,deployability,stage,stage,217,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:133,energy efficiency,reduc,reduction,133,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:180,energy efficiency,reduc,reduces,180,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:195,energy efficiency,alloc,allocation,195,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:364,energy efficiency,reduc,reduction,364,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:558,energy efficiency,reduc,reduction,558,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:435,interoperability,specif,specifying,435,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:188,performance,memor,memory,188,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:239,performance,error,error,239,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:423,performance,error,errors,423,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:58,safety,test,test,58,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:239,safety,error,error,239,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:423,safety,error,errors,423,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:58,testability,test,test,58,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:188,usability,memor,memory,188,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:239,usability,error,error,239,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2039:423,usability,error,errors,423,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2039
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2040:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2040
https://github.com/root-project/root/pull/2042:39,availability,failur,failures,39,well the good news is that none of the failures seem to be due to my changes...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2042
https://github.com/root-project/root/pull/2042:39,deployability,fail,failures,39,well the good news is that none of the failures seem to be due to my changes...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2042
https://github.com/root-project/root/pull/2042:39,performance,failur,failures,39,well the good news is that none of the failures seem to be due to my changes...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2042
https://github.com/root-project/root/pull/2042:39,reliability,fail,failures,39,well the good news is that none of the failures seem to be due to my changes...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2042
https://github.com/root-project/root/pull/2044:11,deployability,build,build,11,@phsft-bot build..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2044
https://github.com/root-project/root/pull/2048:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2048
https://github.com/root-project/root/pull/2049:102,availability,state,state,102,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2049:76,deployability,log,logic,76,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2049:102,integrability,state,state,102,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2049:76,safety,log,logic,76,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2049:76,security,log,logic,76,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2049:76,testability,log,logic,76,I'll open a new PR when I have rebased over the recent name changes and the logic is in a more mature state.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2049
https://github.com/root-project/root/pull/2050:4,deployability,fail,failing,4,The failing test is understood (it needed to be re-disabled as it requires an evolution of PyROOT to work). I think this can be merged @bluehood,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2050
https://github.com/root-project/root/pull/2050:4,reliability,fail,failing,4,The failing test is understood (it needed to be re-disabled as it requires an evolution of PyROOT to work). I think this can be merged @bluehood,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2050
https://github.com/root-project/root/pull/2050:12,safety,test,test,12,The failing test is understood (it needed to be re-disabled as it requires an evolution of PyROOT to work). I think this can be merged @bluehood,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2050
https://github.com/root-project/root/pull/2050:12,testability,test,test,12,The failing test is understood (it needed to be re-disabled as it requires an evolution of PyROOT to work). I think this can be merged @bluehood,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2050
https://github.com/root-project/root/pull/2052:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:352,availability,down,down,352,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:95,deployability,observ,observe,95,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:386,deployability,updat,update,386,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:421,deployability,continu,continue,421,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:494,deployability,stack,stack,494,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:545,deployability,version,version,545,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:573,deployability,stack,stack,573,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:39,integrability,Event,Eventhough,39,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:545,integrability,version,version,545,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:545,modifiability,version,version,545,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:1972,modifiability,layer,layer,1972,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:124,performance,time,time,124,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:322,performance,time,time,322,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:609,performance,I/O,I/O,609,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:1918,performance,time,time,1918,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:386,safety,updat,update,386,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:386,security,updat,update,386,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:95,testability,observ,observe,95,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:500,testability,trace,trace,500,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:579,testability,trace,trace,579,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2052:1865,testability,Instrument,Instruments,1865,"processExecutorH1Test is pre-existing. Eventhough this PR make tp_process_imt faster, we still observe variation in its run-time (It has 4 steps each taking less than 20s in most case on the jenkins but sometimes going as high as 5 minutes!). It is yet unclear why that is. On remote nodes (from FNAL for example) the run-time of one of the steps goes down from 7m to 1m thanks to this update. So merging while we try to continue to investigate cause of the instability. When grabbing a random stack trace on the 'long' runs for a single thread version of the example, the stack trace shows that it is in the I/O:. ```. #8 0x0000003c428df348 in poll () from /lib64/libc.so.6. #9 0x00007fd663696e81 in raw_poll () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #10 0x00007fd66369735f in readable_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #11 0x00007fd6636974a9 in read_raw () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #12 0x00007fd663694aec in ne_read_response_block () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #13 0x00007fd663602bba in Davix::NEONRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #14 0x00007fd663646ae4 in Davix::HttpRequest::readBlock(char*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so.0. #15 0x00007fd66362ebc1 in Davix::read_segment_request(Davix::HttpRequest*, void*, unsigned long, Davix::DavixError**) () from /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-slc6-gcc48-opt/lib64/libdavix.so. ```. When running Instruments (MacOS) on a remote node (from FNAL) the time is reported as being mostly in the communication layer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2052
https://github.com/root-project/root/pull/2053:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2053
https://github.com/root-project/root/pull/2053:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2053
https://github.com/root-project/root/pull/2053:49,deployability,fail,failing,49,cpp11Containers_Names is unrelated as it is also failing on master. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2053
https://github.com/root-project/root/pull/2053:49,reliability,fail,failing,49,cpp11Containers_Names is unrelated as it is also failing on master. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2053
https://github.com/root-project/root/pull/2054:4,availability,failur,failures,4,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:4,deployability,fail,failures,4,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:85,deployability,updat,updating,85,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:4,performance,failur,failures,4,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:4,reliability,fail,failures,4,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:74,safety,test,test,74,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:85,safety,updat,updating,85,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:85,security,updat,updating,85,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2054:74,testability,test,test,74,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2054
https://github.com/root-project/root/pull/2055:0,safety,Test,Tests,0,Tests are then fixed in https://github.com/root-project/roottest/pull/183,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:0,testability,Test,Tests,0,Tests are then fixed in https://github.com/root-project/roottest/pull/183,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:133,availability,state,statement,133,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:255,deployability,updat,update,255,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:193,energy efficiency,current,currently,193,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:133,integrability,state,statement,133,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:228,integrability,interfac,interface,228,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:101,interoperability,compatib,compatibility,101,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:228,interoperability,interfac,interface,228,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:115,modifiability,layer,layer,115,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:228,modifiability,interfac,interface,228,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:247,performance,time,time,247,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:2,safety,Test,Tests,2,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:255,safety,updat,update,255,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:255,security,updat,update,255,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:2,testability,Test,Tests,2,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:203,usability,user,user,203,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:163,energy efficiency,load,load,163,"For the compatibility, this was introduced for TDataFrame. It can be done for TDataSource too. As usual, my fear is that in order to be too backward compatible we load ourselves with sterile tasks. I'll try to find a balance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:8,interoperability,compatib,compatibility,8,"For the compatibility, this was introduced for TDataFrame. It can be done for TDataSource too. As usual, my fear is that in order to be too backward compatible we load ourselves with sterile tasks. I'll try to find a balance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:149,interoperability,compatib,compatible,149,"For the compatibility, this was introduced for TDataFrame. It can be done for TDataSource too. As usual, my fear is that in order to be too backward compatible we load ourselves with sterile tasks. I'll try to find a balance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2055:163,performance,load,load,163,"For the compatibility, this was introduced for TDataFrame. It can be done for TDataSource too. As usual, my fear is that in order to be too backward compatible we load ourselves with sterile tasks. I'll try to find a balance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2055
https://github.com/root-project/root/pull/2060:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2060
https://github.com/root-project/root/pull/2062:73,safety,test,test,73,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:106,safety,test,test,106,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:206,safety,test,test,206,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:73,testability,test,test,73,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:106,testability,test,test,106,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:206,testability,test,test,206,"Hi @JavierCVilla . good catch, thanks a lot! Could you please also add a test to `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx`? It should be super quick, you can just copy-paste from one of the other test cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:65,safety,test,tested,65,"@JavierCVilla , very nice. I agree with @bluehood - once this is tested, it can be merged immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:65,testability,test,tested,65,"@JavierCVilla , very nice. I agree with @bluehood - once this is tested, it can be merged immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:197,performance,multi-thread,multi-threading,197,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:34,safety,test,tests,34,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:68,safety,test,test,68,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:131,safety,test,test,131,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:161,safety,avoid,avoid,161,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:34,testability,test,tests,34,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:68,testability,test,test,68,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:131,testability,test,test,131,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:88,interoperability,conflict,conflicts,88,"Thanks @JavierCVilla , let me give a last look at this before proceeding with resolving conflicts and merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2062:42,interoperability,conflict,conflicts,42,superseded by #2070 which fixes the merge conflicts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2062
https://github.com/root-project/root/pull/2064:68,deployability,instal,installed,68,"@dpiparo We need the new externals, I think. Currently vdt-0.3.9 is installed, but ROOT needs 0.4.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2064
https://github.com/root-project/root/pull/2064:45,energy efficiency,Current,Currently,45,"@dpiparo We need the new externals, I think. Currently vdt-0.3.9 is installed, but ROOT needs 0.4.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2064
https://github.com/root-project/root/pull/2064:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_vdt=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2064
https://github.com/root-project/root/pull/2064:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_vdt=ON just on mac1013/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2064
https://github.com/root-project/root/pull/2065:0,performance,Time,Timeout,0,Timeout. @lmoneta please move the implementation as you see fit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2065
https://github.com/root-project/root/pull/2065:0,safety,Timeout,Timeout,0,Timeout. @lmoneta please move the implementation as you see fit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2065
https://github.com/root-project/root/pull/2072:45,safety,avoid,avoid,45,Shouldn't we put some conditions in order to avoid the libmvec bug?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:93,deployability,build,build,93,"> Shouldn't we put some conditions in order to avoid the libmvec bug? Yes, I want to run the build on all platforms to find out which conditions to put. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:106,interoperability,platform,platforms,106,"> Shouldn't we put some conditions in order to avoid the libmvec bug? Yes, I want to run the build on all platforms to find out which conditions to put. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:47,safety,avoid,avoid,47,"> Shouldn't we put some conditions in order to avoid the libmvec bug? Yes, I want to run the build on all platforms to find out which conditions to put. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:47,availability,ERROR,ERROR,47,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:8,deployability,fail,fails,8,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:64,deployability,fail,failed,64,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:272,deployability,build,build,272,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:306,deployability,build,build,306,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:560,deployability,fail,fails,560,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:674,deployability,continu,continue,674,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:416,integrability,repositor,repository,416,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:616,integrability,repositor,repository,616,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:88,interoperability,plug,plugins,88,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:416,interoperability,repositor,repository,416,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:616,interoperability,repositor,repository,616,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:21,performance,lock,lock,21,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:47,performance,ERROR,ERROR,47,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:328,performance,lock,lock,328,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:8,reliability,fail,fails,8,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:64,reliability,fail,failed,64,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:560,reliability,fail,fails,560,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:47,safety,ERROR,ERROR,47,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:21,security,lock,lock,21,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:328,security,lock,lock,328,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:47,usability,ERROR,ERROR,47,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:114,usability,Command,Command,114,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2072:190,usability,statu,status,190,"Windows fails on git lock file:. ```. 16:50:42 ERROR: Execution failed. 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:. 16:50:42 stdout: . 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. 16:50:42 . 16:50:42 Another git process seems to be running in this repository, e.g. 16:50:42 an editor opened by 'git commit'. Please make sure all processes. 16:50:42 are terminated then try again. If it still fails, a git process. 16:50:42 may have crashed in this repository earlier:. 16:50:42 remove the file manually to continue. 16:50:42 . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2072
https://github.com/root-project/root/pull/2078:152,interoperability,specif,specific,152,"The original idea, was to compress this record even if the user requested no compression (because this record is mostly text). So if the user request a specific compression we should use it. If the user request no-compression we could still default this compression to ZLIB. opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:59,usability,user,user,59,"The original idea, was to compress this record even if the user requested no compression (because this record is mostly text). So if the user request a specific compression we should use it. If the user request no-compression we could still default this compression to ZLIB. opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:137,usability,user,user,137,"The original idea, was to compress this record even if the user requested no compression (because this record is mostly text). So if the user request a specific compression we should use it. If the user request no-compression we could still default this compression to ZLIB. opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:198,usability,user,user,198,"The original idea, was to compress this record even if the user requested no compression (because this record is mostly text). So if the user request a specific compression we should use it. If the user request no-compression we could still default this compression to ZLIB. opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:7,deployability,modul,modulo,7,"> LGTM modulo a file size check for uncompressed files, e.g. uncompressed hsimple.root. hsimple.root might not be representative enough (just a few ROOT classes). Maybe one of the atlas or CMS files should be checked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:7,modifiability,modul,modulo,7,"> LGTM modulo a file size check for uncompressed files, e.g. uncompressed hsimple.root. hsimple.root might not be representative enough (just a few ROOT classes). Maybe one of the atlas or CMS files should be checked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:7,safety,modul,modulo,7,"> LGTM modulo a file size check for uncompressed files, e.g. uncompressed hsimple.root. hsimple.root might not be representative enough (just a few ROOT classes). Maybe one of the atlas or CMS files should be checked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:164,safety,test,test,164,"> Maybe one of the atlas or CMS files should be checked. If one of the CMS files is stored uncompressed they have a different issue. I think hsimple.root is a fine test case for uncompressed data: reasonably small, close to analysis sample, not a huge amount of data (i.e. streamer info is a relevant fraction).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:164,testability,test,test,164,"> Maybe one of the atlas or CMS files should be checked. If one of the CMS files is stored uncompressed they have a different issue. I think hsimple.root is a fine test case for uncompressed data: reasonably small, close to analysis sample, not a huge amount of data (i.e. streamer info is a relevant fraction).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:215,usability,close,close,215,"> Maybe one of the atlas or CMS files should be checked. If one of the CMS files is stored uncompressed they have a different issue. I think hsimple.root is a fine test case for uncompressed data: reasonably small, close to analysis sample, not a huge amount of data (i.e. streamer info is a relevant fraction).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:138,deployability,build,builds,138,@pcanal @Axel-Naumann I checked with LHCb file ~107 MB (~291 MB when uncompressed):. ```. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb.root . -rw-r--r-- 1 oksana oksana 291778K May 24 17:17 test_lhcb_this_branch.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb_steamer_compressed.root . -rw-r--r-- 1 oksana oksana 291768K May 24 17:50 test_lhcb_master.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K B2ppKK2011_md_noPIDstrip.root . -rw-r--r-- 1 oksana oksana 107573K May 24 17:16 B2ppKK2011_md_noPIDstrip.root. ```. difference is very small ~0.003 %,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:309,deployability,build,builds,309,@pcanal @Axel-Naumann I checked with LHCb file ~107 MB (~291 MB when uncompressed):. ```. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb.root . -rw-r--r-- 1 oksana oksana 291778K May 24 17:17 test_lhcb_this_branch.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb_steamer_compressed.root . -rw-r--r-- 1 oksana oksana 291768K May 24 17:50 test_lhcb_master.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K B2ppKK2011_md_noPIDstrip.root . -rw-r--r-- 1 oksana oksana 107573K May 24 17:16 B2ppKK2011_md_noPIDstrip.root. ```. difference is very small ~0.003 %,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:494,deployability,build,builds,494,@pcanal @Axel-Naumann I checked with LHCb file ~107 MB (~291 MB when uncompressed):. ```. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb.root . -rw-r--r-- 1 oksana oksana 291778K May 24 17:17 test_lhcb_this_branch.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K test_lhcb_steamer_compressed.root . -rw-r--r-- 1 oksana oksana 291768K May 24 17:50 test_lhcb_master.root. oksana@oksana-ThinkPad-E470:~/CERN_sources/root/builds$ ls -la --block-size=K B2ppKK2011_md_noPIDstrip.root . -rw-r--r-- 1 oksana oksana 107573K May 24 17:16 B2ppKK2011_md_noPIDstrip.root. ```. difference is very small ~0.003 %,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:96,reliability,doe,does,96,"Great, thanks! test_lhcb.root aka test_lhcb_this_branch.root is uncompressed? How many branches does it have? The difference is 10K - that's nothing (unless the branch just stores doubles). Then let's turn compression off also for `TStreamerInfo` if we're told to turn off compression.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:127,deployability,updat,updating,127,@oshadura before I actually merge. Can you verify if some of the reference files and/or reference count/size in roottest needs updating? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:127,safety,updat,updating,127,@oshadura before I actually merge. Can you verify if some of the reference files and/or reference count/size in roottest needs updating? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:127,security,updat,updating,127,@oshadura before I actually merge. Can you verify if some of the reference files and/or reference count/size in roottest needs updating? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:43,testability,verif,verify,43,@oshadura before I actually merge. Can you verify if some of the reference files and/or reference count/size in roottest needs updating? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:58,deployability,fail,fail,58,@oshadura @lmoneta Do we understand why the MathCore test fail here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:58,reliability,fail,fail,58,@oshadura @lmoneta Do we understand why the MathCore test fail here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:53,safety,test,test,53,@oshadura @lmoneta Do we understand why the MathCore test fail here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:25,testability,understand,understand,25,@oshadura @lmoneta Do we understand why the MathCore test fail here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:53,testability,test,test,53,@oshadura @lmoneta Do we understand why the MathCore test fail here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:40,safety,test,tests,40,"@pcanal, yes I think I got it, in these tests are checked the sizes of ROOT files. I am working on fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:40,testability,test,tests,40,"@pcanal, yes I think I got it, in these tests are checked the sizes of ROOT files. I am working on fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:11,deployability,build,build,11,@phsft-bot build just on slc6-i686/gcc49.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:11,deployability,build,build,11,@phsft-bot build .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:57,availability,failur,failure,57,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:57,deployability,fail,failure,57,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:57,performance,failur,failure,57,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:70,performance,time,timeout,70,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:57,reliability,fail,failure,57,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:25,safety,test,test,25,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:70,safety,timeout,timeout,70,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:25,testability,test,test,25,centos7/gcc7 projectroot.test.test_stressIOPlugins_xroot failure is a timeout unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:139,availability,failur,failure,139,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:67,deployability,updat,update,67,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:139,deployability,fail,failure,139,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:139,performance,failur,failure,139,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:139,reliability,fail,failure,139,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:67,safety,updat,update,67,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2078:67,security,updat,update,67,32 bits roottest_root_tree_fastcloning_make will be fixed by a ref update. 32 bits roottest_root_dataframe_test_snapshot is a pre-existing failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2078
https://github.com/root-project/root/pull/2082:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2082
https://github.com/root-project/root/pull/2082:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2082
https://github.com/root-project/root/pull/2086:114,deployability,fail,fail,114,There is still a CSV file in the web server that will need renaming too (probably copying so other branches don't fail).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2086
https://github.com/root-project/root/pull/2086:114,reliability,fail,fail,114,There is still a CSV file in the web server that will need renaming too (probably copying so other branches don't fail).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2086
https://github.com/root-project/root/pull/2086:59,deployability,fail,fail,59,~~dpiparo would v6.12 still look for the old filenames and fail?~~. i don't know why I was thinking the files were on the root server :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2086
https://github.com/root-project/root/pull/2086:59,reliability,fail,fail,59,~~dpiparo would v6.12 still look for the old filenames and fail?~~. i don't know why I was thinking the files were on the root server :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2086
https://github.com/root-project/root/pull/2086:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2086
https://github.com/root-project/root/pull/2088:68,deployability,upgrad,upgraded,68,"Now that I focussed on that, the documentation of Snapshot could be upgraded since it does not return a frame but rather a result pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2088
https://github.com/root-project/root/pull/2088:68,modifiability,upgrad,upgraded,68,"Now that I focussed on that, the documentation of Snapshot could be upgraded since it does not return a frame but rather a result pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2088
https://github.com/root-project/root/pull/2088:86,reliability,doe,does,86,"Now that I focussed on that, the documentation of Snapshot could be upgraded since it does not return a frame but rather a result pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2088
https://github.com/root-project/root/pull/2088:33,usability,document,documentation,33,"Now that I focussed on that, the documentation of Snapshot could be upgraded since it does not return a frame but rather a result pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2088
https://github.com/root-project/root/pull/2089:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:37,availability,failur,failure,37,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:37,deployability,fail,failure,37,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:37,performance,failur,failure,37,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:112,performance,perform,performance,112,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:37,reliability,fail,failure,37,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2089:112,usability,perform,performance,112,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2089
https://github.com/root-project/root/pull/2091:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc7 with flags -Dcxx14=ON -Droot7=ON -Druntime_cxxmodules=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:105,deployability,depend,dependency,105,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:105,integrability,depend,dependency,105,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:105,modifiability,depend,dependency,105,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:105,safety,depend,dependency,105,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:105,testability,depend,dependency,105,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:44,reliability,doe,does,44,"We should probably fix the `#include`s. Why does `TLine.hxx` need to `#include ""ROOT/TPad.hxx""`? Can we survive without / forward declaration? And if this renders `TLine` unusable: yes, then we probably need to move `TPad` in the primitives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,availability,error,error,4,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:44,availability,Error,Errors,44,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:76,availability,Error,Error,76,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:180,availability,Error,Error,180,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:273,availability,failur,failure,273,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:403,availability,error,error,403,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:90,deployability,build,build,90,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:107,deployability,modul,module,107,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:192,deployability,build,build,192,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:234,deployability,build,build,234,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:240,deployability,build,build,240,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:273,deployability,fail,failure,273,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:287,deployability,build,build,287,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:329,deployability,build,build,329,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:335,deployability,build,build,335,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:409,integrability,messag,message,409,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:409,interoperability,messag,message,409,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:107,modifiability,modul,module,107,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,performance,error,error,4,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:44,performance,Error,Errors,44,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:76,performance,Error,Error,76,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:180,performance,Error,Error,180,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:273,performance,failur,failure,273,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:403,performance,error,error,403,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:273,reliability,fail,failure,273,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,safety,error,error,4,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:44,safety,Error,Errors,44,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:76,safety,Error,Error,76,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:107,safety,modul,module,107,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:180,safety,Error,Error,180,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:403,safety,error,error,403,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,usability,error,error,4,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:44,usability,Error,Errors,44,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:76,usability,Error,Error,76,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:180,usability,Error,Error,180,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:403,usability,error,error,403,The error is now:. [centos7-gcc7-Debug] ### Errors:. [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to . [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . . Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc7 with flags -Dcxx14=ON -Droot7=ON -Druntime_cxxmodules=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,availability,error,error,4,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:10,integrability,messag,message,10,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:10,interoperability,messag,message,10,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,performance,error,error,4,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,safety,error,error,4,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4,usability,error,error,4,"The error message we get is not very explicit ... at least for me. . @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:354,availability,Error,Error,354,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1100,availability,error,error,1100,"equests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1434,availability,error,error,1434,"16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1549,availability,Error,Error,1549,"ur own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1642,availability,failur,failure,1642,"odule 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1851,availability,error,error,1851," <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:69,deployability,build,build,69,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:111,deployability,build,build,111,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:117,deployability,build,build,117,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:161,deployability,build,building,161,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:170,deployability,modul,module,170,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:199,deployability,build,build,199,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:241,deployability,build,build,241,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:247,deployability,build,build,247,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:283,deployability,build,build,283,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:368,deployability,build,build,368,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:385,deployability,modul,module,385,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:498,deployability,modul,module,498,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:527,deployability,modul,module,527,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:566,deployability,modul,modulemap,566,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:636,deployability,build,building,636,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:645,deployability,modul,module,645,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:694,deployability,build,building,694,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:703,deployability,modul,module,703,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:742,deployability,build,build,742,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:784,deployability,build,build,784,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:790,deployability,build,build,790,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:856,deployability,modul,module-includes,856,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:913,deployability,build,build,913,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:955,deployability,build,build,955,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:961,deployability,build,build,961,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1011,deployability,build,build,1011,"In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I belie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1053,deployability,build,build,1053,"4:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second proble",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1059,deployability,build,build,1059,"7 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1114,deployability,depend,dependency,1114,"ild/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1128,deployability,modul,module,1128,"ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1344,deployability,build,build,1344,":16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1386,deployability,build,build,1386,"le ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1392,deployability,build,build,1392,"TGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1451,deployability,build,build,1451,"e dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can bre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1457,deployability,modul,module,1457,"ionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break tha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1561,deployability,build,build,1561,"m modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definition",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1603,deployability,build,build,1603,"stem] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the curren",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1609,deployability,build,build,1609,"{ ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current mast",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1642,deployability,fail,failure,1642,"odule 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1656,deployability,build,build,1656,"aphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1698,deployability,build,build,1698,"g module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1704,deployability,build,build,1704,"le 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimiti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1901,deployability,build,build,1901,"rom /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1973,deployability,build,build,1973,"OOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOpts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1979,deployability,depend,dependency,1979,"vas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2293,deployability,modul,module,2293," included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2335,deployability,depend,depend,2335," /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2414,deployability,depend,depend,2414,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2617,deployability,modul,modulemap,2617,"tcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2680,deployability,modul,module,2680,"t-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2735,deployability,modul,module,2735,"sd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { heade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2799,deployability,modul,module,2799,"ared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2875,deployability,modul,module,2875,"irst is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2951,deployability,modul,module,2951,"e likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3035,deployability,modul,module,3035," the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3097,deployability,modul,module,3097,".hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3163,deployability,modul,module,3163,"cle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3231,deployability,modul,module,3231,". It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3313,deployability,modul,module,3313,"ne.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3377,deployability,modul,module,3377," is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. expor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3454,deployability,modul,module,3454,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3497,deployability,modul,module,3497,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3563,deployability,modul,module,3563,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3627,deployability,modul,module,3627,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3697,deployability,modul,module,3697,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3779,deployability,modul,module,3779,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3839,deployability,modul,module,3839,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3921,deployability,modul,module,3921,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3993,deployability,modul,module,3993,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4065,deployability,modul,module,4065,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4139,deployability,modul,module,4139,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4205,deployability,modul,module,4205,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4281,deployability,modul,module,4281,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2600,energy efficiency,current,current,2600,"uild/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1114,integrability,depend,dependency,1114,"ild/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1979,integrability,depend,dependency,1979,"vas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2335,integrability,depend,depend,2335," /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2414,integrability,depend,depend,2414,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1800,interoperability,share,shared,1800,"/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:170,modifiability,modul,module,170,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:385,modifiability,modul,module,385,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:498,modifiability,modul,module,498,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:527,modifiability,modul,module,527,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:566,modifiability,modul,modulemap,566,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:645,modifiability,modul,module,645,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:703,modifiability,modul,module,703,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:856,modifiability,modul,module-includes,856,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1114,modifiability,depend,dependency,1114,"ild/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1128,modifiability,modul,module,1128,"ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1457,modifiability,modul,module,1457,"ionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break tha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1979,modifiability,depend,dependency,1979,"vas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2293,modifiability,modul,module,2293," included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2335,modifiability,depend,depend,2335," /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2414,modifiability,depend,depend,2414,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2617,modifiability,modul,modulemap,2617,"tcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2680,modifiability,modul,module,2680,"t-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2735,modifiability,modul,module,2735,"sd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { heade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2799,modifiability,modul,module,2799,"ared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2875,modifiability,modul,module,2875,"irst is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2951,modifiability,modul,module,2951,"e likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3035,modifiability,modul,module,3035," the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3097,modifiability,modul,module,3097,".hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3163,modifiability,modul,module,3163,"cle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3231,modifiability,modul,module,3231,". It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3313,modifiability,modul,module,3313,"ne.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3377,modifiability,modul,module,3377," is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. expor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3454,modifiability,modul,module,3454,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3497,modifiability,modul,module,3497,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3563,modifiability,modul,module,3563,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3627,modifiability,modul,module,3627,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3697,modifiability,modul,module,3697,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3779,modifiability,modul,module,3779,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3839,modifiability,modul,module,3839,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3921,modifiability,modul,module,3921,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3993,modifiability,modul,module,3993,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4065,modifiability,modul,module,4065,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4139,modifiability,modul,module,4139,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4205,modifiability,modul,module,4205,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4281,modifiability,modul,module,4281,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:354,performance,Error,Error,354,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1100,performance,error,error,1100,"equests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1434,performance,error,error,1434,"16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1549,performance,Error,Error,1549,"ur own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1642,performance,failur,failure,1642,"odule 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1851,performance,error,error,1851," <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1642,reliability,fail,failure,1642,"odule 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:170,safety,modul,module,170,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:354,safety,Error,Error,354,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:385,safety,modul,module,385,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:498,safety,modul,module,498,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:527,safety,modul,module,527,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:566,safety,modul,modulemap,566,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:645,safety,modul,module,645,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:703,safety,modul,module,703,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:856,safety,modul,module-includes,856,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1100,safety,error,error,1100,"equests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1114,safety,depend,dependency,1114,"ild/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1128,safety,modul,module,1128,"ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1434,safety,error,error,1434,"16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1457,safety,modul,module,1457,"ionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break tha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1549,safety,Error,Error,1549,"ur own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1851,safety,error,error,1851," <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1979,safety,depend,dependency,1979,"vas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2293,safety,modul,module,2293," included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2335,safety,depend,depend,2335," /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2414,safety,depend,depend,2414,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2617,safety,modul,modulemap,2617,"tcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2680,safety,modul,module,2680,"t-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2735,safety,modul,module,2735,"sd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { heade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2799,safety,modul,module,2799,"ared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2875,safety,modul,module,2875,"irst is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2951,safety,modul,module,2951,"e likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3035,safety,modul,module,3035," the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3097,safety,modul,module,3097,".hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3163,safety,modul,module,3163,"cle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3231,safety,modul,module,3231,". It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3313,safety,modul,module,3313,"ne.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3377,safety,modul,module,3377," is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. expor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3454,safety,modul,module,3454,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3497,safety,modul,module,3497,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3563,safety,modul,module,3563,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3627,safety,modul,module,3627,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3697,safety,modul,module,3697,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3779,safety,modul,module,3779,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3839,safety,modul,module,3839,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3921,safety,modul,module,3921,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:3993,safety,modul,module,3993,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4065,safety,modul,module,4065,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4139,safety,modul,module,4139,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4205,safety,modul,module,4205,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:4281,safety,modul,module,4281,"`TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx"" { header ""ROOT/TMenuItem.hxx"" export * }. module ""ROOT/TObjectDrawable.hxx"" { header ""ROOT/TObjectDrawable.hxx"" export * }. module ""ROOT/TPad.hxx"" { header ""ROOT/TPad.hxx"" export * }. module ""ROOT/TPadDisplayItem.hxx"" { header ""ROOT/TPadDisplayItem.hxx"" export * }. module ""ROOT/TPadExtent.hxx"" { header ""ROOT/TPadExtent.hxx"" export * }. module ""ROOT/TPadLength.hxx"" { header ""ROOT/TPadLength.hxx"" export * }. module ""ROOT/TPadPainter.hxx"" { header ""ROOT/TPadPainter.hxx"" export * }. module ""ROOT/TPadPos.hxx"" { header ""ROOT/TPadPos.hxx"" export * }. module ""ROOT/TPadUserAxis.hxx"" { header ""ROOT/TPadUserAxis.hxx"" export * }. module ""ROOT/TVirtualCanvasPainter.hxx"" { header ""ROOT/TVirtualCanvasPainter.hxx"" export * }. export *. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1114,testability,depend,dependency,1114,"ild/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1979,testability,depend,dependency,1979,"vas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2335,testability,depend,depend,2335," /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2414,testability,depend,depend,2414,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:354,usability,Error,Error,354,"```. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1100,usability,error,error,1100,"equests-build/build/include/ROOT/TLine.hxx:23:10: remark: building module 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ^. 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to. 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1434,usability,error,error,1434,"16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system. 14:16:07 module if you provided your own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1549,usability,Error,Error,1549,"ur own system modulemap file:. 14:16:07 ROOTGpadv7 [system] { ... }. 14:16:07 While building module 'ROOTGraphicsPrimitives':. 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:. 14:16:07 In file included from <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:1851,usability,error,error,1851," <module-includes>:1:. 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives. 14:16:07 #include ""ROOT/TDrawingAttr.hxx"". 14:16:07 ^. 14:16:07 In file included from input_line_13:10:. 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'. 14:16:07 #include <ROOT/TPadPainter.hxx>. 14:16:07 ~~~~~~~~^. 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:2650,usability,help,helps,2650,"nt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h). 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so. ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle). ```. module ""ROOTGraphicsPrimitives"" {. requires cplusplus. module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }. module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }. module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }. module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }. module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }. module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }. module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }. module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }. module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }. module ""ROOT/TText.hxx"" { header ""ROOT/TText.hxx"" export * }. export *. }. . module ""ROOTGpadv7"" {. requires cplusplus. module ""ROOT/TCanvas.hxx"" { header ""ROOT/TCanvas.hxx"" export * }. module ""ROOT/TFrame.hxx"" { header ""ROOT/TFrame.hxx"" export * }. module ""ROOT/TMenuItem.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:32,safety,input,input,32,"Hi @vgvassilev, Thanks for your input. I will look at your suggestion. Sorry for le late answer I was on a training and back only today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:32,usability,input,input,32,"Hi @vgvassilev, Thanks for your input. I will look at your suggestion. Sorry for le late answer I was on a training and back only today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2091:15,safety,valid,valid,15,This PR is not valid anymore since the T -> R names changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2091
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:468,deployability,infrastructur,infrastructure,468,"> This is a bug. The intent is for it to be found. (And 'usually'/'as-far-as-I-knew' it did, what is the 'new' circurnstances)? New'circumstance is ""When we get a callback(that interpreter couldn't find mangled_name's definition) to TCling::LazyFunctionCreatorAutoload we'll load missing library"". The same thing is also done in pch. As far as I read, tuple<..> is not declared as it is and I wonder how TClass::GetClass can know tuple<> is declared or not in current infrastructure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:275,energy efficiency,load,load,275,"> This is a bug. The intent is for it to be found. (And 'usually'/'as-far-as-I-knew' it did, what is the 'new' circurnstances)? New'circumstance is ""When we get a callback(that interpreter couldn't find mangled_name's definition) to TCling::LazyFunctionCreatorAutoload we'll load missing library"". The same thing is also done in pch. As far as I read, tuple<..> is not declared as it is and I wonder how TClass::GetClass can know tuple<> is declared or not in current infrastructure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:460,energy efficiency,current,current,460,"> This is a bug. The intent is for it to be found. (And 'usually'/'as-far-as-I-knew' it did, what is the 'new' circurnstances)? New'circumstance is ""When we get a callback(that interpreter couldn't find mangled_name's definition) to TCling::LazyFunctionCreatorAutoload we'll load missing library"". The same thing is also done in pch. As far as I read, tuple<..> is not declared as it is and I wonder how TClass::GetClass can know tuple<> is declared or not in current infrastructure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:275,performance,load,load,275,"> This is a bug. The intent is for it to be found. (And 'usually'/'as-far-as-I-knew' it did, what is the 'new' circurnstances)? New'circumstance is ""When we get a callback(that interpreter couldn't find mangled_name's definition) to TCling::LazyFunctionCreatorAutoload we'll load missing library"". The same thing is also done in pch. As far as I read, tuple<..> is not declared as it is and I wonder how TClass::GetClass can know tuple<> is declared or not in current infrastructure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:183,deployability,version,version,183,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:183,integrability,version,version,183,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:183,modifiability,version,version,183,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:216,performance,I/O,I/O,216,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:161,testability,simpl,simpler,161,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:171,testability,simpl,simplistic,171,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:223,testability,understand,understand,223,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:161,usability,simpl,simpler,161,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:171,usability,simpl,simplistic,171,"The idea of the TEmulatedTuple is as follow:. ```. // Handle the special case of 'tuple' where we ignore the real implementation. // details and just overlay a 'simpler'/'simplistic' version that is easy. // for the I/O to understand and handle. ```. and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:66,deployability,infrastructur,infrastructure,66,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:87,deployability,depend,depends,87,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:58,energy efficiency,current,current,58,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:271,energy efficiency,load,loaded,271,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:87,integrability,depend,depends,87,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:87,modifiability,depend,depends,87,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:271,performance,load,loaded,271,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:87,safety,depend,depends,87,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:87,testability,depend,depends,87,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure? That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by. ```. TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:82,deployability,fail,failing,82,"> I am still unclear what you mean by . roottest-root-core-execStatusBitsCheck is failing because. ```. execStatusBits calls. ROOT::Detail::TStatusBitsChecker::CheckAllClasses(verbosity) calls. TClass::GetClass((const char *)cname, kTRUE) calls. gInterpreter->GenerateTClass(normalizedName.c_str(), /* emulation = */ kFALSE, silent). ```. and it declares ""TEmulateTuple"" twice. I think tuple<> should be found somewhere above GenerateTClass, I'll check, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:54,energy efficiency,core,core-execStatusBitsCheck,54,"> I am still unclear what you mean by . roottest-root-core-execStatusBitsCheck is failing because. ```. execStatusBits calls. ROOT::Detail::TStatusBitsChecker::CheckAllClasses(verbosity) calls. TClass::GetClass((const char *)cname, kTRUE) calls. gInterpreter->GenerateTClass(normalizedName.c_str(), /* emulation = */ kFALSE, silent). ```. and it declares ""TEmulateTuple"" twice. I think tuple<> should be found somewhere above GenerateTClass, I'll check, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:82,reliability,fail,failing,82,"> I am still unclear what you mean by . roottest-root-core-execStatusBitsCheck is failing because. ```. execStatusBits calls. ROOT::Detail::TStatusBitsChecker::CheckAllClasses(verbosity) calls. TClass::GetClass((const char *)cname, kTRUE) calls. gInterpreter->GenerateTClass(normalizedName.c_str(), /* emulation = */ kFALSE, silent). ```. and it declares ""TEmulateTuple"" twice. I think tuple<> should be found somewhere above GenerateTClass, I'll check, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:302,testability,emul,emulation,302,"> I am still unclear what you mean by . roottest-root-core-execStatusBitsCheck is failing because. ```. execStatusBits calls. ROOT::Detail::TStatusBitsChecker::CheckAllClasses(verbosity) calls. TClass::GetClass((const char *)cname, kTRUE) calls. gInterpreter->GenerateTClass(normalizedName.c_str(), /* emulation = */ kFALSE, silent). ```. and it declares ""TEmulateTuple"" twice. I think tuple<> should be found somewhere above GenerateTClass, I'll check, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:27,deployability,log,logs,27,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:27,safety,log,logs,27,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:84,safety,review,reviewed,84,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:27,security,log,logs,27,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:38,security,hash,hash,38,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:27,testability,log,logs,27,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:84,testability,review,reviewed,84,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,"@phsft-bot build on slc6/clang39, slc6/gcc48, slc6/gcc48, slc6/gcc49, slc6/gcc52, centos7/gcc62, centos7/gcc7, centos7/gcc7, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dvc=OFF -Dimt=ON -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:71,security,expos,expose,71,"For the record, after discussing, experiments' `LD_LIBRARY_PATH`s will expose about 200M non-weak symbols. I agree that autoloading random libs because of `pair<int,int>` isn't an issue as you only note non-weak symbols from libraries. Sorry for not realizing this before!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2093:151,performance,time,time,151,"I don't think so, Yuka. The warnings are from GCC 8, which is quite new, and from C++17 implementation in libNew, that had these warnings since a long time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2093
https://github.com/root-project/root/pull/2095:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2095
https://github.com/root-project/root/pull/2095:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2095
https://github.com/root-project/root/pull/2097:69,reliability,doe,does,69,You mean all classes implementing `cling::PrintValue`? The code here does not use this directly but uses the `<<` overload of `RVec` (ok not much difference).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:43,interoperability,specif,specific,43,"All classes do :) For the ones for which a specific one is not present, a default one is used. The issue is that we do not want to link *all* of ROOT to pythonise and maybe we want just to use the interpreter in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:43,interoperability,specif,specific,43,"I think that adding this pythonization for specific classes should be enough in terms of usability. Adding a generic pythonization for all ROOT classes would possibly cause more harm than good. On the other hand, it's probably confusing if it does not behave such as the cling prompt?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:243,reliability,doe,does,243,"I think that adding this pythonization for specific classes should be enough in terms of usability. Adding a generic pythonization for all ROOT classes would possibly cause more harm than good. On the other hand, it's probably confusing if it does not behave such as the cling prompt?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:89,usability,usab,usability,89,"I think that adding this pythonization for specific classes should be enough in terms of usability. Adding a generic pythonization for all ROOT classes would possibly cause more harm than good. On the other hand, it's probably confusing if it does not behave such as the cling prompt?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:5,deployability,updat,updated,5,"I've updated the code. Now, the feature can be added quite generically to all desired classes doing sth similar to this:. ```cpp. Utility::AddToClass( pyclass, ""__str__"", (PyCFunction) ClingPrintValue<ROOT::VecOps::RVec<float> >, METH_NOARGS );. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:5,safety,updat,updated,5,"I've updated the code. Now, the feature can be added quite generically to all desired classes doing sth similar to this:. ```cpp. Utility::AddToClass( pyclass, ""__str__"", (PyCFunction) ClingPrintValue<ROOT::VecOps::RVec<float> >, METH_NOARGS );. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:5,security,updat,updated,5,"I've updated the code. Now, the feature can be added quite generically to all desired classes doing sth similar to this:. ```cpp. Utility::AddToClass( pyclass, ""__str__"", (PyCFunction) ClingPrintValue<ROOT::VecOps::RVec<float> >, METH_NOARGS );. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:40,reliability,doe,does,40,"The STL types (vector, tuple, map, ...) does not seem to have `cling::printValue` implementations? Though I see a pretty-printing in the cling prompt...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:66,usability,help,helpful,66,"The `ROOT.TH1` pretty-printing of `cling::printValue` is not very helpful:. ```python. >>> import ROOT. >>> h = ROOT.TH1F(""foo"", ""bar"", 10, 0, 10). >>> print(h). Name: foo Title: bar NbinsX: 10. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:59,safety,test,test,59,"Same for the `RDataFrame`:. ```python. >>> f = ROOT.TFile(""test.root"", ""RECREATE""). >>> tree = ROOT.TTree(""foo"", ""bar""). >>> [do sth with the tree ...]. >>> df = ROOT.RDataFrame(""foo"", ""test.root""). >>> print(df). A data frame built on top of the foo dataset. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:186,safety,test,test,186,"Same for the `RDataFrame`:. ```python. >>> f = ROOT.TFile(""test.root"", ""RECREATE""). >>> tree = ROOT.TTree(""foo"", ""bar""). >>> [do sth with the tree ...]. >>> df = ROOT.RDataFrame(""foo"", ""test.root""). >>> print(df). A data frame built on top of the foo dataset. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:59,testability,test,test,59,"Same for the `RDataFrame`:. ```python. >>> f = ROOT.TFile(""test.root"", ""RECREATE""). >>> tree = ROOT.TTree(""foo"", ""bar""). >>> [do sth with the tree ...]. >>> df = ROOT.RDataFrame(""foo"", ""test.root""). >>> print(df). A data frame built on top of the foo dataset. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:186,testability,test,test,186,"Same for the `RDataFrame`:. ```python. >>> f = ROOT.TFile(""test.root"", ""RECREATE""). >>> tree = ROOT.TTree(""foo"", ""bar""). >>> [do sth with the tree ...]. >>> df = ROOT.RDataFrame(""foo"", ""test.root""). >>> print(df). A data frame built on top of the foo dataset. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:98,integrability,sub,subset,98,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:444,integrability,sub,subset,444,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:532,performance,time,time,532,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:2,testability,understand,understand,2,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:282,usability,custom,custom,282,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:500,usability,user,user,500,"I understand the purpose of the PR switch from adding pretty printing to `RVec` to adding it to a subset of classes? A few comments:. - If we adopt the new cppyy, in principle pythonizations for STL classes are delegated to it (we only keep the ROOT ones). But we could add our own custom pythonizations if necessary, as long as they do not collide with cppyy's. - The pythonization mechanism is lazy, so actually we do not really iterate on a subset of classes we want to pythonize. Instead, when a user uses a class for the first time in the app, all the pythonizations for that class are added. In the case of this PR, we would need to add ifs (if not there yet) for the classes we want to pretty print.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:93,deployability,contain,containers,93,"@dpiparo `TString` and `std::string` are already handeled. @etejedor Did the printing of STL containers improve in the new cppyy version? Currently, I see only the name and the pointer of the object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:129,deployability,version,version,129,"@dpiparo `TString` and `std::string` are already handeled. @etejedor Did the printing of STL containers improve in the new cppyy version? Currently, I see only the name and the pointer of the object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:138,energy efficiency,Current,Currently,138,"@dpiparo `TString` and `std::string` are already handeled. @etejedor Did the printing of STL containers improve in the new cppyy version? Currently, I see only the name and the pointer of the object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:129,integrability,version,version,129,"@dpiparo `TString` and `std::string` are already handeled. @etejedor Did the printing of STL containers improve in the new cppyy version? Currently, I see only the name and the pointer of the object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:129,modifiability,version,version,129,"@dpiparo `TString` and `std::string` are already handeled. @etejedor Did the printing of STL containers improve in the new cppyy version? Currently, I see only the name and the pointer of the object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:33,deployability,version,version,33,@stwunsch I have a pretty recent version of cppyy and I am afraid it is still not pretty printing:. ```. >>> v = cppyy.gbl.std.vector[int](). >>> v.push_back(1). >>> print(v). <cppyy.gbl.std.vector<int> object at 0x37a6470>. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:33,integrability,version,version,33,@stwunsch I have a pretty recent version of cppyy and I am afraid it is still not pretty printing:. ```. >>> v = cppyy.gbl.std.vector[int](). >>> v.push_back(1). >>> print(v). <cppyy.gbl.std.vector<int> object at 0x37a6470>. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:33,modifiability,version,version,33,@stwunsch I have a pretty recent version of cppyy and I am afraid it is still not pretty printing:. ```. >>> v = cppyy.gbl.std.vector[int](). >>> v.push_back(1). >>> print(v). <cppyy.gbl.std.vector<int> object at 0x37a6470>. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:4,reliability,doe,does,4,"but does the new printing address cases like. ```. >>> myRVec. {1., 2., 3.}. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:199,safety,compl,completely,199,"@dpiparo for `ROOT.VecOps.RVec`, this is done by the code of this PR. Unfortunately, I do not see an option to do this for the STL classes because cling hides the `cling::printValue` implementations completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:199,security,compl,completely,199,"@dpiparo for `ROOT.VecOps.RVec`, this is done by the code of this PR. Unfortunately, I do not see an option to do this for the STL classes because cling hides the `cling::printValue` implementations completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:202,integrability,interfac,interface,202,"This *must* go through cling, else you don't get pretty printing for `vector<SomethingThatYouKnowHasUserOrROOTProvidedPrinting>` etc, which is where it becomes most interesting! If needed we can add an interface to `TInterpreter`; let me know what you want its arguments to be!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:202,interoperability,interfac,interface,202,"This *must* go through cling, else you don't get pretty printing for `vector<SomethingThatYouKnowHasUserOrROOTProvidedPrinting>` etc, which is where it becomes most interesting! If needed we can add an interface to `TInterpreter`; let me know what you want its arguments to be!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:202,modifiability,interfac,interface,202,"This *must* go through cling, else you don't get pretty printing for `vector<SomethingThatYouKnowHasUserOrROOTProvidedPrinting>` etc, which is where it becomes most interesting! If needed we can add an interface to `TInterpreter`; let me know what you want its arguments to be!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:196,integrability,interfac,interface,196,"Hi @Axel-Naumann, I let @stwunsch have the last word, but wouldn't something like. ```.cpp. std::string TInterpreter::PrintValue(string_view, void*). ```. the one we are looking for? Actually the interface above can be ""emulated"" by a function done more or less like this:. ```.cpp. std::string MyPrintValue(string_view clName, void *obj). {. std::string res;. std::sstream printValueInvocation;. printValueInvocation << ""*("" << &res << "") = cling::printValue(( "" << clName << ""*) "" << obj << "");"";. gInterpreter->Calc(printValueInvocation.str.c_str());. return res;. }. ```. i.e. invoking the value printing in the interpreted world to fill a string built in the compiled world which is then returned. It's then like the value has been printed at the ROOT prompt, but instead its value has been captured and reprinted by Python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:196,interoperability,interfac,interface,196,"Hi @Axel-Naumann, I let @stwunsch have the last word, but wouldn't something like. ```.cpp. std::string TInterpreter::PrintValue(string_view, void*). ```. the one we are looking for? Actually the interface above can be ""emulated"" by a function done more or less like this:. ```.cpp. std::string MyPrintValue(string_view clName, void *obj). {. std::string res;. std::sstream printValueInvocation;. printValueInvocation << ""*("" << &res << "") = cling::printValue(( "" << clName << ""*) "" << obj << "");"";. gInterpreter->Calc(printValueInvocation.str.c_str());. return res;. }. ```. i.e. invoking the value printing in the interpreted world to fill a string built in the compiled world which is then returned. It's then like the value has been printed at the ROOT prompt, but instead its value has been captured and reprinted by Python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:196,modifiability,interfac,interface,196,"Hi @Axel-Naumann, I let @stwunsch have the last word, but wouldn't something like. ```.cpp. std::string TInterpreter::PrintValue(string_view, void*). ```. the one we are looking for? Actually the interface above can be ""emulated"" by a function done more or less like this:. ```.cpp. std::string MyPrintValue(string_view clName, void *obj). {. std::string res;. std::sstream printValueInvocation;. printValueInvocation << ""*("" << &res << "") = cling::printValue(( "" << clName << ""*) "" << obj << "");"";. gInterpreter->Calc(printValueInvocation.str.c_str());. return res;. }. ```. i.e. invoking the value printing in the interpreted world to fill a string built in the compiled world which is then returned. It's then like the value has been printed at the ROOT prompt, but instead its value has been captured and reprinted by Python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:220,testability,emul,emulated,220,"Hi @Axel-Naumann, I let @stwunsch have the last word, but wouldn't something like. ```.cpp. std::string TInterpreter::PrintValue(string_view, void*). ```. the one we are looking for? Actually the interface above can be ""emulated"" by a function done more or less like this:. ```.cpp. std::string MyPrintValue(string_view clName, void *obj). {. std::string res;. std::sstream printValueInvocation;. printValueInvocation << ""*("" << &res << "") = cling::printValue(( "" << clName << ""*) "" << obj << "");"";. gInterpreter->Calc(printValueInvocation.str.c_str());. return res;. }. ```. i.e. invoking the value printing in the interpreted world to fill a string built in the compiled world which is then returned. It's then like the value has been printed at the ROOT prompt, but instead its value has been captured and reprinted by Python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:30,availability,down,downside,30,"I've fixed the issue with the downside of an even more bloated `ROOT.py`. However, this is what it looks like:. ```python. >>> v = ROOT.VecOps.RVec('float')(5). >>> for i in range(len(v)): v[i] = i. >>> print(v). { 0, 1, 2, 3, 4 }. ```. ```python. >>> v = ROOT.std.vector('float')(5). >>> for i in range(len(v)): v[i] = i. >>> print(v). { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:104,integrability,sub,subset,104,"As discussed with Stefan, `Pythonize.cxx` *knows* the C++ type of a `PyObject`. Instead of annotating a subset of classes as done here we should make use of that knowledge to have a generic binding to `cling::printValue` for `PyObject`s. This is not meant to veto this PR. But @etejedor could you open a Jira ticket that points this enhancement out, if this PR gets merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:190,interoperability,bind,binding,190,"As discussed with Stefan, `Pythonize.cxx` *knows* the C++ type of a `PyObject`. Instead of annotating a subset of classes as done here we should make use of that knowledge to have a generic binding to `cling::printValue` for `PyObject`s. This is not meant to veto this PR. But @etejedor could you open a Jira ticket that points this enhancement out, if this PR gets merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:190,modifiability,bind,binding,190,"As discussed with Stefan, `Pythonize.cxx` *knows* the C++ type of a `PyObject`. Instead of annotating a subset of classes as done here we should make use of that knowledge to have a generic binding to `cling::printValue` for `PyObject`s. This is not meant to veto this PR. But @etejedor could you open a Jira ticket that points this enhancement out, if this PR gets merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:158,interoperability,prox,proxies,158,As we discussed verbally: just like PyROOT/cppyy hooks into `dir(obj)` it should probably provide the stringification through cling - for every C++ object it proxies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:49,testability,hook,hooks,49,As we discussed verbally: just like PyROOT/cppyy hooks into `dir(obj)` it should probably provide the stringification through cling - for every C++ object it proxies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:165,deployability,updat,updated,165,"Thanks @Axel-Naumann, you were right. It is possible to get the name of the C++ class through the ObjectProxy/PyObject in the Pythonization layer (it has to!). I've updated the code respectively. Much nicer now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:140,modifiability,layer,layer,140,"Thanks @Axel-Naumann, you were right. It is possible to get the name of the C++ class through the ObjectProxy/PyObject in the Pythonization layer (it has to!). I've updated the code respectively. Much nicer now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:165,safety,updat,updated,165,"Thanks @Axel-Naumann, you were right. It is possible to get the name of the C++ class through the ObjectProxy/PyObject in the Pythonization layer (it has to!). I've updated the code respectively. Much nicer now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:165,security,updat,updated,165,"Thanks @Axel-Naumann, you were right. It is possible to get the name of the C++ class through the ObjectProxy/PyObject in the Pythonization layer (it has to!). I've updated the code respectively. Much nicer now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:242,interoperability,specif,specify,242,"Alright, nice :) The thing with the interpreter does the trick! Now the overload of `__str__` behaves exactly as the ROOT prompt and we could add it generically to all PyROOT objects. On top, all STL classes are supported without the need to specify them exactly! ->. ```python. >>> v = ROOT.std.vector('float')(5). >>> for i in range(len(v)): v[i] = i. >>> print(v). { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }. ```. ```python. >>> m = ROOT.std.map(""string"", ""int"")(). >>> m[""foo""] = 42. >>> m[""bar""] = -1. >>> print(m). { ""bar"" => -1, ""foo"" => 42 }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:48,reliability,doe,does,48,"Alright, nice :) The thing with the interpreter does the trick! Now the overload of `__str__` behaves exactly as the ROOT prompt and we could add it generically to all PyROOT objects. On top, all STL classes are supported without the need to specify them exactly! ->. ```python. >>> v = ROOT.std.vector('float')(5). >>> for i in range(len(v)): v[i] = i. >>> print(v). { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }. ```. ```python. >>> m = ROOT.std.map(""string"", ""int"")(). >>> m[""foo""] = 42. >>> m[""bar""] = -1. >>> print(m). { ""bar"" => -1, ""foo"" => 42 }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:212,usability,support,supported,212,"Alright, nice :) The thing with the interpreter does the trick! Now the overload of `__str__` behaves exactly as the ROOT prompt and we could add it generically to all PyROOT objects. On top, all STL classes are supported without the need to specify them exactly! ->. ```python. >>> v = ROOT.std.vector('float')(5). >>> for i in range(len(v)): v[i] = i. >>> print(v). { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }. ```. ```python. >>> m = ROOT.std.map(""string"", ""int"")(). >>> m[""foo""] = 42. >>> m[""bar""] = -1. >>> print(m). { ""bar"" => -1, ""foo"" => 42 }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:31,availability,avail,available,31,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:300,availability,error,error,300,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:113,deployability,build,build,113,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:148,interoperability,bind,bindings,148,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:148,modifiability,bind,bindings,148,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:300,performance,error,error,300,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:31,reliability,availab,available,31,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:31,safety,avail,available,31,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:125,safety,test,testReport,125,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:164,safety,test,test,164,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:300,safety,error,error,300,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:31,security,availab,available,31,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:125,testability,test,testReport,125,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:164,testability,test,test,164,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:300,usability,error,error,300,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```. test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: . input_line_39:2:36: error: no matching function for call to 'printValue'. *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:63,deployability,build,build,63,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:81,deployability,log,log,81,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:7,reliability,Doe,Does,7,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:81,safety,log,log,81,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:81,security,log,log,81,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:81,testability,log,log,81,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:100,availability,failur,failures,100,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:100,deployability,fail,failures,100,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:100,performance,failur,failures,100,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:100,reliability,fail,failures,100,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:95,safety,test,test,95,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:95,testability,test,test,95,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:24,availability,operat,operator,24,build with fixed PyROOT operator test in roottest repo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:0,deployability,build,build,0,build with fixed PyROOT operator test in roottest repo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:33,safety,test,test,33,build with fixed PyROOT operator test in roottest repo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:33,testability,test,test,33,build with fixed PyROOT operator test in roottest repo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:60,safety,test,tests,60,"@etejedor from my side, this PR is ready to go! Any further tests desired in the unit-test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:86,safety,test,test,86,"@etejedor from my side, this PR is ready to go! Any further tests desired in the unit-test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:60,testability,test,tests,60,"@etejedor from my side, this PR is ready to go! Any further tests desired in the unit-test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:81,testability,unit,unit-test,81,"@etejedor from my side, this PR is ready to go! Any further tests desired in the unit-test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2097:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2097
https://github.com/root-project/root/pull/2104:11,deployability,build,build,11,@phsft-bot build just on slc6-i686/gcc49,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2104
https://github.com/root-project/root/pull/2104:50,deployability,build,build,50,"@amadio ""it"" being this PR, or ""it"" being ""ph-sft build on 32bit""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2104
https://github.com/root-project/root/pull/2104:4,usability,command,command,4,The command given to the bot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2104
https://github.com/root-project/root/pull/2105:44,security,modif,modifications,44,@dpiparo is this ok to merge or should I do modifications to the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2105
https://github.com/root-project/root/pull/2106:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2106
https://github.com/root-project/root/pull/2107:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2107
https://github.com/root-project/root/pull/2108:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:27,deployability,updat,update,27,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:154,deployability,build,build,154,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:27,safety,updat,update,27,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:133,safety,test,test,133,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:27,security,updat,update,27,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2108:133,testability,test,test,133,"HI, . I need to revert the update of the reference file of stressRooFIt, which was done after #2033. . I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2108
https://github.com/root-project/root/pull/2109:31,energy efficiency,green,green,31,@dpiparo @Axel-Naumann gave me green light to merge doc changes yesterday,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2109
https://github.com/root-project/root/pull/2111:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2111
https://github.com/root-project/root/pull/2112:59,deployability,fail,fails,59,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:74,deployability,modul,module,74,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:81,deployability,build,builds,81,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:74,modifiability,modul,module,74,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:59,reliability,fail,fails,59,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:54,safety,test,test,54,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:74,safety,modul,module,74,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:54,testability,test,test,54,"Marking ""do not merge"" until it's understood why this test fails only for module builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:0,deployability,Updat,Updated,0,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:8,deployability,patch,patch,8,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:0,safety,Updat,Updated,0,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:8,safety,patch,patch,8,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:0,security,Updat,Updated,0,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2112:8,security,patch,patch,8,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2112
https://github.com/root-project/root/pull/2113:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:34,availability,error,errors,34,@Axel-Naumann @amadio I think the errors are spurious. I do not merge since we are not in a hurry anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:34,performance,error,errors,34,@Axel-Naumann @amadio I think the errors are spurious. I do not merge since we are not in a hurry anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:34,safety,error,errors,34,@Axel-Naumann @amadio I think the errors are spurious. I do not merge since we are not in a hurry anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:34,usability,error,errors,34,@Axel-Naumann @amadio I think the errors are spurious. I do not merge since we are not in a hurry anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:16,availability,error,errors,16,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:147,deployability,modul,modules,147,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:155,deployability,build,build,155,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:238,deployability,fail,fails,238,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:280,deployability,build,build,280,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:391,deployability,version,versions,391,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:391,integrability,version,versions,391,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:367,interoperability,mismatch,mismatch,367,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:147,modifiability,modul,modules,147,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:391,modifiability,version,versions,391,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:16,performance,error,errors,16,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:238,reliability,fail,fails,238,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:16,safety,error,errors,16,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:147,safety,modul,modules,147,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:16,usability,error,errors,16,"Hi @dpiparo The errors are real, but they are certainly not caused by your changes. For example, we need to rename VecOps to ROOTVecOps to fix the modules build. The implementation of libNew has been always broken for C++17, and snapshot fails on 32bit since a while too. The new build matrix for PRs just uncovered the problems. For the Python problems, it may be a mismatch between Python versions in roottest and root, I need to investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:169,availability,error,error,169,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:401,availability,error,error,401,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:633,availability,error,error,633,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:873,availability,error,error,873,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1113,availability,error,error,1113,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1354,availability,error,error,1354,"sts-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1577,availability,error,error,1577,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1806,availability,error,error,1806,"space\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2057,availability,error,error,2057,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2077,availability,error,error,2077,"uild\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2276,availability,error,error,2276,"\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2296,availability,error,error,2296,"t-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2476,availability,error,error,2476,"s.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2692,availability,error,error,2692,"ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2943,availability,error,error,2943,ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3194,availability,error,error,3194,7 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3445,availability,error,error,3445,include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3696,availability,error,error,3696,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3947,availability,error,error,3947,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4198,availability,error,error,4198,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4449,availability,error,error,4449,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4700,availability,error,error,4700,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4951,availability,error,error,4951,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5202,availability,error,error,5202,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:12,deployability,build,build,12,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:95,deployability,build,build,95,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:129,deployability,build,build,129,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:135,deployability,build,build,135,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:236,deployability,build,build,236,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:270,deployability,build,build,270,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:276,deployability,build,build,276,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:327,deployability,build,build,327,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:361,deployability,build,build,361,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:367,deployability,build,build,367,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:468,deployability,build,build,468,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:502,deployability,build,build,502,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:508,deployability,build,build,508,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:559,deployability,build,build,559,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:593,deployability,build,build,593,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:599,deployability,build,build,599,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:708,deployability,build,build,708,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:742,deployability,build,build,742,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:748,deployability,build,build,748,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:799,deployability,build,build,799,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:833,deployability,build,build,833,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:839,deployability,build,build,839,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:948,deployability,build,build,948,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:982,deployability,build,build,982,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:988,deployability,build,build,988,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1039,deployability,build,build,1039," after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1073,deployability,build,build,1073,". ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1079,deployability,build,build,1079," 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1189,deployability,build,build,1189,"is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1223,deployability,build,build,1223,"ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1229,deployability,build,build,1229,"[C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1280,deployability,build,build,1280,"ath\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1314,deployability,build,build,1314,":23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1320,deployability,build,build,1320," C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1412,deployability,build,build,1412,"VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1446,deployability,build,build,1446,":VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1452,deployability,build,build,1452,"s::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1503,deployability,build,build,1503,"d\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1537,deployability,build,build,1537,"proj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1543,deployability,build,build,1543," 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1641,deployability,build,build,1641,": 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1675,deployability,build,build,1675," of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1681,deployability,build,build,1681,"'::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1732,deployability,build,build,1732,"quests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1766,deployability,build,build,1766,"TVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1772,deployability,build,build,1772,"s.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1892,deployability,build,build,1892," the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1926,deployability,build,build,1926,"must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1932,deployability,build,build,1932,"e a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1983,deployability,build,build,1983,"d\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2017,deployability,build,build,2017,"proj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2023,deployability,build,build,2023," 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2111,deployability,build,build,2111,"rror C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2145,deployability,build,build,2145,"not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullreq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2151,deployability,build,build,2151,"member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2202,deployability,build,build,2202,"root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2236,deployability,build,build,2236,"\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class temp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2242,deployability,build,build,2242,"s\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2311,deployability,build,build,2311,"build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2345,deployability,build,build,2345,"148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2351,deployability,build,build,2351,"error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2402,deployability,build,build,2402,"er [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2436,deployability,build,build,2436,"quests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2442,deployability,build,build,2442,"-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2527,deployability,build,build,2527,"quests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2561,deployability,build,build,2561,"ec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2567,deployability,build,build,2567,"(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2618,deployability,build,build,2618,"s an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2652,deployability,build,build,2652,"e\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2658,deployability,build,build,2658,"-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2778,deployability,build,build,2778,"lude\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2812,deployability,build,build,2812,"74: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2818,deployability,build,build,2818,"td::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2869,deployability,build,build,2869,", type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2903,deployability,build,build,2903,e\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2909,deployability,build,build,2909,-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3029,deployability,build,build,3029,lude\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3063,deployability,build,build,3063,43: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3069,deployability,build,build,3069,ntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3120,deployability,build,build,3120,ace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3154,deployability,build,build,3154,math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3160,deployability,build,build,3160,ecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3280,deployability,build,build,3280,2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3314,deployability,build,build,3314,workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3320,deployability,build,build,3320,ace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3371,deployability,build,build,3371,ecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3405,deployability,build,build,3405,workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3411,deployability,build,build,3411,ace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3531,deployability,build,build,3531,orkspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3565,deployability,build,build,3565,uild\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3571,deployability,build,build,3571,ath\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3622,deployability,build,build,3622,orkspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3656,deployability,build,build,3656,uild\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3662,deployability,build,build,3662,nclude\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3782,deployability,build,build,3782,orkspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3816,deployability,build,build,3816,uild\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3822,deployability,build,build,3822,ath\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3873,deployability,build,build,3873,orkspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3907,deployability,build,build,3907,uild\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3913,deployability,build,build,3913,nclude\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4033,deployability,build,build,4033,orkspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4067,deployability,build,build,4067,uild\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4073,deployability,build,build,4073,ath\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4124,deployability,build,build,4124,orkspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4158,deployability,build,build,4158,uild\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4164,deployability,build,build,4164,nclude\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4284,deployability,build,build,4284,orkspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4318,deployability,build,build,4318,uild\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4324,deployability,build,build,4324,ath\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4375,deployability,build,build,4375,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4409,deployability,build,build,4409,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4415,deployability,build,build,4415,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4535,deployability,build,build,4535,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4569,deployability,build,build,4569,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4575,deployability,build,build,4575,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4626,deployability,build,build,4626,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4660,deployability,build,build,4660,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4666,deployability,build,build,4666,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4786,deployability,build,build,4786,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4820,deployability,build,build,4820,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4826,deployability,build,build,4826,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4877,deployability,build,build,4877,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4911,deployability,build,build,4911,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4917,deployability,build,build,4917,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5037,deployability,build,build,5037,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5071,deployability,build,build,5071,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5077,deployability,build,build,5077,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5128,deployability,build,build,5128,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5162,deployability,build,build,5162,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5168,deployability,build,build,5168,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5288,deployability,build,build,5288,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5322,deployability,build,build,5322,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5328,deployability,build,build,5328,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:169,performance,error,error,169,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:401,performance,error,error,401,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:633,performance,error,error,633,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:873,performance,error,error,873,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1113,performance,error,error,1113,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1354,performance,error,error,1354,"sts-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1577,performance,error,error,1577,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1806,performance,error,error,1806,"space\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2057,performance,error,error,2057,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2077,performance,error,error,2077,"uild\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2276,performance,error,error,2276,"\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2296,performance,error,error,2296,"t-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2476,performance,error,error,2476,"s.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2692,performance,error,error,2692,"ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2943,performance,error,error,2943,ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3194,performance,error,error,3194,7 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3445,performance,error,error,3445,include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3696,performance,error,error,3696,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3947,performance,error,error,3947,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4198,performance,error,error,4198,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4449,performance,error,error,4449,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4700,performance,error,error,4700,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4951,performance,error,error,4951,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5202,performance,error,error,5202,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:169,safety,error,error,169,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:401,safety,error,error,401,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:633,safety,error,error,633,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:873,safety,error,error,873,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1113,safety,error,error,1113,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1354,safety,error,error,1354,"sts-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1577,safety,error,error,1577,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1806,safety,error,error,1806,"space\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2057,safety,error,error,2057,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2077,safety,error,error,2077,"uild\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2276,safety,error,error,2276,"\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2296,safety,error,error,2296,"t-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2476,safety,error,error,2476,"s.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2692,safety,error,error,2692,"ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2943,safety,error,error,2943,ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3194,safety,error,error,3194,7 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3445,safety,error,error,3445,include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3696,safety,error,error,3696,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3947,safety,error,error,3947,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4198,safety,error,error,4198,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4449,safety,error,error,4449,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4700,safety,error,error,4700,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4951,safety,error,error,4951,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5202,safety,error,error,5202,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1397,security,ident,identifier,1397,"rror C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2500,security,token,token,2500,"build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:169,usability,error,error,169,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:401,usability,error,error,401,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:633,usability,error,error,633,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:873,usability,error,error,873,"The Windows build seems to need some fixes after the rename of TVec -> RVec:. ```. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1113,usability,error,error,1113,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1354,usability,error,error,1354,"sts-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1577,usability,error,error,1577,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:1806,usability,error,error,1806,"space\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2057,usability,error,error,2057,"pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullreques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2077,usability,error,error,2077,"uild\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2276,usability,error,error,2276,"\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2296,usability,error,error,2296,"t-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2476,usability,error,error,2476,"s.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2692,usability,error,error,2692,"ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:2943,usability,error,error,2943,ops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2143: syntax error: missing ';' before '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3194,usability,error,error,3194,7 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2059: syntax error: '>' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3445,usability,error,error,3445,include\ROOT/RVec.hxx(148): error C2238: unexpected token(s) preceding ';' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(149): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3696,usability,error,error,3696,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(150): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:3947,usability,error,error,3947,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(151): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4198,usability,error,error,4198,2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4449,usability,error,error,4449,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4700,usability,error,error,4700,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:4951,usability,error,error,4951,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2113:5202,usability,error,error,5202,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2113
https://github.com/root-project/root/pull/2116:296,availability,error,error,296,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:278,performance,time,time,278,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:296,performance,error,error,296,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:386,performance,time,time,386,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:296,safety,error,error,296,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:426,safety,test,tests,426,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:426,testability,test,tests,426,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2116:296,usability,error,error,296,"@etejedor I took out the commit that assumed entries in `TEntryList` are always ordered, I will open a separate PR with only that commit where we can discuss that particular issue. I also added a commit that moves back the retrieval of the tree name to `TTreeView` construction time, so we still error out early even if the actual `TChain` construction is now done later, at processing time. AFAIK the PR is ready to merge if tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2116
https://github.com/root-project/root/pull/2117:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:11,deployability,build,build,11,@phsft-bot build it and to it quick-like!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:229,availability,consist,consistent,229,"Hi Manos, . Can you please fix the warnings and address the other comments. . There is a small backward uncompatible change in the XML file, changing from ""frameWidth"" to ""FilterWidth"", but I think is fine and it is better to be consistent. . Afterwards I think the PR is ready to be merged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:172,integrability,Filter,FilterWidth,172,"Hi Manos, . Can you please fix the warnings and address the other comments. . There is a small backward uncompatible change in the XML file, changing from ""frameWidth"" to ""FilterWidth"", but I think is fine and it is better to be consistent. . Afterwards I think the PR is ready to be merged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:131,interoperability,XML,XML,131,"Hi Manos, . Can you please fix the warnings and address the other comments. . There is a small backward uncompatible change in the XML file, changing from ""frameWidth"" to ""FilterWidth"", but I think is fine and it is better to be consistent. . Afterwards I think the PR is ready to be merged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:229,usability,consist,consistent,229,"Hi Manos, . Can you please fix the warnings and address the other comments. . There is a small backward uncompatible change in the XML file, changing from ""frameWidth"" to ""FilterWidth"", but I think is fine and it is better to be consistent. . Afterwards I think the PR is ready to be merged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:92,deployability,build,build,92,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:111,deployability,updat,update,111,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:140,interoperability,XML,XML,140,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:144,interoperability,incompatib,incompatibility,144,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:111,safety,updat,update,111,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:111,security,updat,update,111,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:41,usability,feedback,feedback,41,"Hi Lorenzo,. Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:10,safety,avoid,avoid,10,"We try to avoid merge commits inside PRs, please use rebase instead. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:88,energy efficiency,current,current,88,Good point @pcanal thanks! Should I start doing that in other PRs or somehow change the current one as well?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:21,energy efficiency,current,current,21,Could you change the current one? (It can't be brought into the master with a merge commit :) ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:227,energy efficiency,current,current,227,"Yes I will do that. . ~~My plan is to revert the merge (by resetting to the last feature commit), rebase and force push.~~. I will open a new PR with a cleaner history altogether. I know its suboptimal because we will lose the current code review discussion but I want to be sure that the history is clean before merging. I have also taken notes of all the points raised here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:191,integrability,sub,suboptimal,191,"Yes I will do that. . ~~My plan is to revert the merge (by resetting to the last feature commit), rebase and force push.~~. I will open a new PR with a cleaner history altogether. I know its suboptimal because we will lose the current code review discussion but I want to be sure that the history is clean before merging. I have also taken notes of all the points raised here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:240,safety,review,review,240,"Yes I will do that. . ~~My plan is to revert the merge (by resetting to the last feature commit), rebase and force push.~~. I will open a new PR with a cleaner history altogether. I know its suboptimal because we will lose the current code review discussion but I want to be sure that the history is clean before merging. I have also taken notes of all the points raised here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:27,testability,plan,plan,27,"Yes I will do that. . ~~My plan is to revert the merge (by resetting to the last feature commit), rebase and force push.~~. I will open a new PR with a cleaner history altogether. I know its suboptimal because we will lose the current code review discussion but I want to be sure that the history is clean before merging. I have also taken notes of all the points raised here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:240,testability,review,review,240,"Yes I will do that. . ~~My plan is to revert the merge (by resetting to the last feature commit), rebase and force push.~~. I will open a new PR with a cleaner history altogether. I know its suboptimal because we will lose the current code review discussion but I want to be sure that the history is clean before merging. I have also taken notes of all the points raised here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:21,testability,simpl,simplified,21,Opened a new PR with simplified history [here](https://github.com/root-project/root/pull/2229). All comments have been addressed. Closing this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2117:21,usability,simpl,simplified,21,Opened a new PR with simplified history [here](https://github.com/root-project/root/pull/2229). All comments have been addressed. Closing this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2117
https://github.com/root-project/root/pull/2118:41,deployability,build,build,41,"Note: As far as I know, Jenkins will not build with CUDA, and will therefore not run my CUDA tests. They do pass on my machine at least!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2118
https://github.com/root-project/root/pull/2118:93,safety,test,tests,93,"Note: As far as I know, Jenkins will not build with CUDA, and will therefore not run my CUDA tests. They do pass on my machine at least!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2118
https://github.com/root-project/root/pull/2118:93,testability,test,tests,93,"Note: As far as I know, Jenkins will not build with CUDA, and will therefore not run my CUDA tests. They do pass on my machine at least!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2118
https://github.com/root-project/root/pull/2118:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2118
https://github.com/root-project/root/pull/2118:11,deployability,build,build,11,@phsft-bot build it again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2118
https://github.com/root-project/root/pull/2119:11,deployability,build,build,11,@phsft-bot build just on fedora28/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2119
https://github.com/root-project/root/pull/2120:100,deployability,build,buildid,100,"Thanks, Mattias! We're running and passing on AArch64: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=515508. What's different about yours?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:187,deployability,version,version,187,"Hi Matthias, sorry for the late reply. I have recently changed the stressgraphics ref file. Can you take the new one and verify it on your machine ? I guess you will need to submit a new version of the ref file in this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:174,integrability,sub,submit,174,"Hi Matthias, sorry for the late reply. I have recently changed the stressgraphics ref file. Can you take the new one and verify it on your machine ? I guess you will need to submit a new version of the ref file in this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:187,integrability,version,version,187,"Hi Matthias, sorry for the late reply. I have recently changed the stressgraphics ref file. Can you take the new one and verify it on your machine ? I guess you will need to submit a new version of the ref file in this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:187,modifiability,version,version,187,"Hi Matthias, sorry for the late reply. I have recently changed the stressgraphics ref file. Can you take the new one and verify it on your machine ? I guess you will need to submit a new version of the ref file in this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:121,testability,verif,verify,121,"Hi Matthias, sorry for the late reply. I have recently changed the stressgraphics ref file. Can you take the new one and verify it on your machine ? I guess you will need to submit a new version of the ref file in this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:377,deployability,build,building,377,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:18,integrability,sub,submitted,18,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:287,interoperability,conflict,conflicts,287,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:130,safety,test,test,130,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:178,safety,test,test,178,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:130,testability,test,test,130,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:178,testability,test,test,178,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2120:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2120
https://github.com/root-project/root/pull/2121:11,deployability,build,build,11,@phsft-bot build just slc6-i686/gcc49,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:342,deployability,patch,patch,342,"Some numbers. If you take this script:. ```.cpp. int openManyTimes() {. ROOT::EnableThreadSafety();. auto workItem = [](int i){delete TFile::Open(""DataForDanilo/ntuple_1155.root"");return i;};. ROOT::TThreadExecutor pool(7);. pool.Map(workItem, ROOT::TSeqI(100000));. return 0;. }. ```. And run it, you need on my computer ~6 minutes w/o this patch and 11s with.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:342,safety,patch,patch,342,"Some numbers. If you take this script:. ```.cpp. int openManyTimes() {. ROOT::EnableThreadSafety();. auto workItem = [](int i){delete TFile::Open(""DataForDanilo/ntuple_1155.root"");return i;};. ROOT::TThreadExecutor pool(7);. pool.Map(workItem, ROOT::TSeqI(100000));. return 0;. }. ```. And run it, you need on my computer ~6 minutes w/o this patch and 11s with.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:342,security,patch,patch,342,"Some numbers. If you take this script:. ```.cpp. int openManyTimes() {. ROOT::EnableThreadSafety();. auto workItem = [](int i){delete TFile::Open(""DataForDanilo/ntuple_1155.root"");return i;};. ROOT::TThreadExecutor pool(7);. pool.Map(workItem, ROOT::TSeqI(100000));. return 0;. }. ```. And run it, you need on my computer ~6 minutes w/o this patch and 11s with.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:58,deployability,patch,patch,58,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:173,deployability,patch,patch,173,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:58,safety,patch,patch,58,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:115,safety,compl,completeness,115,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:173,safety,patch,patch,173,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:58,security,patch,patch,58,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:115,security,compl,completeness,115,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:173,security,patch,patch,173,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:230,security,Hash,Hashing,230,"> And run it, you need on my computer ~6 minutes w/o this patch and 11s with. That is **very** nice :) Thanks. For completeness, what is the difference with and without the patch with a single thread (i.e. essentially cost of the Hashing vs cost of unstreaming).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:38,deployability,patch,patch,38,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:87,deployability,patch,patch,87,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:70,performance,time,time,70,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:38,safety,patch,patch,38,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:87,safety,patch,patch,87,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:38,security,patch,patch,38,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:87,security,patch,patch,87,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:223,security,hash,hashing,223,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:46,deployability,patch,patch,46,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:29,performance,time,time,29,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:46,safety,patch,patch,46,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:46,security,patch,patch,46,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:241,security,Hash,Hash,241,"> , opening the same file 5k time 1s. W/o the patch 5.6s. . Great. That is what I was hoping. This should even speed-up opening distinct but similar files (i.e. produced with the same set of StreamerInfo) and the cost for the case where the Hash is non-active (single files or series of files with distinct StreamerInfo set) seems to be negligeable. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:352,deployability,patch,patch,352,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:391,deployability,patch,patch,391,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:17,energy efficiency,measur,measurement,17,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:217,energy efficiency,Draw,Draw,217,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:361,energy efficiency,core,cores,361,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:5,performance,perform,performance,5,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:352,safety,patch,patch,352,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:391,safety,patch,patch,391,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:352,security,patch,patch,352,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:391,security,patch,patch,391,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:5,usability,perform,performance,5,"Last performance measurement:. ```.cpp. #include <ROOT/RDataFrame.hxx>. int main(). {. ROOT::EnableImplicitMT();. auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");. tdf.Histo1D(""run"")->Draw();. return 0;. }. ```. where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:41,security,hash,hash,41,"One last challenge though. Since this is hash based, different StreamerInfo Sets will/can have the same hash value, what is the behavior (and what can we do about it) if the user ends up reading 2 such files in the same process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:104,security,hash,hash,104,"One last challenge though. Since this is hash based, different StreamerInfo Sets will/can have the same hash value, what is the behavior (and what can we do about it) if the user ends up reading 2 such files in the same process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:128,usability,behavi,behavior,128,"One last challenge though. Since this is hash based, different StreamerInfo Sets will/can have the same hash value, what is the behavior (and what can we do about it) if the user ends up reading 2 such files in the same process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2121:174,usability,user,user,174,"One last challenge though. Since this is hash based, different StreamerInfo Sets will/can have the same hash value, what is the behavior (and what can we do about it) if the user ends up reading 2 such files in the same process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2121
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build just on ubuntu16/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build just on ubuntu16/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2122:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2122
https://github.com/root-project/root/pull/2123:147,deployability,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:147,modifiability,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:147,safety,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:147,deployability,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:147,modifiability,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:147,safety,modul,modules,147,"@yamaguchi1024 Note that the instability started/was-introduced by . ```. commit 180c3a8243a49ef37885493e4023f71e7f376f88. [cxxmodules] Preloading modules and autoloading libraries by deserialized decls. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:21,reliability,doe,does,21,"@vgvassilev PR #2093 does not seem to fix the instability of execUnloading, is that correct? Were you able to reproduce the missing transaction issue with PR #2093 (i.e. is it known that it remove the needs for the extra transaction)? Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:123,reliability,doe,does,123,"@vgvassilev Since this is adding missing transactions (i.e. transaction around calls that can lead to deserialization) and does not introduce any new problem (see https://github.com/root-project/root/pull/2123 for constrast), can we merge this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:53,deployability,log,log,53,"Yes we should. I don't see a commit with this commit log in the branch, but `git cherry-pick` says it's already there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:53,safety,log,log,53,"Yes we should. I don't see a commit with this commit log in the branch, but `git cherry-pick` says it's already there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:53,security,log,log,53,"Yes we should. I don't see a commit with this commit log in the branch, but `git cherry-pick` says it's already there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2123:53,testability,log,log,53,"Yes we should. I don't see a commit with this commit log in the branch, but `git cherry-pick` says it's already there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2123
https://github.com/root-project/root/pull/2128:7,deployability,updat,update,7,Can we update `IsLoaded()` to call `IsLibLoaded()` instead of having its own copy of the body of `IsLibLoaded()`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:7,safety,updat,update,7,Can we update `IsLoaded()` to call `IsLibLoaded()` instead of having its own copy of the body of `IsLibLoaded()`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:7,security,updat,update,7,Can we update `IsLoaded()` to call `IsLibLoaded()` instead of having its own copy of the body of `IsLibLoaded()`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:149,deployability,fail,fails,149,@Axel-Naumann . I tested but calling IsLibraryLoaded from IsLoaded didn't work because they are both taking `R__LOCKGUARD(gInterpreterMutex)` and it fails root_aclic_misc_assertROOT7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:149,reliability,fail,fails,149,@Axel-Naumann . I tested but calling IsLibraryLoaded from IsLoaded didn't work because they are both taking `R__LOCKGUARD(gInterpreterMutex)` and it fails root_aclic_misc_assertROOT7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:18,safety,test,tested,18,@Axel-Naumann . I tested but calling IsLibraryLoaded from IsLoaded didn't work because they are both taking `R__LOCKGUARD(gInterpreterMutex)` and it fails root_aclic_misc_assertROOT7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:18,testability,test,tested,18,@Axel-Naumann . I tested but calling IsLibraryLoaded from IsLoaded didn't work because they are both taking `R__LOCKGUARD(gInterpreterMutex)` and it fails root_aclic_misc_assertROOT7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:38,modifiability,paramet,parameter,38,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:73,performance,lock,lock,73,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:132,performance,lock,lock,132,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:180,performance,lock,lock,180,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:73,security,lock,lock,73,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:132,security,lock,lock,132,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:180,security,lock,lock,180,"@yamaguchi1024, we could add one more parameter which takes optionally a lock guard. Within the body of `IsLoaded` we will pass the lock guard, and in any other cases we will just lock regularly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:77,performance,lock,lock,77,"That sounds a bit too much for me, I guess user of TCling doesn't care about lock and so on, what do you think @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:58,reliability,doe,doesn,58,"That sounds a bit too much for me, I guess user of TCling doesn't care about lock and so on, what do you think @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:77,security,lock,lock,77,"That sounds a bit too much for me, I guess user of TCling doesn't care about lock and so on, what do you think @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:43,usability,user,user,43,"That sounds a bit too much for me, I guess user of TCling doesn't care about lock and so on, what do you think @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:36,modifiability,reu,reuse,36,I think without the suggestion code reuse refactoring we cannot land this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:42,modifiability,refact,refactoring,42,I think without the suggestion code reuse refactoring we cannot land this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:42,performance,refactor,refactoring,42,I think without the suggestion code reuse refactoring we cannot land this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:96,modifiability,concern,concerned,96,The new function IsLibraryLoaded and the old one do not do the same thing as far as library are concerned. Do we understand what this difference is and did we document it? (Calling FindDynamicLibrary or not).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:96,testability,concern,concerned,96,The new function IsLibraryLoaded and the old one do not do the same thing as far as library are concerned. Do we understand what this difference is and did we document it? (Calling FindDynamicLibrary or not).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:113,testability,understand,understand,113,The new function IsLibraryLoaded and the old one do not do the same thing as far as library are concerned. Do we understand what this difference is and did we document it? (Calling FindDynamicLibrary or not).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:159,usability,document,document,159,The new function IsLibraryLoaded and the old one do not do the same thing as far as library are concerned. Do we understand what this difference is and did we document it? (Calling FindDynamicLibrary or not).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:212,safety,input,input,212,"Putting ""isLock"" to IsLibraryLoaded sounds strange to me, but I'm fine with the suggestion if people agree. The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. In IsLoaded, it was calling it because it didn't know whether input is a macro/header/or library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:300,safety,input,input,300,"Putting ""isLock"" to IsLibraryLoaded sounds strange to me, but I'm fine with the suggestion if people agree. The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. In IsLoaded, it was calling it because it didn't know whether input is a macro/header/or library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:212,usability,input,input,212,"Putting ""isLock"" to IsLibraryLoaded sounds strange to me, but I'm fine with the suggestion if people agree. The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. In IsLoaded, it was calling it because it didn't know whether input is a macro/header/or library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:300,usability,input,input,300,"Putting ""isLock"" to IsLibraryLoaded sounds strange to me, but I'm fine with the suggestion if people agree. The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. In IsLoaded, it was calling it because it didn't know whether input is a macro/header/or library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:448,availability,state,statement,448,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:265,deployability,updat,updated,265,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:276,deployability,contain,contains,276,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:465,energy efficiency,current,current,465,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:448,integrability,state,statement,448,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:370,interoperability,semant,semantic,370,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:345,performance,overhead,overhead,345,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:265,safety,updat,updated,265,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:265,security,updat,updated,265,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:8,testability,understand,understand,8,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:239,usability,document,documentation,239,"So if I understand correctly 'getDynamicLibraryManager()->isLibraryLoaded(libname);' will return the 'correct' answer whether libname is a full or partial name, is that correct? If it is correct, then the code is set but the commit and/or documentation needs to be updated to contains this set of additional information (i.e. explanation of the overhead of isLoaded and semantic of isLibraryLoaded, etc .... they even provide an answer to the last statement of the current commit [""difficult to believe that this difference is only caused by using IsLibLoaded instead of IsLoaded..]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:95,deployability,updat,update,95,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:79,safety,input,input,79,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:95,safety,updat,update,95,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:95,security,updat,update,95,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:79,usability,input,input,79,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:106,usability,document,document,106,"getDynamicLibraryManager()->isLibraryLoaded(libname) expects ""fullpath"" as the input, but I'll update the document. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:366,deployability,version,version,366,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:157,integrability,translat,translates,157,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:366,integrability,version,version,366,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:157,interoperability,translat,translates,157,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:366,modifiability,version,version,366,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:420,reliability,doe,doesn,420,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:587,reliability,doe,does,587,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:106,safety,input,input,106,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:383,safety,compl,completely,383,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:383,security,compl,completely,383,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:337,testability,understand,understand,337,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:106,usability,input,input,106,"> The reason why we're not calling FindDynamicLibrary is that we're already expecting library name as the input of IsLibraryLoaded. No, `FindDynamicLibrary` translates ""libHtml"" into ""/foo/bar/lib/libHtml.so"". I.e. even if you know that you look for a library, that search needs to be done by `FindDynamicLibrary`. Or if not I'd like to understand whether the cling version of it is completely equivalent (e.g. I bet it doesn't take `TSystem:: AddDynamicPath()` https://root.cern.ch/doc/master/classTSystem.html#ab24a240660619b366d5feae6bc33479b into account like `FindDynamicLibrary()` does. Summary: I'm convinced that we still need the call to `FindDynamicLibrary`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:51,availability,state,state,51,"@phsft-bot build! @Axel-Naumann, IIUC, the current state of the PR addresses your comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:11,deployability,build,build,11,"@phsft-bot build! @Axel-Naumann, IIUC, the current state of the PR addresses your comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:43,energy efficiency,current,current,43,"@phsft-bot build! @Axel-Naumann, IIUC, the current state of the PR addresses your comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:51,integrability,state,state,51,"@phsft-bot build! @Axel-Naumann, IIUC, the current state of the PR addresses your comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:0,deployability,Build,Build,0,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:20,deployability,fail,failed,20,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:30,deployability,updat,update,30,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:20,reliability,fail,failed,20,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:30,safety,updat,update,30,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:30,security,updat,update,30,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2128:44,usability,statu,status,44,Build succeeded but failed to update the pr status.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2128
https://github.com/root-project/root/pull/2129:76,usability,close,closed,76,"Hi, making a sweep of old PRs -- no activity for the last year, can this be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2129
https://github.com/root-project/root/pull/2130:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2130
https://github.com/root-project/root/pull/2130:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2130
https://github.com/root-project/root/pull/2131:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2131
https://github.com/root-project/root/pull/2131:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2131
https://github.com/root-project/root/pull/2131:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2131
https://github.com/root-project/root/pull/2131:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2131
https://github.com/root-project/root/pull/2132:0,availability,Ping,Ping,0,Ping @lmoneta ? :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2132
https://github.com/root-project/root/pull/2133:0,availability,Ping,Ping,0,Ping @lmoneta ? :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2133
https://github.com/root-project/root/pull/2133:11,deployability,build,build,11,@phsft-bot build !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2133
https://github.com/root-project/root/pull/2133:54,deployability,build,build,54,"I will commit this fix in the master and 6.14 (if the build is successful), but I will re-implement a proper . printMatrix function later on for the master instead of using the macro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2133
https://github.com/root-project/root/pull/2134:10,interoperability,share,share,10,Could you share your benchmark to put them in rootbench?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2134
https://github.com/root-project/root/pull/2135:176,deployability,depend,dependent,176,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:249,deployability,version,version,249,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:273,deployability,build,build,273,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:310,deployability,version,version,310,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:479,deployability,build,builds,479,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:578,deployability,log,log,578,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:644,deployability,log,log,644,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:14,energy efficiency,Load,Load,14,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:131,energy efficiency,Load,Load,131,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:167,energy efficiency,Load,Load,167,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:885,energy efficiency,Load,Load,885,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:176,integrability,depend,dependent,176,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:249,integrability,version,version,249,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:310,integrability,version,version,310,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:176,modifiability,depend,dependent,176,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:249,modifiability,version,version,249,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:310,modifiability,version,version,310,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:14,performance,Load,Load,14,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:131,performance,Load,Load,131,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:167,performance,Load,Load,167,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:885,performance,Load,Load,885,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:136,reliability,doe,does,136,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:686,reliability,doe,does,686,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:86,safety,compl,completely,86,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:176,safety,depend,dependent,176,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:451,safety,avoid,avoid,451,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:578,safety,log,log,578,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:644,safety,log,log,644,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:86,security,compl,completely,86,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:578,security,log,log,578,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:644,security,log,log,644,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:176,testability,depend,dependent,176,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:578,testability,log,log,578,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:644,testability,log,log,644,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:368,usability,user,user,368,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files). (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:114,modifiability,variab,variables,114,"We don't need (a) as we're no longer even generating rootmap files. If it dlopens a library and initialize global variables and couldn't find a definition, we should get callback to here where we can handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:81,deployability,depend,depending,81,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,energy efficiency,Load,Load,21,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:73,energy efficiency,load,loading,73,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:81,integrability,depend,depending,81,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:81,modifiability,depend,depending,81,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,performance,Load,Load,21,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:73,performance,load,loading,73,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:81,safety,depend,depending,81,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:81,testability,depend,depending,81,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:124,deployability,modul,module,124,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:158,deployability,upgrad,upgrade,158,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:124,modifiability,modul,module,124,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:158,modifiability,upgrad,upgrade,158,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:124,safety,modul,module,124,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:206,testability,plan,plan,206,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:91,usability,clear,clear,91,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:153,usability,user,user,153,> We don't need (a) as we're no longer even generating rootmap files. Humm ... Was it made clear/decided that moving to use module **requires** that the user upgrade to using explicit-linking or is there a plan to migrate this feature of the rootmap file to something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,deployability,modul,modules,21,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:265,deployability,BUILD,BUILDTYPE,265,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,modifiability,modul,modules,21,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,safety,modul,modules,21,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:98,safety,compl,completely,98,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:307,safety,test,testReport,307,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:69,security,ident,identifier,69,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:98,security,compl,completely,98,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:307,testability,test,testReport,307,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case? https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,deployability,depend,depending,83,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:207,deployability,contain,contain,207,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:23,energy efficiency,Load,Load,23,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:75,energy efficiency,load,loading,75,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,integrability,depend,depending,83,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,modifiability,depend,depending,83,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:23,performance,Load,Load,23,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:75,performance,load,loading,75,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:198,reliability,doe,does,198,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,safety,depend,depending,83,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,testability,depend,depending,83,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:23,deployability,modul,modules,23,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:150,deployability,contain,contains,150,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:171,deployability,depend,dependency,171,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:171,integrability,depend,dependency,171,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:23,modifiability,modul,modules,23,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:171,modifiability,depend,dependency,171,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:137,reliability,Doe,Does,137,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:23,safety,modul,modules,23,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:103,safety,compl,completely,103,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:171,safety,depend,dependency,171,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:71,security,ident,identifier,71,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:103,security,compl,completely,103,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:171,testability,depend,dependency,171,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which. > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:16,deployability,contain,contain,16,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:24,deployability,depend,dependency,24,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:774,deployability,depend,dependency,774,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:24,integrability,depend,dependency,24,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:774,integrability,depend,dependency,774,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:24,modifiability,depend,dependency,24,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:774,modifiability,depend,dependency,774,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:11,reliability,doe,does,11,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:24,safety,depend,dependency,24,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:774,safety,depend,dependency,774,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:467,security,HASH,HASH,467,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:24,testability,depend,dependency,24,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:774,testability,depend,dependency,774,ELF header does contain dependency information. $ objdump -x lib/libMathMore.so | less. ```. Dynamic Section:. PLTGOT 0x0000000000092fe8. PLTRELSZ 0x0000000000005a48. JMPREL 0x000000000002d4a8. PLTREL 0x0000000000000007. RELA 0x0000000000024e98. RELASZ 0x0000000000008610. RELAENT 0x0000000000000018. RELACOUNT 0x000000000000003c. SYMTAB 0x00000000000001c8. SYMENT 0x0000000000000018. STRTAB 0x000000000000ac50. STRSZ 0x0000000000013c98. GNU_HASH 0x000000000001e8e8. HASH 0x00000000000212d0. NEEDED libgsl.so.23. NEEDED libgslcblas.so.0. NEEDED libm.so.6. NEEDED libMathCore.so. NEEDED libImt.so. NEEDED libThread.so. NEEDED libCore.so. NEEDED libstdc++.so.6. NEEDED libgcc_s.so.1. NEEDED libpthread.so.0. NEEDED libc.so.6. SONAME libMathMore.so. ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,deployability,contain,contain,18,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:26,deployability,depend,dependency,26,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:26,integrability,depend,dependency,26,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:26,modifiability,depend,dependency,26,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:13,reliability,doe,does,13,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:26,safety,depend,dependency,26,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:26,testability,depend,dependency,26,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:100,usability,user,user,100,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:119,usability,command,command,119,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,deployability,depend,depends,18,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:140,deployability,depend,dependency,140,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:47,energy efficiency,load,load,47,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:62,energy efficiency,load,loading,62,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,integrability,depend,depends,18,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:140,integrability,depend,dependency,140,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,modifiability,depend,depends,18,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:140,modifiability,depend,dependency,140,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:47,performance,load,load,47,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:62,performance,load,loading,62,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,safety,depend,depends,18,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:140,safety,depend,dependency,140,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:18,testability,depend,depends,18,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:140,testability,depend,dependency,140,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:20,deployability,depend,depends,20,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:142,deployability,depend,dependency,142,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:49,energy efficiency,load,load,49,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:64,energy efficiency,load,loading,64,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:20,integrability,depend,depends,20,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:142,integrability,depend,dependency,142,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:20,modifiability,depend,depends,20,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:142,modifiability,depend,dependency,142,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:49,performance,load,load,49,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:64,performance,load,loading,64,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:20,safety,depend,depends,20,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:142,safety,depend,dependency,142,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:20,testability,depend,depends,20,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:142,testability,depend,dependency,142,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:212,testability,hook,hook,212,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency? The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,deployability,modul,module-release,21,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:119,deployability,modul,module-release,119,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:187,deployability,modul,module-release,187,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:324,deployability,modul,module-release,324,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:462,deployability,depend,depending,462,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:557,deployability,modul,module-release,557,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:650,deployability,modul,module-release,650,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:741,deployability,modul,module-release,741,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:795,deployability,depend,dependency,795,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:423,energy efficiency,load,loading,423,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:462,integrability,depend,depending,462,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:795,integrability,depend,dependency,795,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,modifiability,modul,module-release,21,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:119,modifiability,modul,module-release,119,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:187,modifiability,modul,module-release,187,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:324,modifiability,modul,module-release,324,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:462,modifiability,depend,depending,462,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:557,modifiability,modul,module-release,557,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:650,modifiability,modul,module-release,650,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:741,modifiability,modul,module-release,741,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:795,modifiability,depend,dependency,795,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:423,performance,load,loading,423,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:21,safety,modul,module-release,21,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:119,safety,modul,module-release,119,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:187,safety,modul,module-release,187,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:324,safety,modul,module-release,324,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:462,safety,depend,depending,462,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:557,safety,modul,module-release,557,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:650,safety,modul,module-release,650,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:741,safety,modul,module-release,741,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:795,safety,depend,dependency,795,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:462,testability,depend,depending,462,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:795,testability,depend,dependency,795,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:75,usability,Stop,Stopped,75,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:280,usability,Stop,Stopped,280,"```. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] . [1]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l. 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b . root [0] gMinuit. (TMinuit *) nullptr. root [1] . [2]+ Stopped bin/root.exe -l -b. [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l. 33. ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. ```. root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so. root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so. root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so. ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:137,deployability,BUILD,BUILDTYPE,137,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:275,deployability,stack,stack,275,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:817,deployability,modul,module,817,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1463,deployability,stack,stack,1463,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1769,deployability,modul,modules,1769,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:719,energy efficiency,load,loadLibrary,719,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:811,energy efficiency,Load,Load,811,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:615,interoperability,platform,platform,615,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:636,interoperability,Platform,PlatformPosix,636,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:817,modifiability,modul,module,817,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1769,modifiability,modul,modules,1769,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:719,performance,load,loadLibrary,719,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:811,performance,Load,Load,811,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1298,reliability,doe,does,1298,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1368,reliability,doe,does,1368,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:179,safety,test,testReport,179,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:817,safety,modul,module,817,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1769,safety,modul,modules,1769,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:179,testability,test,testReport,179,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:281,testability,trace,trace,281,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1550,testability,understand,understand,1550,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1636,testability,understand,understand,1636,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:319,usability,clarit,clarity,319,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1280,usability,behavi,behavior,1280,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1406,usability,behavi,behavior,1406,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:1538,usability,help,help,1538,"> > Why is this seen only in the cxxmodule case? > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity). ```. #10 0x00007f892fc17090 in ?? (). #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275. ... #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588. ... #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112. ... #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207. ... . #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935. #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935. #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953. ... #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002. ... #103 in main . ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,deployability,depend,depending,83,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:154,deployability,depend,dependent,154,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:489,deployability,depend,dependency,489,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:44,energy efficiency,load,loading,44,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:221,energy efficiency,load,loading,221,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,integrability,depend,depending,83,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:154,integrability,depend,dependent,154,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:489,integrability,depend,dependency,489,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,modifiability,depend,depending,83,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:154,modifiability,depend,dependent,154,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:489,modifiability,depend,dependency,489,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:44,performance,load,loading,44,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:221,performance,load,loading,221,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:204,reliability,doe,does,204,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,safety,depend,depending,83,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:154,safety,depend,dependent,154,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:489,safety,depend,dependency,489,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:83,testability,depend,depending,83,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:154,testability,depend,dependent,154,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:275,testability,emul,emulate,275,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:489,testability,depend,dependency,489,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:48,safety,compl,complex,48,"Ok, library issue in runtime nightly seems more complex. Let's just land fix for Fedora as this is breaking master. I'll open another PR for library issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:48,security,compl,complex,48,"Ok, library issue in runtime nightly seems more complex. Let's just land fix for Fedora as this is breaking master. I'll open another PR for library issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:110,integrability,inject,injecting,110,"> rebuild ROOT without explicit linking. And it looks like this path might be broken in itself (it seems that injecting '-Wl,--no-undefined' is done unconditionally ... and this requires the use of explicit linking)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:110,security,inject,injecting,110,"> rebuild ROOT without explicit linking. And it looks like this path might be broken in itself (it seems that injecting '-Wl,--no-undefined' is done unconditionally ... and this requires the use of explicit linking)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:50,safety,compl,complex,50,"> Ok, library issue in runtime nightly seems more complex. Let's just land fix for Fedora as this is breaking master. I'll open another PR for library issue. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:50,security,compl,complex,50,"> Ok, library issue in runtime nightly seems more complex. Let's just land fix for Fedora as this is breaking master. I'll open another PR for library issue. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:0,availability,Failur,Failures,0,Failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:0,deployability,Fail,Failures,0,Failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:0,performance,Failur,Failures,0,Failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2135:0,reliability,Fail,Failures,0,Failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2135
https://github.com/root-project/root/pull/2136:51,energy efficiency,green,green,51,@lmoneta nightlies with this changes included were green. I will merge this in v6.14 if you are ok with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2136
https://github.com/root-project/root/pull/2137:34,performance,memor,memory,34,Thanks! I am wondering what's the memory improvement.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:34,usability,memor,memory,34,Thanks! I am wondering what's the memory improvement.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:3,reliability,doe,doesn,3,"It doesn't make difference on my laptop because I just have around sixty libraries, but it'll make more difference on servers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:61,availability,failur,failures,61,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:14,deployability,modul,modules,14,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:61,deployability,fail,failures,61,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:14,modifiability,modul,modules,14,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:61,performance,failur,failures,61,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:61,reliability,fail,failures,61,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:14,safety,modul,modules,14,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:22,safety,test,test,22,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:56,safety,test,test,56,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:22,testability,test,test,22,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:56,testability,test,test,56,slc6/gcc62 is modules test and in nightlies we have 341 test failures :innocent: So I think this is ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2137:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2137
https://github.com/root-project/root/pull/2142:11,deployability,build,build,11,"@phsft-bot build only on fedora28/native, slc6/gcc62, centos7/gcc7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2142
https://github.com/root-project/root/pull/2143:13,integrability,coupl,couple,13,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:13,modifiability,coupl,couple,13,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:239,modifiability,refact,refactoring,239,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:239,performance,refactor,refactoring,239,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:222,safety,test,tests,222,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:13,testability,coupl,couple,13,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:222,testability,test,tests,222,"I will add a couple of commits with dataset information moved to `TTreeProcessorMT` from `TTreeView` and only one call to `MakeClusters` per file instead of two in the ""fast path"". @etejedor do you think we should add new tests after this refactoring?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:22,safety,test,test,22,"@bluehood perhaps one test with multiple input files, that exercises the hierarchical task spawning?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:41,safety,input,input,41,"@bluehood perhaps one test with multiple input files, that exercises the hierarchical task spawning?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:22,testability,test,test,22,"@bluehood perhaps one test with multiple input files, that exercises the hierarchical task spawning?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:41,usability,input,input,41,"@bluehood perhaps one test with multiple input files, that exercises the hierarchical task spawning?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:69,modifiability,refact,refactoring,69,"@etejedor I will add a test with multiple files. I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:69,performance,refactor,refactoring,69,"@etejedor I will add a test with multiple files. I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:23,safety,test,test,23,"@etejedor I will add a test with multiple files. I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:143,safety,avoid,avoid,143,"@etejedor I will add a test with multiple files. I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2143:23,testability,test,test,23,"@etejedor I will add a test with multiple files. I propose to do the refactoring that moves the `TTreeView` members into `TTreeProcessorMT` to avoid duplication in another PR, as the changes would be quite big (working on it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2143
https://github.com/root-project/root/pull/2146:4,availability,error,errors,4,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2146
https://github.com/root-project/root/pull/2146:31,deployability,infrastructur,infrastructure,31,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2146
https://github.com/root-project/root/pull/2146:4,performance,error,errors,4,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2146
https://github.com/root-project/root/pull/2146:4,safety,error,errors,4,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2146
https://github.com/root-project/root/pull/2146:4,usability,error,errors,4,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2146
https://github.com/root-project/root/pull/2147:147,availability,mask,mask,147,"@amadio The end goal is to allow index manipulations with TVec. I don't know if there are other reasons, but one is to distinguish indexing with a mask `v[{true, false}]` from indexing with a list of indeces (currently unsupported, but possibly very useful) `v[{1,2}]`. The second could also be done with something like `Take(v, {1,2})`, now that I think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:209,energy efficiency,current,currently,209,"@amadio The end goal is to allow index manipulations with TVec. I don't know if there are other reasons, but one is to distinguish indexing with a mask `v[{true, false}]` from indexing with a list of indeces (currently unsupported, but possibly very useful) `v[{1,2}]`. The second could also be done with something like `Take(v, {1,2})`, now that I think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:5,reliability,doe,does,5,"What does `v[{true, false}]` mean? I'm still not convinced that this is necessary. Also, why do you need `v[{1,2}]` instead of `{v[1], v[2]}`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:170,availability,down,down,170,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:387,availability,mask,masks,387,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:405,availability,mask,masks,405,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:223,testability,understand,understanding,223,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:86,usability,User,Users,86,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:474,usability,clear,clear,474,"@amadio `v[{true,false}]` is returning only the first element of a two-elements RVec. Users are not expected to write that, but it's what something like `v[v > 0]` boils down to. I think this syntax is nice to have. Now my understanding is that _if_ we also want to allow `v[idxs]` where `idxs` is a list of indeces which select part of `v`, we need a way to distinguish between boolean masks and integer masks, hence `RStrongBool`. But the use-case for `v[idxs]` is not as clear to me as I thought. @dpiparo what is an example of this? (and what do you think about `Take(v, {1,2})`?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:56,availability,mask,masked,56,"Note that `v[v >0]` is meant to return a reference to a masked vector so that one can do `v[v > 0] = 2;`, so maybe that's what we need to fix. What you mention above looks like targeted at creating copies of parts of a vector, which may lead to surprising behavior from user's point of view.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:256,usability,behavi,behavior,256,"Note that `v[v >0]` is meant to return a reference to a masked vector so that one can do `v[v > 0] = 2;`, so maybe that's what we need to fix. What you mention above looks like targeted at creating copies of parts of a vector, which may lead to surprising behavior from user's point of view.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:270,usability,user,user,270,"Note that `v[v >0]` is meant to return a reference to a masked vector so that one can do `v[v > 0] = 2;`, so maybe that's what we need to fix. What you mention above looks like targeted at creating copies of parts of a vector, which may lead to surprising behavior from user's point of view.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:22,energy efficiency,current,current,22,"@amadio note that the current implementation of `v[v > 2]` returns a new vector, not a vector of references (not straightforward to have a vector of references to non-contiguous storage in c++) but it's not a bug, it was designed like that. I agree that this makes `v[v>2] = 2` very misleading (compiles but assigns to a temporary, I guess) -- but that's a different topic..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:367,integrability,topic,topic,367,"@amadio note that the current implementation of `v[v > 2]` returns a new vector, not a vector of references (not straightforward to have a vector of references to non-contiguous storage in c++) but it's not a bug, it was designed like that. I agree that this makes `v[v>2] = 2` very misleading (compiles but assigns to a temporary, I guess) -- but that's a different topic..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2147:162,performance,time,time,162,"> I agree that this makes v[v>2] = 2 very misleading (compiles but assigns to a temporary, I guess). It would probably be best if this is made illegal at compile time ... By having either the return value of v[..] to be const.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2147
https://github.com/root-project/root/pull/2148:69,availability,error,error,69,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:97,availability,error,error,97,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:47,deployability,fail,fails,47,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:69,performance,error,error,69,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:97,performance,error,error,97,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:47,reliability,fail,fails,47,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:77,reliability,Doe,Does,77,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:69,safety,error,error,69,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:97,safety,error,error,97,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:69,usability,error,error,69,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:97,usability,error,error,97,"> which gets called when DynamicLibraryManager fails with ""undefined error"". Does that catch the error issued by dlopen itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:22,availability,error,error,22,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:77,availability,error,error,77,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:83,integrability,messag,messages,83,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:83,interoperability,messag,messages,83,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:22,performance,error,error,22,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:77,performance,error,error,77,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:2,reliability,Doe,Does,2,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:22,safety,error,error,22,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:77,safety,error,error,77,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:22,usability,error,error,22,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:77,usability,error,error,77,> Does that catch the error issued by dlopen itself? Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:21,deployability,build,build,21,Probably a cancelled build ongoing that interacted with latest push. Please wait a bit and try again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,usability,cancel,cancelled,11,Probably a cancelled build ongoing that interacted with latest push. Please wait a bit and try again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:40,usability,interact,interacted,40,Probably a cancelled build ongoing that interacted with latest push. Please wait a bit and try again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:41,deployability,build,build,41,I think this really isn't triggering the build..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:73,deployability,build,build,73,"There are three Jenkins jobs for PRs: root-pullrequests-{trigger,handler,build}. If the first has no time to start the others before being cancelled by other action, things get a bit messed up. Try pushing again, that may trigger the build properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:234,deployability,build,build,234,"There are three Jenkins jobs for PRs: root-pullrequests-{trigger,handler,build}. If the first has no time to start the others before being cancelled by other action, things get a bit messed up. Try pushing again, that may trigger the build properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:101,performance,time,time,101,"There are three Jenkins jobs for PRs: root-pullrequests-{trigger,handler,build}. If the first has no time to start the others before being cancelled by other action, things get a bit messed up. Try pushing again, that may trigger the build properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:139,usability,cancel,cancelled,139,"There are three Jenkins jobs for PRs: root-pullrequests-{trigger,handler,build}. If the first has no time to start the others before being cancelled by other action, things get a bit messed up. Try pushing again, that may trigger the build properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:48,deployability,build,building,48,"I pushed again but Jenkins says success without building: https://epsft-jenkins.cern.ch/job/root-pullrequests-trigger/4640/console. I still find this strange, last week I was able to trigger the build by comment on PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:195,deployability,build,build,195,"I pushed again but Jenkins says success without building: https://epsft-jenkins.cern.ch/job/root-pullrequests-trigger/4640/console. I still find this strange, last week I was able to trigger the build by comment on PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:134,usability,close,close,134,"Hi Yuka, the trigger always reports success. It's turned into waiting when the other job is started. I think that it's easier to just close this PR and start a new one with the same changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:17,deployability,build,build,17,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:146,deployability,updat,update,146,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:170,reliability,doe,doesn,170,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:146,safety,updat,update,146,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:146,security,updat,update,146,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:56,interoperability,specif,specific,56,"Ah, I think that there is a problem when one asks for a specific platform... I will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:65,interoperability,platform,platform,65,"Ah, I think that there is a problem when one asks for a specific platform... I will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:8,deployability,build,build,8,Now the build has been triggered.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:124,availability,failur,failure,124,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:0,deployability,Build,Build,0,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:89,deployability,build,build,89,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:95,deployability,updat,updated,95,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:124,deployability,fail,failure,124,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:124,performance,failur,failure,124,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:124,reliability,fail,failure,124,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:95,safety,updat,updated,95,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:95,security,updat,updated,95,Build is here: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4660 Previous build updated the link to show old failure as result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
https://github.com/root-project/root/pull/2148:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on -Droofit=Off.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2148
