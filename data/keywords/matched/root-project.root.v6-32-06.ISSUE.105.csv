id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/15138:723,usability,User,User,723,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1304,usability,ui,ui,1304,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/issues/15139:307,availability,Error,Error,307,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:394,availability,Error,Error,394,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:554,availability,Error,Error,554,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:641,availability,Error,Error,641,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1123,availability,Operat,Operating,1123,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:842,deployability,fail,failed,842,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:850,deployability,Build,Build,850,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1042,deployability,version,version,1042,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1079,deployability,Instal,Installation,1079,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1100,deployability,Build,Build,1100,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:410,integrability,batch,batchcompute,410,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:657,integrability,batch,batchcompute,657,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1042,integrability,version,version,1042,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1042,modifiability,version,version,1042,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:307,performance,Error,Error,307,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:394,performance,Error,Error,394,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:410,performance,batch,batchcompute,410,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:554,performance,Error,Error,554,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:641,performance,Error,Error,641,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:657,performance,batch,batchcompute,657,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:842,reliability,fail,failed,842,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:307,safety,Error,Error,307,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:394,safety,Error,Error,394,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:554,safety,Error,Error,554,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:641,safety,Error,Error,641,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1163,testability,context,context,1163,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:307,usability,Error,Error,307,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:394,usability,Error,Error,394,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:554,usability,Error,Error,554,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:641,usability,Error,Error,641,"cmake option -Dall=YES breaks the cmake; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. -- Generating done (0.8s). CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/pull/15140:106,performance,time,time,106,Work is progress PR for style Auto; Do not merge.... This PR is about the style Auto. Nothing new for the time being. The style is equal to Mordern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15140
https://github.com/root-project/root/pull/15140:8,usability,progress,progress,8,Work is progress PR for style Auto; Do not merge.... This PR is about the style Auto. Nothing new for the time being. The style is equal to Mordern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15140
https://github.com/root-project/root/pull/15141:1559,availability,Error,Error,1559,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:39,deployability,log,log,39,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:99,deployability,log,log,99,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:296,deployability,log,logic,296,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:561,deployability,updat,updated,561,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:732,deployability,log,log,732,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:746,deployability,patch,patched,746,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:759,deployability,version,version,759,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:868,deployability,version,version,868,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1069,deployability,Fail,Fail,1069,"ject/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1450,deployability,Fail,Fail,1450,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:2315,deployability,Fail,Failed,2315,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:719,integrability,messag,message,719,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:759,integrability,version,version,759,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:868,integrability,version,version,868,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:426,interoperability,standard,standard,426,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:719,interoperability,messag,message,719,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:759,modifiability,version,version,759,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:868,modifiability,version,version,868,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1559,performance,Error,Error,1559,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1069,reliability,Fail,Fail,1069,"ject/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1450,reliability,Fail,Fail,1450,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:2315,reliability,Fail,Failed,2315,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:39,safety,log,log,39,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:99,safety,log,log,99,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:296,safety,log,logic,296,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:531,safety,test,tested,531,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:561,safety,updat,updated,561,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:603,safety,test,test,603,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:671,safety,test,test,671,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:732,safety,log,log,732,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:746,safety,patch,patched,746,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:828,safety,test,test,828,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:942,safety,test,test,942,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1014,safety,test,test,1014,"ir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1261,safety,test,test,1261," exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1292,safety,test,test,1292,"e logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1559,safety,Error,Error,1559,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:39,security,log,log,39,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:99,security,log,log,99,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:283,security,modif,modifies,283,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:296,security,log,logic,296,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:561,security,updat,updated,561,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:732,security,log,log,732,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:746,security,patch,patched,746,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:39,testability,log,log,39,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:99,testability,log,log,99,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:296,testability,log,logic,296,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:531,testability,test,tested,531,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:603,testability,test,test,603,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:671,testability,test,test,671,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:732,testability,log,log,732,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:828,testability,test,test,828,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:942,testability,test,test,942,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1014,testability,test,test,1014,"ir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1261,testability,test,test,1261," exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1292,testability,test,test,1292,"e logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:135,usability,behavi,behavior,135,"[TFile] Create dir if necessary; . [pr.log](https://github.com/root-project/root/files/14873477/pr.log). This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1559,usability,Error,Error,1559,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1800,usability,Close,Close,1800,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1900,usability,Close,Close,1900,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1982,usability,Close,Close,1982,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:2064,usability,Close,Close,2064,"f `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). ## Quick test. I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:. ```. Attempt to (re)createa/b/c/test.root. Ok. ```. while with the ROOT version 6.28 the output looks like this:. ```. Attempt to (re)createa/b/c/test.root. SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory. Fail. ```. The program:. ```c++. #include ""TFile.h"". #include <filesystem>. #include <cstdlib>. #include <iostream>. namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";. char F[] = ""a/b/c/test.root"";. char H[] = ""a/b/d/atest.root"";. void ok(char *fname). {. if (fs::exists(fs::path(fname))). std::cout << ""Ok."" << std::endl;. else. std::cout << ""Fail."" << std::endl;. }. int main(). {. char *tmpnm = mkdtemp(tmpname);. if (tmpnm == NULL) {. std::cout << ""Error while creating tmp dir"" << std::endl;. return -1;. }. const auto tmp = fs::path(tmpnm);. const auto prev = fs::current_path();. fs::current_path(tmp);. std::cout << ""Attempt to (re)create"" << E << std::endl;. TFile e(E, ""recreate""); e.Close(); ok(E);. std::cout << ""Attempt to (re)create"" << F << std::endl;. TFile f(F, ""recreate""); f.Close(); ok(F);. std::cout << ""Attempt to open"" << F << std::endl;. TFile g(F); g.Close(); ok(F);. std::cout << ""Attempt to open"" << H << std::endl;. TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;. std::system(""tree"");. fs::current_path(prev);. fs::remove_all(tmp);. if (not fs::exists(tmp)). std::cout << ""Temporary directory deleted"" << std::endl;. else. std::cerr << ""Failed to delete temporary directory"" << std::endl;. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/issues/15144:451,availability,Operat,Operating,451,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:59,deployability,stack,stack,59,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:258,deployability,log,log,258,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:271,deployability,stack,stack,271,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:391,deployability,version,version,391,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:413,deployability,Instal,Installation,413,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:391,integrability,version,version,391,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:391,modifiability,version,version,391,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:35,performance,time,time-out,35,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:228,performance,time,timeout,228,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:306,performance,time,time,306,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:315,performance,time,timeout,315,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:8,safety,test,test,8,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:200,safety,test,tests,200,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:228,safety,timeout,timeout,228,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:258,safety,log,log,258,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:315,safety,timeout,timeout,315,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:258,security,log,log,258,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:8,testability,test,test,8,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:65,testability,trace,trace,65,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:200,testability,test,tests,200,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:258,testability,log,log,258,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:277,testability,trace,trace,277,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:489,testability,context,context,489,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:22,usability,stop,stopped,22,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:166,usability,help,helpful,166,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:215,usability,stop,stopped,215,Ideally test that are stopped by a time-out would record a stack trace of where they were.; ### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/pull/15145:14,deployability,depend,dependency,14,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:14,integrability,depend,dependency,14,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:14,modifiability,depend,dependency,14,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:14,safety,depend,dependency,14,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:14,testability,depend,dependency,14,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:49,usability,Close,Closes,49,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15145:122,usability,support,supported,122,"[CMake] CMake dependency on Python: use targets; Closes #6753. We can finally do this now easily, because Python 2 is not supported anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15145
https://github.com/root-project/root/pull/15146:33,modifiability,paramet,parameters,33,[BP] [gui] Do not reset FitPanel parameters when ADD on top of prefitted function; BP of https://github.com/root-project/root/pull/15095,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15146
https://github.com/root-project/root/pull/15147:51,integrability,filter,filters,51,[BP] [io] do not use single-file-merge shortcut if filters are specified; BP of https://github.com/root-project/root/pull/15071,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15147
https://github.com/root-project/root/pull/15147:63,interoperability,specif,specified,63,[BP] [io] do not use single-file-merge shortcut if filters are specified; BP of https://github.com/root-project/root/pull/15071,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15147
https://github.com/root-project/root/pull/15147:39,usability,shortcut,shortcut,39,[BP] [io] do not use single-file-merge shortcut if filters are specified; BP of https://github.com/root-project/root/pull/15071,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15147
https://github.com/root-project/root/pull/15148:97,deployability,releas,release,97,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:105,deployability,version,version,105,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:251,deployability,releas,release,251,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:273,deployability,releas,release,273,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:1,energy efficiency,core,core,1,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:57,energy efficiency,current,currently,57,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:105,integrability,version,version,105,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:105,modifiability,version,version,105,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:185,safety,avoid,avoid,185,"[core] Silence 6.34 deprecation warnings for now; We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/issues/15150:2327,availability,Operat,Operating,2327,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2024,deployability,version,version,2024,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2047,deployability,version,version,2047,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2061,deployability,Version,Version,2061,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2183,deployability,Instal,Installation,2183,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2204,deployability,build,build,2204,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:359,energy efficiency,Watt,Wattributes,359,"Spurious warnings from deprecation macro in RooFit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Just including RooDataSet leads to spurious warnings. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:500:73: warning: 'REMOVE_THIS_NOW' attribute directive ignored [-Wattributes]. 500 | #define _R_DEPRECATED_REMOVE_NOW(REASON) __attribute__((REMOVE_THIS_NOW)). | ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2024,integrability,version,version,2024,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2047,integrability,version,version,2047,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2061,integrability,Version,Version,2061,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2024,modifiability,version,version,2024,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2047,modifiability,version,version,2047,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2061,modifiability,Version,Version,2061,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2415,modifiability,pac,packages,2415,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:2394,testability,context,context,2394,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'. 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON). | ^~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'. 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3. | ^~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'. 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). | ^~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'. 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON). | ^~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'. 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");. | ^~~~~~~~~~~~~. ```. ### Reproducer. ```term. cat > main.cpp << EOF. #include <RooDataSet.h>. int main() {. return 0;. }. EOF. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh. g++ -I $ROOTSYS/include main.cpp -o a.out. ```. ### ROOT version. ```. $ root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 04 2024, 22:54:25. From heads/master@v6-31-01-1587-gaf0e1abffd. ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/pull/15151:115,deployability,patch,patches,115,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15151:187,interoperability,convers,conversion,187,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15151:115,safety,patch,patches,115,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15151:115,security,patch,patches,115,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15151:35,usability,Close,Closes,35,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15151:80,usability,help,helping,80,[PyROOT] Sync with upstream cppyy; Closes #15104. Thank you very much @wlav for helping out here! Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:. 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed. 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625. 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15152:0,availability,Cluster,Cluster-based,0,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:0,deployability,Cluster,Cluster-based,0,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:72,deployability,log,logic,72,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:14,energy efficiency,schedul,scheduling,14,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:50,interoperability,distribut,distributed,50,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:14,performance,schedul,scheduling,14,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:72,safety,log,logic,72,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:72,security,log,logic,72,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/pull/15152:72,testability,log,logic,72,"Cluster-based scheduling of RNTuple processing in distributed mode; The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/issues/15153:407,availability,Operat,Operating,407,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/issues/15153:340,deployability,version,version,340,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/issues/15153:376,deployability,Instal,Installation,376,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/issues/15153:340,integrability,version,version,340,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/issues/15153:340,modifiability,version,version,340,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/issues/15153:447,testability,context,context,447,"cppyy.gbl.std.string representation changed in ROOT master; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python. import cppyy. s = cppyy.gbl.std.string(""XXXX""). s. b'XXXX'. str(s). 'XXXX'. repr(s). ""b'XXXX'"". ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/pull/15154:108,availability,cluster,cluster,108,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15154:108,deployability,cluster,cluster,108,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15154:71,performance,memor,memory,71,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15154:132,performance,memor,memory,132,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15154:71,usability,memor,memory,71,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15154:132,usability,memor,memory,132,"[ntuple] Use CommitSealedPagesV in RNTupleMerger; This uses a bit more memory because all sealed pages of a cluster must be kept in memory, but is up to a factor 2x faster. FYI @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15154
https://github.com/root-project/root/pull/15155:373,availability,Error,Error,373,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:80,deployability,build,build,80,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:184,deployability,build,building,184,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:389,integrability,batch,batchcompute,389,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:373,performance,Error,Error,373,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:389,performance,batch,batchcompute,389,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:373,safety,Error,Error,373,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/pull/15155:373,usability,Error,Error,373,"[CMake] Fix ordering problem when checking and setting `cuda` flag; In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:. ```. CMake Error in roofit/batchcompute/CMakeLists.txt:. Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker. language cannot be determined. ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/issues/15156:664,availability,Operat,Operator,664,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1765,availability,Error,Error,1765,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1850,availability,Error,Error,1850,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1875,availability,Error,Error,1875,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2350,availability,Operat,Operating,2350,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:156,deployability,fail,fail,156,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,deployability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:222,deployability,stack,stack,222,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:427,deployability,build,build,427,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:616,deployability,stack,stack,616,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:876,deployability,build,build,876,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1020,deployability,build,build,1020,"imental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1147,deployability,build,build,1147,"cally fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1245,deployability,build,build,1245,"y readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1369,deployability,build,build,1369,"TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1629,deployability,build,build,1629,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2237,deployability,version,version,2237,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2284,deployability,version,versions,2284,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2311,deployability,Instal,Installation,2311,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1483,energy efficiency,alloc,allocator,1483,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1569,energy efficiency,alloc,allocator,1569,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,integrability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2237,integrability,version,version,2237,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2284,integrability,version,versions,2284,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,interoperability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,modifiability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2237,modifiability,version,version,2237,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2284,modifiability,version,versions,2284,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:364,performance,I/O,I/O,364,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1765,performance,Error,Error,1765,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1850,performance,Error,Error,1850,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1875,performance,Error,Error,1875,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1979,performance,I/O,I/O,1979,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:156,reliability,fail,fail,156,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,reliability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:137,safety,test,tests,137,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:281,safety,test,test,281,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1386,safety,test,test,1386,"al::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely othe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1646,safety,test,test,1646,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1765,safety,Error,Error,1765,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1801,safety,test,test,1801,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1850,safety,Error,Error,1850,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1875,safety,Error,Error,1875,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,security,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:137,testability,test,tests,137,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:171,testability,integr,integration,171,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:228,testability,trace,traces,228,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:281,testability,test,test,281,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:622,testability,trace,trace,622,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1386,testability,test,test,1386,"al::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely othe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1646,testability,test,test,1646,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1801,testability,test,test,1801,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2407,testability,context,context,2407,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:335,usability,clear,clear,335,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:522,usability,clear,clearly,522,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:702,usability,support,supported,702,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:853,usability,User,Users,853,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:997,usability,User,Users,997,"Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1124,usability,User,Users,1124,"ion. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1222,usability,User,Users,1222,"ck traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1346,usability,User,Users,1346,"emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances. In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1606,usability,User,Users,1606,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1765,usability,Error,Error,1765,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1850,usability,Error,Error,1850,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1875,usability,Error,Error,1875,"ild](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file. The stack trace is the following:. ``` . TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding . . *** Break *** segmentation violation. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info). [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info). [/usr/lib/dyld] start (no debug info). make[2]: *** [SofieCompileModels_ROOT] Error 139. make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2. make: *** [all] Error 2. ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/pull/15158:31,deployability,releas,release,31,[ci] Add GPL options; since no release is in sight to be able to have the same PR and nightly builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15158
https://github.com/root-project/root/pull/15158:94,deployability,build,builds,94,[ci] Add GPL options; since no release is in sight to be able to have the same PR and nightly builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15158
https://github.com/root-project/root/pull/15159:121,deployability,releas,release,121,"[CMake] Remove `builtin_libafterimage` option; The option was deprecated in ROOT 6.32 and should be removed for the next release, as anticipated by the deprecation warnings in 6.32. Follows up on https://github.com/root-project/root/pull/14395.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15159
https://github.com/root-project/root/pull/15160:1030,availability,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1213,availability,mainten,maintenance,1213,"e GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:20,deployability,build,build,20,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:48,deployability,build,building,48,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:117,deployability,build,build,117,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:168,deployability,build,build,168,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,deployability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:359,deployability,build,build,359,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:726,deployability,build,building,726,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1030,deployability,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1259,deployability,updat,update,1259,"o that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scrip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1298,deployability,version,version,1298,"cumentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1366,deployability,version,versions,1366,"ocumentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1579,deployability,automat,automatic,1579,"I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1764,deployability,build,building,1764,"ce repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1858,deployability,build,build,1858,"ess. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2150,deployability,updat,update,2150,"nged with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2242,deployability,Updat,Update,2242,"to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2268,deployability,build,build,2268,"oxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2397,deployability,version,version,2397,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:3241,deployability,Upgrad,Upgrade,3241,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1030,energy efficiency,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,integrability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:771,integrability,repositor,repository,771,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1298,integrability,version,version,1298,"cumentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1366,integrability,version,versions,1366,"ocumentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2397,integrability,version,version,2397,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2673,integrability,filter,filter,2673,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,interoperability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:771,interoperability,repositor,repository,771,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1123,interoperability,specif,specifies,1123,"ocumentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,modifiability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1298,modifiability,version,version,1298,"cumentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1366,modifiability,version,versions,1366,"ocumentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2397,modifiability,version,version,2397,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2808,modifiability,variab,variable,2808,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:3241,modifiability,Upgrad,Upgrade,3241,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,reliability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1030,reliability,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1213,reliability,mainten,maintenance,1213,"e GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1841,reliability,doe,does,1841,"es within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2324,reliability,doe,does,2324,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2846,reliability,doe,does,2846,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:239,safety,test,test,239,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:797,safety,permiss,permissions,797,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1030,safety,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1259,safety,updat,update,1259,"o that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scrip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1318,safety,prevent,prevents,1318,"dd new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1931,safety,safe,safe,1931,"thub.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1973,safety,input,input,1973,"x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being remov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2103,safety,test,tested,2103,"ation, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2150,safety,updat,update,2150,"nged with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2242,safety,Updat,Update,2242,"to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2620,safety,prevent,prevent,2620,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,security,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1259,security,updat,update,1259,"o that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scrip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1318,security,preven,prevents,1318,"dd new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2150,security,updat,update,2150,"nged with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2242,security,Updat,Update,2242,"to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2620,security,preven,prevent,2620,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:197,testability,integr,integrating,197,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:239,testability,test,test,239,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1030,testability,Monitor,Monitoring,1030,"ocumentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1579,testability,automat,automatic,1579,"I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2103,testability,test,tested,2103,"ation, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2824,testability,Understand,Understand,2824,"arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being removed. - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing. - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059. - [x] Check compress https://github.com/root-project/root/issues/10066. - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:34,usability,document,documentation-building,34,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:127,usability,document,documentation,127,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:300,usability,document,documentation,300,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:369,usability,document,documentation,369,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:428,usability,Statu,Status,428,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:591,usability,close,closed,591,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:739,usability,document,documentation,739,"[docu] Add new ROOT build option: documentation-building; # This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1594,usability,document,documentation,1594,"e goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090. - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Im",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1780,usability,document,documentation,1780,"read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1910,usability,document,documentation,1910,". See https://github.com/root-project/root/issues/8947. - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1973,usability,input,input,1973,"x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:. - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher. - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999. - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process. - [x] Make the doxygen documentation thread-safe. - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally. - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md. - [x] Update rootspi scripts to build docu in CI accordingly. - [ ] tutorial generation does not work yet as ""out of source"". To-do... - [x] require min doxygen version 1.9.4. - [ ] pre-check that output directory is empty ? - [ ] if GVIZ not found, disable dot. - [ ] Stamp file generation to only recompile when changes. - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source). - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc. - [x] set NUM_PROC_THREADS. - [x] listLibs pass ROOT_CMD as variable. - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so. - [x] check why there are stdout.dat and NumberOfImages not being remov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/issues/15161:1388,availability,Operat,Operating,1388,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:397,deployability,version,version,397,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:617,deployability,version,version,617,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:762,deployability,version,version,762,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:833,deployability,version,version,833,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1040,deployability,api,api,1040,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1286,deployability,version,version,1286,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1339,deployability,Instal,Installation,1339,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1377,deployability,build,build,1377,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:317,energy efficiency,Load,LoadText,317,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:397,integrability,version,version,397,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:617,integrability,version,version,617,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:762,integrability,version,version,762,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:833,integrability,version,version,833,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1040,integrability,api,api,1040,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1286,integrability,version,version,1286,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1040,interoperability,api,api,1040,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:397,modifiability,version,version,397,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:617,modifiability,version,version,617,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:762,modifiability,version,version,762,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:833,modifiability,version,version,833,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1286,modifiability,version,version,1286,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:317,performance,Load,LoadText,317,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:656,reliability,Doe,Does,656,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:777,reliability,Doe,Does,777,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:848,reliability,Doe,Does,848,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:945,reliability,doe,doesn,945,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:248,testability,simpl,simple,248,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:1428,testability,context,context,1428,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:248,usability,simpl,simple,248,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:903,usability,behavi,behavior,903,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:937,usability,clear,clearly,937,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:953,usability,support,support,953,"Attribute (`__getitem__`) differences for PyROOT objects in ROOT master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```. $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));"". ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python. import cppyy. cppyy.cppdef("""""". struct foo {};. """"""). bar = cppyy.gbl.foo(). print(f""cppyy version {cppyy.__version__}""). print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""). This gives:. ```. This returns:. ```. cppyy version 1.6.2. Does foo have __getitem__()? False. ```. vs. ```. cppyy version 3.1.2. Does foo have __getitem__()? True. ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas? ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/pull/15163:443,energy efficiency,model,model,443,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:593,modifiability,Exten,Extends,593,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:275,performance,memor,memory,275,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:267,safety,avoid,avoid,267,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:393,safety,avoid,avoid,393,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:178,security,access,accessors,178,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:443,security,model,model,443,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:275,usability,memor,memory,275,"[tmva][sofie] Fix issues with RModel streamer; * remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15164:14,deployability,version,version,14,[core] Change version string to X.Y.Z; from X.Y/Z. Fixes #14068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15164
https://github.com/root-project/root/pull/15164:1,energy efficiency,core,core,1,[core] Change version string to X.Y.Z; from X.Y/Z. Fixes #14068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15164
https://github.com/root-project/root/pull/15164:14,integrability,version,version,14,[core] Change version string to X.Y.Z; from X.Y/Z. Fixes #14068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15164
https://github.com/root-project/root/pull/15164:14,modifiability,version,version,14,[core] Change version string to X.Y.Z; from X.Y/Z. Fixes #14068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15164
https://github.com/root-project/root/pull/15165:7,energy efficiency,Core,Core,7,[v632][Core] Fix sprintf warning; which is more secure. BP of https://github.com/root-project/root/pull/15134.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15165
https://github.com/root-project/root/pull/15165:48,security,secur,secure,48,[v632][Core] Fix sprintf warning; which is more secure. BP of https://github.com/root-project/root/pull/15134.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15165
https://github.com/root-project/root/pull/15166:24,deployability,Scale,Scale,24,[v632][hist] THnSparse::Scale iterate only over non-filled bins; Backport of https://github.com/root-project/root/pull/15066.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15166
https://github.com/root-project/root/pull/15166:24,energy efficiency,Scale,Scale,24,[v632][hist] THnSparse::Scale iterate only over non-filled bins; Backport of https://github.com/root-project/root/pull/15066.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15166
https://github.com/root-project/root/pull/15166:24,modifiability,Scal,Scale,24,[v632][hist] THnSparse::Scale iterate only over non-filled bins; Backport of https://github.com/root-project/root/pull/15066.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15166
https://github.com/root-project/root/pull/15166:24,performance,Scale,Scale,24,[v632][hist] THnSparse::Scale iterate only over non-filled bins; Backport of https://github.com/root-project/root/pull/15066.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15166
https://github.com/root-project/root/pull/15167:45,interoperability,share,shared,45,[v632][cling] Allow running named macro from shared library; Backport of https://github.com/root-project/root/pull/14813.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15167
https://github.com/root-project/root/pull/15168:291,availability,redund,redundant,291,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:98,deployability,version,version,98,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:147,deployability,configurat,configuration,147,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:161,deployability,log,logs,161,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:235,deployability,version,version,235,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:291,deployability,redundan,redundant,291,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:98,integrability,version,version,98,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:147,integrability,configur,configuration,147,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:235,integrability,version,version,235,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:332,interoperability,standard,standard,332,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:98,modifiability,version,version,98,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:147,modifiability,configur,configuration,147,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:235,modifiability,version,version,235,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:291,reliability,redundan,redundant,291,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:476,reliability,doe,doesn,476,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:161,safety,log,logs,161,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:291,safety,redund,redundant,291,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:147,security,configur,configuration,147,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:161,security,log,logs,161,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:161,testability,log,logs,161,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:227,usability,minim,minimum,227,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:320,usability,minim,minimum,320,"[CMake] Check Python 3.8 requirement already in `find_package(Python3)`; We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python. 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15169:85,deployability,patch,patch,85,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:297,deployability,updat,updated,297,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:99,energy efficiency,load,loading,99,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:12,interoperability,plug,plugin,12,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:55,interoperability,plug,plugin,55,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:118,interoperability,plug,plugins,118,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:179,interoperability,plug,plugin,179,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:196,interoperability,plug,plugin,196,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:211,interoperability,plug,plugin,211,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:99,performance,load,loading,99,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:85,safety,patch,patch,85,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:267,safety,test,tested,267,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:297,safety,updat,updated,297,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:85,security,patch,patch,85,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:297,security,updat,updated,297,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:267,testability,test,tested,267,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:19,usability,support,support,19,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:62,usability,support,support,62,"[cling] Add plugin support; # This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15170:392,interoperability,format,format,392,[tmva] Cleanup RModel classes layout; As a followup to https://github.com/root-project/root/pull/15163 and in relation to https://github.com/root-project/root/issues/15156. * Apply rule of five. * Use correct `ClassDef` macro only when necessary. * Remove relationship to `TObject` from `RModel_Base`. * Properly implement virtual hierarchy for `RModel_GNNBase` and derived. Also apply clang-format changes in a separate commit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15170
https://github.com/root-project/root/pull/15171:22,interoperability,format,format,22,Fix file exclusion in format checker; Fixes #15108,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15171
https://github.com/root-project/root/pull/15172:45,interoperability,format,format,45,[ci] Fetch exactly the PR base sha for clang-format; Fixes #15107,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15172
https://github.com/root-project/root/pull/15173:205,deployability,log,logic,205,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:295,deployability,log,logic,295,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:624,deployability,log,logic,624,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:653,deployability,version,version,653,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:38,energy efficiency,model,models,38,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1594,energy efficiency,Load,Load,1594,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1686,energy efficiency,model,model,1686,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1821,energy efficiency,model,model,1821,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1935,energy efficiency,Load,Load,1935,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2018,energy efficiency,Load,Load,2018,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2031,energy efficiency,model,model,2031,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2118,energy efficiency,predict,prediction,2118,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:434,integrability,interfac,interface,434,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:466,integrability,interfac,interface,466,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:653,integrability,version,version,653,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:971,integrability,Event,Events,971,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1036,integrability,Event,Events,1036,"odels by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:98,interoperability,specif,specified,98,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:434,interoperability,interfac,interface,434,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:466,interoperability,interfac,interface,466,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:528,interoperability,specif,specifying,528,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1097,interoperability,format,format,1097,"ecified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1835,interoperability,format,format,1835,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2356,interoperability,compatib,compatible,2356,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:434,modifiability,interfac,interface,434,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:466,modifiability,interfac,interface,466,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:517,modifiability,paramet,parameter,517,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:653,modifiability,version,version,653,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:849,modifiability,variab,variables,849,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1184,modifiability,variab,variables,1184,"w backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1243,modifiability,variab,variables,1243,"/github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1594,performance,Load,Load,1594,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1935,performance,Load,Load,1935,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2018,performance,Load,Load,2018,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:205,safety,log,logic,205,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:295,safety,log,logic,295,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:624,safety,log,logic,624,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:700,safety,reme,remember,700,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1087,safety,input,inputs,1087,"RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2118,safety,predict,prediction,2118,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:38,security,model,models,38,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:205,security,log,logic,205,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:295,security,log,logic,295,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:624,security,log,logic,624,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:644,security,modif,modified,644,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1686,security,model,model,1686,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1821,security,model,model,1821,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2031,security,model,model,2031,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred_ref = xbdt.predict_proba(x)[:, 1]. y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))). ```. Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:120,testability,plan,plan,120,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:205,testability,log,logic,205,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:295,testability,log,logic,295,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:624,testability,log,logic,624,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:577,usability,support,support,577,"[TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_bac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1087,usability,input,inputs,1087,"RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1124,usability,learn,learning,1124,"work 2024. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1133,usability,tool,tools,1133,"4. The backends of RBDT are replaced with a single new backend:. the logic from the FastForest library:. https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in. CMSSW:. https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter. specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):. ```python. import ROOT. import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):. # Read data from ROOT files. data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(). data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools. x_sig = np.vstack([data_sig[var] for var in variables]).T. x_bkg = np.vstack([data_bkg[var] for var in variables]).T. x = np.vstack([x_sig, x_bkg]). # Create labels. num_sig = x_sig.shape[0]. num_bkg = x_bkg.shape[0]. y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes. num_all = num_sig + num_bkg. w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data. x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model. from xgboost import XGBClassifier. xbdt = XGBClassifier(max_depth=3, n_estimators=500). xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format. ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data. x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model. File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction. y_pred",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15174:42,availability,operat,operators,42,[v630] Remove std::string_view comparison operators; Backport of https://github.com/root-project/root/pull/14245. To address https://github.com/root-project/root/issues/14244#issuecomment-2042589340.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15174
https://github.com/root-project/root/pull/15175:365,deployability,updat,updated,365,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:197,safety,safe,safety-checks,197,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:335,safety,test,tested,335,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:365,safety,updat,updated,365,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:365,security,updat,updated,365,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:335,testability,test,tested,335,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:266,usability,efficien,efficiency,266,"[skip-ci] TChain::AddFile clarify that no check is done if nentries>0; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ? ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15176:396,deployability,updat,updated,396,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:24,energy efficiency,Load,LoadCurrentDim,24,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:24,performance,Load,LoadCurrentDim,24,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:7,safety,prevent,prevent,7,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:366,safety,test,tested,366,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:396,safety,updat,updated,396,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:7,security,preven,prevent,7,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:396,security,updat,updated,396,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:366,testability,test,tested,366,"[tree] prevent crash in LoadCurrentDim; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269. Fixes https://its.cern.ch/jira/browse/ROOT-7993. Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15177:5,deployability,Updat,Update,5,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/pull/15177:21,deployability,Updat,Updates,21,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/pull/15177:5,safety,Updat,Update,5,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/pull/15177:21,safety,Updat,Updates,21,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/pull/15177:5,security,Updat,Update,5,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/pull/15177:21,security,Updat,Updates,21,"[RF] Update xroofit; Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/issues/15178:774,availability,Operat,Operating,774,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:35,deployability,build,building,35,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:144,deployability,build,build,144,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:207,deployability,configurat,configuration,207,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:262,deployability,version,version,262,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:304,deployability,modul,modules,304,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:436,deployability,Stack,Stack,436,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:475,deployability,modul,modules,475,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:559,deployability,Build,Building,559,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:573,deployability,version,version,573,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:654,deployability,Build,Build,654,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:713,deployability,version,version,713,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:740,deployability,Instal,Installation,740,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:186,integrability,messag,message,186,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:207,integrability,configur,configuration,207,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:262,integrability,version,version,262,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:337,integrability,messag,message,337,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:573,integrability,version,version,573,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:713,integrability,version,version,713,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:186,interoperability,messag,message,186,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:337,interoperability,messag,message,337,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:378,interoperability,format,format,378,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:207,modifiability,configur,configuration,207,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:262,modifiability,version,version,262,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:304,modifiability,modul,modules,304,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:475,modifiability,modul,modules,475,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:573,modifiability,version,version,573,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:713,modifiability,version,version,713,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:304,safety,modul,modules,304,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:475,safety,modul,modules,475,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:207,security,configur,configuration,207,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:821,testability,context,context,821,"ROOT generates CMake warnings when building from the tarball; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:. ```. -- Found Git: /usr/bin/git (found version ""2.44.0""). CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):. GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the. commit. Call Stack (most recent call first):. cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION). CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06. ```. Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/pull/15180:190,deployability,depend,depended,190,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:468,deployability,log,logic,468,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:223,energy efficiency,optim,optimization,223,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:190,integrability,depend,depended,190,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:22,interoperability,convers,conversion,22,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:190,modifiability,depend,depended,190,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:199,performance,memor,memory,199,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:223,performance,optimiz,optimization,223,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:190,safety,depend,depended,190,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:406,safety,avoid,avoids,406,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:468,safety,log,logic,468,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:468,security,log,logic,468,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:190,testability,depend,depended,190,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:468,testability,log,logic,468,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:14,usability,Support,Support,14,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:199,usability,memor,memory,199,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:258,usability,support,supporting,258,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:500,usability,minim,minimal,500,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:509,usability,Close,Closes,509,"[PyROOT][RDF] Support conversion of `bool` columns to NumPy arrays; The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15183:86,safety,test,test,86,[CI] Add `xgboost` and `scikit-learn` to requirements; This should be added so we can test RBDT in the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15183
https://github.com/root-project/root/pull/15183:86,testability,test,test,86,[CI] Add `xgboost` and `scikit-learn` to requirements; This should be added so we can test RBDT in the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15183
https://github.com/root-project/root/pull/15183:31,usability,learn,learn,31,[CI] Add `xgboost` and `scikit-learn` to requirements; This should be added so we can test RBDT in the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15183
https://github.com/root-project/root/pull/15185:30,deployability,build,building,30,"[CMake] Require `opengl` when building with `cocoa`; Closes #7160, as discussed in the issue thread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15185
https://github.com/root-project/root/pull/15185:53,usability,Close,Closes,53,"[CMake] Require `opengl` when building with `cocoa`; Closes #7160, as discussed in the issue thread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15185
https://github.com/root-project/root/pull/15186:28,reliability,diagno,diagnostics,28,"Revert ""[ToRevert] Suppress diagnostics due to missing PCMs on Windows.""; Closes #9354. This reverts commit e3f2ed26b7903ff540a37e77f6c026b8502db747.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15186
https://github.com/root-project/root/pull/15186:28,testability,diagno,diagnostics,28,"Revert ""[ToRevert] Suppress diagnostics due to missing PCMs on Windows.""; Closes #9354. This reverts commit e3f2ed26b7903ff540a37e77f6c026b8502db747.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15186
https://github.com/root-project/root/pull/15186:74,usability,Close,Closes,74,"Revert ""[ToRevert] Suppress diagnostics due to missing PCMs on Windows.""; Closes #9354. This reverts commit e3f2ed26b7903ff540a37e77f6c026b8502db747.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15186
https://github.com/root-project/root/pull/15187:189,deployability,instal,installed,189,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:334,deployability,instal,installed,334,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:121,energy efficiency,model,models,121,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:354,interoperability,platform,platform,354,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:64,reliability,doe,doesn,64,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:36,safety,test,test,36,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:153,safety,test,test,153,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:246,safety,test,test,246,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:269,safety,test,test,269,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:121,security,model,models,121,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:36,testability,test,test,36,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:153,testability,test,test,153,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:246,testability,test,test,246,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:269,testability,test,test,269,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:72,usability,support,support,72,"[v626][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15188:189,deployability,instal,installed,189,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:334,deployability,instal,installed,334,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:121,energy efficiency,model,models,121,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:354,interoperability,platform,platform,354,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:64,reliability,doe,doesn,64,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:36,safety,test,test,36,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:153,safety,test,test,153,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:246,safety,test,test,246,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:269,safety,test,test,269,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:121,security,model,models,121,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:36,testability,test,test,36,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:153,testability,test,test,153,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:246,testability,test,test,246,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:269,testability,test,test,269,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:72,usability,support,support,72,"[v628][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15189:189,deployability,instal,installed,189,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:334,deployability,instal,installed,334,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:121,energy efficiency,model,models,121,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:354,interoperability,platform,platform,354,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:64,reliability,doe,doesn,64,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:36,safety,test,test,36,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:153,safety,test,test,153,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:246,safety,test,test,246,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:269,safety,test,test,269,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:121,security,model,models,121,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:36,testability,test,test,36,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:153,testability,test,test,153,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:246,testability,test,test,246,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:269,testability,test,test,269,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:72,usability,support,support,72,"[v630][TMVA] Disable `rbdt_xgboost` test; Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15191:144,deployability,version,version,144,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:254,deployability,updat,updated,254,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:144,integrability,version,version,144,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:181,integrability,messag,messages,181,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:181,interoperability,messag,messages,181,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:144,modifiability,version,version,144,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:224,safety,test,tested,224,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:254,safety,updat,updated,254,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:254,security,updat,updated,254,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:224,testability,test,tested,224,"Afterimage fixes; # This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes. See commit messages for details. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15193:79,energy efficiency,green,green,79,[v626][TMVA] Fix tutorials; Backporting parts of 363373bb987 to make the tests green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15193
https://github.com/root-project/root/pull/15193:73,safety,test,tests,73,[v626][TMVA] Fix tutorials; Backporting parts of 363373bb987 to make the tests green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15193
https://github.com/root-project/root/pull/15193:73,testability,test,tests,73,[v626][TMVA] Fix tutorials; Backporting parts of 363373bb987 to make the tests green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15193
https://github.com/root-project/root/pull/15195:13,performance,tune,tune,13,[cmake] fine-tune the builtin-afterimage flag removal; # This Pull request:. ## Changes or fixes:. Minor changes after builtin_afterimage removal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15195
https://github.com/root-project/root/issues/15196:0,availability,Error,Errors,0,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:531,availability,error,errors,531,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:600,availability,error,errors,600,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:706,availability,error,error,706,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1676,availability,Operat,Operating,1676,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:38,deployability,version,version,38,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:273,deployability,updat,updated,273,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:298,deployability,version,version,298,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:340,deployability,version,version,340,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:448,deployability,version,version,448,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:547,deployability,version,version,547,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:682,deployability,manag,manage,682,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1195,deployability,version,version,1195,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1641,deployability,Instal,Installation,1641,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:682,energy efficiency,manag,manage,682,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:38,integrability,version,version,38,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:213,integrability,wrap,wrapper,213,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:298,integrability,version,version,298,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:340,integrability,version,version,340,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:448,integrability,version,version,448,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:547,integrability,version,version,547,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:797,integrability,pub,public,797,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:847,integrability,pub,public,847,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:951,integrability,pub,public,951,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1195,integrability,version,version,1195,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:213,interoperability,wrapper,wrapper,213,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:38,modifiability,version,version,38,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:298,modifiability,version,version,298,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:340,modifiability,version,version,340,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:448,modifiability,version,version,448,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:547,modifiability,version,version,547,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:738,modifiability,pac,packed,738,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1195,modifiability,version,version,1195,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:0,performance,Error,Errors,0,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:531,performance,error,errors,531,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:600,performance,error,errors,600,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:706,performance,error,error,706,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:0,safety,Error,Errors,0,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:273,safety,updat,updated,273,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:531,safety,error,errors,531,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:600,safety,error,errors,600,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:682,safety,manag,manage,682,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:706,safety,error,error,706,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:854,safety,test,test,854,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:958,safety,test,test,958,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:273,security,updat,updated,273,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1350,security,Team,Team,1350,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:854,testability,test,test,854,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:958,testability,test,test,958,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1725,testability,context,context,1725,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:0,usability,Error,Errors,0,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:315,usability,stop,stopped,315,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:474,usability,minim,minimum,474,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:491,usability,statu,status,491,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:499,usability,MINIM,MINIMIZE,499,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:531,usability,error,errors,531,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:564,usability,MINIM,MINIMIZE,564,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:600,usability,error,errors,600,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:626,usability,Minim,Minimizer,626,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:706,usability,error,error,706,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1133,usability,Minim,Minimizer,1133,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1503,usability,help,help,1503,"Errors with chi2FitTo in a new RooFit version; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working. The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors. I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```. import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""). workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""). pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")). result.Print(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |. | From heads/master@tags/v6-30-04 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15197:361,availability,avail,available,361,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:661,availability,failur,failures,661,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:927,availability,FAILUR,FAILURES,927,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1315,availability,fault,fault,1315,"not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2956,availability,avail,available,2956,"sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4514,availability,Operat,Operating,4514,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:322,deployability,instal,installed,322,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:608,deployability,instal,installed,608,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:661,deployability,fail,failures,661,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:927,deployability,FAIL,FAILURES,927,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1137,deployability,depend,depend,1137,"roper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1151,deployability,version,version,1151,"of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2288,deployability,stack,stacktrace,2288,"SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4452,deployability,version,version,4452,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4470,deployability,Instal,Installation,4470,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4491,deployability,build,build,4491,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:166,energy efficiency,model,models,166,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:832,energy efficiency,model,models,832,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1315,energy efficiency,fault,fault,1315,"not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1784,energy efficiency,optim,optimized,1784,"or the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2113,energy efficiency,optim,optimized,2113,"which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2135,energy efficiency,optim,optimized,2135,"end on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2164,energy efficiency,optim,optimized,2164,"). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2567,energy efficiency,current,current,2567,"74dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, nu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2664,energy efficiency,current,currently,2664,"st_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2909,energy efficiency,model,models,2909,"@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1137,integrability,depend,depend,1137,"roper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1151,integrability,version,version,1151,"of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4452,integrability,version,version,4452,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:205,interoperability,format,format,205,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:761,interoperability,platform,platforms,761,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:850,interoperability,platform,platform,850,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:3182,interoperability,platform,platform,3182,"end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Expe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4135,interoperability,format,format,4135,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4234,interoperability,format,format,4234,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:306,modifiability,pac,package,306,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:408,modifiability,pac,package,408,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:596,modifiability,pac,package,596,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1137,modifiability,depend,depend,1137,"roper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1151,modifiability,version,version,1151,"of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2439,modifiability,pac,packages,2439,"__do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(123",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:3106,modifiability,pac,packages,3106,"t=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4452,modifiability,version,version,4452,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:661,performance,failur,failures,661,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:802,performance,time,time,802,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:927,performance,FAILUR,FAILURES,927,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1112,performance,time,time,1112,". RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1315,performance,fault,fault,1315,"not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1784,performance,optimiz,optimized,1784,"or the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2113,performance,optimiz,optimized,2113,"which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2135,performance,optimiz,optimized,2135,"end on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2164,performance,optimiz,optimized,2164,"). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:5,reliability,doe,does,5,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:361,reliability,availab,available,361,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:661,reliability,fail,failures,661,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:927,reliability,FAIL,FAILURES,927,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1126,reliability,doe,does,1126,"er testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1315,reliability,fault,fault,1315,"not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2956,reliability,availab,available,2956,"sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:131,safety,test,testing,131,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:279,safety,test,tested,279,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:361,safety,avail,available,361,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:371,safety,test,test,371,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:523,safety,test,test,523,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:556,safety,test,test,556,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:813,safety,test,tests,813,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:910,safety,test,tests,910,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:922,safety,TEST,TEST,922,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:942,safety,test,test-tcollbm,942,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1137,safety,depend,depend,1137,"roper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1315,safety,fault,fault,1315,"not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2325,safety,test,tests,2325,"7f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2424,safety,compl,complex,2424,"f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2956,safety,avail,available,2956,"sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:3091,safety,compl,complex,3091,"fe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4113,safety,test,testXGBBinary,4113,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4212,safety,test,testXGBBinary,4212,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4333,safety,test,testing,4333,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:166,security,model,models,166,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:361,security,availab,available,361,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:832,security,model,models,832,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1286,security,sign,signal,1286,"ce the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2424,security,compl,complex,2424,"f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2909,security,model,models,2909,"@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2956,security,availab,available,2956,"sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:3091,security,compl,complex,3091,"fe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:131,testability,test,testing,131,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:279,testability,test,tested,279,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:371,testability,test,test,371,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:523,testability,test,test,523,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:556,testability,test,test,556,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:813,testability,test,tests,813,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:910,testability,test,tests,910,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:922,testability,TEST,TEST,922,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:942,testability,test,test-tcollbm,942,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1137,testability,depend,depend,1137,"roper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2325,testability,test,tests,2325,"7f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2575,testability,understand,understanding,2575,"un_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4113,testability,test,testXGBBinary,4113,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4212,testability,test,testXGBBinary,4212,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4333,testability,test,testing,4333,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4581,testability,context,context,4581,"on with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):. x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype). if num_outputs == 1:. y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype). else:. y = np.random.choice(. a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs. ).astype(dtype=dtype). return x, y. def _test_XGBBinary(label):. """""". Compare response of XGB classifier and TMVA tree inference system. """""". x, y = create_dataset(1000, 10, 2). xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3). xgb.fit(x, y). ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10). bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(). y_bdt = bdt.Compute(x).squeeze(). np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":. _test_XGBBinary(""default""). ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:14,usability,support,support,14,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:673,usability,document,documented,673,"RBDT does not support xgboost inference; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1600,usability,statu,status,1600," was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1776,usability,statu,status,1776,"running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```. TEST FAILURES:. 296:test-tcollbm. 1314:tutorial-tmva-tmva101_Training-py. 1315:tutorial-tmva-tmva102_Testing-py. ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost). ```. (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py . [...]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault. 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. (gdb) . (gdb) bt. #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0. #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2515,usability,behavi,behaviour,2515," in _dl_fini () at dl-fini.c:142. #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, . run_dtors=run_dtors@entry=true) at exit.c:116. #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146. #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838). at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, . rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389. #6 0x0000557932280095 in _start (). ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:. * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results). * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models. * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality. * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault. ```python. import xgboost. import ROOT. import numpy as np. import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/pull/15198:58,energy efficiency,current,current,58,[tmva] Warn when using RBDT and xgboost; Representing the current situation at https://github.com/root-project/root/issues/15197.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15198
https://github.com/root-project/root/pull/15199:44,energy efficiency,current,current,44,[6.32] Backport of #15198; Representing the current situation at https://github.com/root-project/root/issues/15197.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15199
https://github.com/root-project/root/pull/15200:33,deployability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:210,deployability,updat,updated,210,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,integrability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,interoperability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,modifiability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,reliability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:180,safety,test,tested,180,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:210,safety,updat,updated,210,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,security,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:210,security,updat,updated,210,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:33,testability,Integr,Integral,33,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:180,testability,test,tested,180,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:42,usability,help,helper,42,[hist] THn: Add GetBinCenter and Integral helper methods; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15204:44,energy efficiency,current,current,44,[6.28] Backport of #15198; Representing the current situation at https://github.com/root-project/root/issues/15197.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15204
https://github.com/root-project/root/pull/15205:44,energy efficiency,current,current,44,[6.30] Backport of #15198; Representing the current situation at https://github.com/root-project/root/issues/15197.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15205
https://github.com/root-project/root/pull/15207:163,deployability,updat,updated,163,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:133,safety,test,tested,133,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:163,safety,updat,updated,163,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:163,security,updat,updated,163,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:133,testability,test,tested,133,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:10,usability,document,document,10,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:97,usability,document,documentation,97,[skip-ci] document TTree::SetScanField; # This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15209:53,performance,time,timeouts,53,Tmva tutorial improvements; Maybe this can help with timeouts such as https://github.com/root-project/root/actions/runs/8645662018/job/23703294577?pr=15200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15209
https://github.com/root-project/root/pull/15209:53,safety,timeout,timeouts,53,Tmva tutorial improvements; Maybe this can help with timeouts such as https://github.com/root-project/root/actions/runs/8645662018/job/23703294577?pr=15200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15209
https://github.com/root-project/root/pull/15209:43,usability,help,help,43,Tmva tutorial improvements; Maybe this can help with timeouts such as https://github.com/root-project/root/actions/runs/8645662018/job/23703294577?pr=15200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15209
https://github.com/root-project/root/issues/15210:503,availability,avail,available,503,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:867,availability,avail,available,867,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1767,availability,Operat,Operating,1767,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1444,deployability,continu,continue,1444,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1524,deployability,version,version,1524,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1726,deployability,Instal,Installation,1726,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1754,deployability,Releas,Release,1754,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1524,integrability,version,version,1524,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:123,modifiability,Paramet,Parameter,123,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1524,modifiability,version,version,1524,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:503,reliability,availab,available,503,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:867,reliability,availab,available,867,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:254,safety,test,test,254,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:503,safety,avail,available,503,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:867,safety,avail,available,867,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:503,security,availab,available,503,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:867,security,availab,available,867,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:254,testability,test,test,254,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1827,testability,context,context,1827,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:7,usability,behavi,behaviour,7,"[tree] behaviour of TTreePlayer::Scan nentries; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256. Script below. ```. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'. Warning in <TClass::Init>: no dictionary for class TChannelInfo is available. ***********************************. * Row * Instance * llll_type *. ***********************************. * 0 * 0 * *. * 1 * 0 * *. * 2 * 0 * *. * 3 * 0 * 1111 *. * 3 * 1 * 1111 *. * 3 * 2 * 1111 *. * 3 * 3 * 1111 *. * 3 * 4 * 1111 *. * 3 * 5 * 1111 *. * 3 * 6 * 1111 *. * 3 * 7 * 1111 *. * 3 * 8 * 1111 *. * 3 * 9 * 1111 *. * 3 * 10 * 1111 *. * 3 * 11 * 1111 *. * 3 * 12 * 1111 *. * 3 * 13 * 1111 *. * 3 * 14 * 1111 *. * 3 * 15 * 1111 *. * 3 * 16 * 1111 *. * 3 * 17 * 1111 *. * 3 * 18 * 1111 *. * 3 * 19 * 1111 *. * 3 * 20 * 1111 *. * 3 * 21 * 1111 *. Type <CR> to continue or q to quit ==> q. ***********************************. ```. ### ROOT version. ```. ROOT v6.30/04. Built for linuxx8664gcc on Jan 31 2024, 10:01:37. From heads/master@tags/v6-30-04. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15211:320,availability,failur,failures,320,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:372,availability,failur,failures,372,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:472,availability,failur,failures,472,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,availability,failur,failure,653,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:728,availability,failur,failure,728,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:919,availability,Operat,Operating,919,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:36,deployability,configurat,configuration,36,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:320,deployability,fail,failures,320,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:372,deployability,fail,failures,372,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:472,deployability,fail,failures,472,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:544,deployability,configurat,configuration,544,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:612,deployability,build,build,612,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,deployability,fail,failure,653,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:728,deployability,fail,failure,728,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:755,deployability,log,log,755,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:861,deployability,version,version,861,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:882,deployability,Instal,Installation,882,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:626,energy efficiency,current,currently,626,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:36,integrability,configur,configuration,36,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:544,integrability,configur,configuration,544,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:861,integrability,version,version,861,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:36,modifiability,configur,configuration,36,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:544,modifiability,configur,configuration,544,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:861,modifiability,version,version,861,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:320,performance,failur,failures,320,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:372,performance,failur,failures,372,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:472,performance,failur,failures,472,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,performance,failur,failure,653,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:728,performance,failur,failure,728,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:320,reliability,fail,failures,320,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:372,reliability,fail,failures,372,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:472,reliability,fail,failures,472,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,reliability,fail,failure,653,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:677,reliability,doe,does,677,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:728,reliability,fail,failure,728,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:580,safety,compl,completely,580,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:686,safety,detect,detect,686,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:755,safety,log,log,755,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:36,security,configur,configuration,36,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:544,security,configur,configuration,544,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:580,security,compl,completely,580,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:686,security,detect,detect,686,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:755,security,log,log,755,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:755,testability,log,log,755,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:966,testability,context,context,966,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:534,usability,support,supported,534,"TMVA missing protection against mis-configuration.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures). or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on. ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch. and. ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15212:137,availability,servic,services,137,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1516,availability,ERROR,ERROR,1516,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1595,availability,Operat,Operating,1595,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:137,deployability,servic,services,137,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:193,deployability,build,build,193,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:315,deployability,fail,fails,315,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:444,deployability,configurat,configuration,444,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:502,deployability,fail,fail,502,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:564,deployability,Depend,DependencyVersions,564,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:594,deployability,version,versions,594,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:610,deployability,instal,installed,610,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1047,deployability,depend,dependency,1047,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1079,deployability,depend,dependency,1079,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1139,deployability,depend,dependency,1139,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1245,deployability,build,build,1245,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1283,deployability,build,build,1283,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1338,deployability,depend,dependencies,1338,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1537,deployability,version,version,1537,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1558,deployability,Instal,Installation,1558,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:137,integrability,servic,services,137,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:444,integrability,configur,configuration,444,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:564,integrability,Depend,DependencyVersions,564,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:594,integrability,version,versions,594,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1047,integrability,depend,dependency,1047,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1079,integrability,depend,dependency,1079,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1139,integrability,depend,dependency,1139,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1338,integrability,depend,dependencies,1338,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1537,integrability,version,version,1537,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:228,interoperability,bind,bindings,228,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1150,interoperability,distribut,distributed,1150,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1374,interoperability,distribut,distribution,1374,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1453,interoperability,distribut,distribution,1453,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:137,modifiability,servic,services,137,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:228,modifiability,bind,bindings,228,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:444,modifiability,configur,configuration,444,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:564,modifiability,Depend,DependencyVersions,564,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:594,modifiability,version,versions,594,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:620,modifiability,pac,packages,620,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1047,modifiability,depend,dependency,1047,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1079,modifiability,depend,dependency,1079,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1139,modifiability,depend,dependency,1139,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1338,modifiability,depend,dependencies,1338,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1537,modifiability,version,version,1537,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1516,performance,ERROR,ERROR,1516,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:315,reliability,fail,fails,315,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:435,reliability,doe,does,435,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:488,reliability,doe,does,488,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:502,reliability,fail,fail,502,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:205,safety,test,testReport,205,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:259,safety,test,test,259,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:310,safety,test,test,310,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:497,safety,test,test,497,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:564,safety,Depend,DependencyVersions,564,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:585,safety,Test,Test,585,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1047,safety,depend,dependency,1047,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1079,safety,depend,dependency,1079,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1139,safety,depend,dependency,1139,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1338,safety,depend,dependencies,1338,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1516,safety,ERROR,ERROR,1516,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:340,security,access,access,340,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:444,security,configur,configuration,444,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:7,testability,unit,unittest,7,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:205,testability,test,testReport,205,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:259,testability,test,test,259,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:310,testability,test,test,310,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:497,testability,test,test,497,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:564,testability,Depend,DependencyVersions,564,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:585,testability,Test,Test,585,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1047,testability,depend,dependency,1047,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1079,testability,depend,dependency,1079,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1139,testability,depend,dependency,1139,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1338,testability,depend,dependencies,1338,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1642,testability,context,context,1642,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:358,usability,learn,learn,358,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:714,usability,learn,learn,714,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1367,usability,learn,learn,1367,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1516,usability,ERROR,ERROR,1516,"PyROOT unittest about requirements; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed? If they are not, why does the test fail? ### Reproducer. ```. test_versions (dependency_versions.DependencyVersions). Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'scikit-learn' distribution was not found and is required by the application. - The 'xgboost' distribution was not found and is required by the application. ERROR. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15213:1299,availability,Operat,Operating,1299,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1185,deployability,instal,installroot,1185,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1200,deployability,build,buildroot,1200,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1228,deployability,version,version,1228,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1255,deployability,Instal,Installation,1255,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1276,deployability,Build,Build,1276,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:20,integrability,configur,configuring,20,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1228,integrability,version,version,1228,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1065,interoperability,architectur,architecture,1065,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:20,modifiability,configur,configuring,20,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1228,modifiability,version,version,1228,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:20,security,configur,configuring,20,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:340,security,Polic,Policy,340,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:432,security,polic,policy,432,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:452,security,polic,policy,452,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:509,security,polic,policy,509,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:727,security,Polic,Policy,727,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:819,security,polic,policy,819,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:839,security,polic,policy,839,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:896,security,polic,policy,896,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1346,testability,context,context,1346,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:384,usability,command,command,384,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:427,usability,help,help-policy,427,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:490,usability,command,command,490,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:771,usability,command,command,771,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:814,usability,help,help-policy,814,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:877,usability,command,command,877,"cmake warning while configuring; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated. -- 175/239 python tutorials have been activated. -- Found roottest: /home/kristupas/root/../roottest. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/pull/15215:121,safety,compl,complete,121,"[ntuple] Implement incremental merging + Use CommitSealedPagesV [v6.32]; As discussed, backport the following two PRs to complete the RNTuple merging feature for 6.32:. * https://github.com/root-project/root/pull/15111. * https://github.com/root-project/root/pull/15154. @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15215
https://github.com/root-project/root/pull/15215:121,security,compl,complete,121,"[ntuple] Implement incremental merging + Use CommitSealedPagesV [v6.32]; As discussed, backport the following two PRs to complete the RNTuple merging feature for 6.32:. * https://github.com/root-project/root/pull/15111. * https://github.com/root-project/root/pull/15154. @amete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15215
https://github.com/root-project/root/pull/15216:106,integrability,sub,submitted,106,[PyRoot] Add rstring to remove warning in python 3.12; Fix cmake warning for python 3.12. Also the PR was submitted to https://github.com/wlav/cppyy-backend/tree/master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15216
https://github.com/root-project/root/issues/15217:887,availability,Operat,Operating,887,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:10,deployability,fail,fails,10,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:820,deployability,version,version,820,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:834,deployability,patch,patches,834,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:847,deployability,Instal,Installation,847,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:527,integrability,pub,public,527,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:820,integrability,version,version,820,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:405,modifiability,paramet,parameter,405,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:820,modifiability,version,version,820,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:10,reliability,fail,fails,10,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:834,safety,patch,patches,834,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:834,security,patch,patches,834,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:927,testability,context,context,927,"cppyy now fails to call a static method on an object instance; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right? Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK. ### Reproducer. ```. import cppyy. cppyy.cppdef("""""". class MyClass { public:. void static statMethod(const std::string& astr, const std::string& path = """") {}. };""""""). obj = cppyy.gbl.MyClass(). obj.statMethod(""first""). TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>. TypeError: could not convert argument 1. ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/pull/15218:320,deployability,updat,updated,320,[cling] remove remnant declaration of removed function; # This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15218:290,safety,test,tested,290,[cling] remove remnant declaration of removed function; # This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15218:320,safety,updat,updated,320,[cling] remove remnant declaration of removed function; # This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15218:320,security,updat,updated,320,[cling] remove remnant declaration of removed function; # This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15218:290,testability,test,tested,290,[cling] remove remnant declaration of removed function; # This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15219:239,deployability,updat,updated,239,CMAKE: add comment for deprecating cmake options to notify SPI please; # This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15219:209,safety,test,tested,209,CMAKE: add comment for deprecating cmake options to notify SPI please; # This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15219:239,safety,updat,updated,239,CMAKE: add comment for deprecating cmake options to notify SPI please; # This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15219:239,security,updat,updated,239,CMAKE: add comment for deprecating cmake options to notify SPI please; # This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15219:209,testability,test,tested,209,CMAKE: add comment for deprecating cmake options to notify SPI please; # This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15220:34,energy efficiency,Load,LoadCurrentDim,34,[v632][BP][tree] prevent crash in LoadCurrentDim; BP of https://github.com/root-project/root/pull/15176,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15220
https://github.com/root-project/root/pull/15220:34,performance,Load,LoadCurrentDim,34,[v632][BP][tree] prevent crash in LoadCurrentDim; BP of https://github.com/root-project/root/pull/15176,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15220
https://github.com/root-project/root/pull/15220:17,safety,prevent,prevent,17,[v632][BP][tree] prevent crash in LoadCurrentDim; BP of https://github.com/root-project/root/pull/15176,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15220
https://github.com/root-project/root/pull/15220:17,security,preven,prevent,17,[v632][BP][tree] prevent crash in LoadCurrentDim; BP of https://github.com/root-project/root/pull/15176,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15220
https://github.com/root-project/root/issues/15221:0,availability,Error,Error,0,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:227,availability,Error,Error,227,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:263,availability,Error,Error,263,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:975,availability,Error,Error,975,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1011,availability,Error,Error,1011,"payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1986,availability,Error,Error,1986,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2090,availability,avail,available,2090,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2152,availability,Error,Error,2152,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2256,availability,avail,available,2256,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2318,availability,Error,Error,2318,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2422,availability,avail,available,2422,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2719,availability,Operat,Operating,2719,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:411,deployability,version,versions,411,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:626,deployability,patch,patches,626,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:889,deployability,build,build,889,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:899,deployability,build,build,899,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:931,deployability,fail,fail,931,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2558,deployability,version,version,2558,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2583,deployability,patch,patches,2583,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2617,deployability,patch,patches,2617,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2659,deployability,releas,releases,2659,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2682,deployability,Instal,Installation,2682,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2707,deployability,stack,stacks,2707,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:451,energy efficiency,green,green,451,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2004,energy efficiency,Load,LoadClassInfo,2004,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2170,energy efficiency,Load,LoadClassInfo,2170,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2336,energy efficiency,Load,LoadClassInfo,2336,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:411,integrability,version,versions,411,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1266,integrability,pub,public,1266,"parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1312,integrability,pub,public,1312,"::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2143,integrability,rout,routine,2143,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2309,integrability,rout,routine,2309,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2475,integrability,rout,routine,2475,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2558,integrability,version,version,2558,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:155,modifiability,inherit,inheriting,155,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:411,modifiability,version,versions,411,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2558,modifiability,version,version,2558,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:0,performance,Error,Error,0,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:227,performance,Error,Error,227,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:263,performance,Error,Error,263,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:335,performance,content,content,335,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:975,performance,Error,Error,975,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1011,performance,Error,Error,1011,"payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1083,performance,content,content,1083,"Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1986,performance,Error,Error,1986,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2004,performance,Load,LoadClassInfo,2004,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2152,performance,Error,Error,2152,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2170,performance,Load,LoadClassInfo,2170,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2318,performance,Error,Error,2318,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2336,performance,Load,LoadClassInfo,2336,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:931,reliability,fail,fail,931,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1864,reliability,pra,pragma,1864,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2090,reliability,availab,available,2090,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2256,reliability,availab,available,2256,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2422,reliability,availab,available,2422,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:0,safety,Error,Error,0,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:227,safety,Error,Error,227,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:263,safety,Error,Error,263,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:626,safety,patch,patches,626,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:975,safety,Error,Error,975,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1011,safety,Error,Error,1011,"payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1986,safety,Error,Error,1986,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2090,safety,avail,available,2090,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2152,safety,Error,Error,2152,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2256,safety,avail,available,2256,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2318,safety,Error,Error,2318,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2422,safety,avail,available,2422,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2583,safety,patch,patches,2583,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2617,safety,patch,patches,2617,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:626,security,patch,patches,626,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2090,security,availab,available,2090,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2256,security,availab,available,2256,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2422,security,availab,available,2422,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2583,security,patch,patches,2583,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2617,security,patch,patches,2617,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2759,testability,context,context,2759,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:0,usability,Error,Error,0,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:227,usability,Error,Error,227,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:263,usability,Error,Error,263,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:975,usability,Error,Error,975,"Error parsing payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1011,usability,Error,Error,1011,"payload for dictionary with std::pair; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in . ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. ```. The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before. see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. or. ```. source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1986,usability,Error,Error,1986,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2152,usability,Error,Error,2152,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2318,usability,Error,Error,2318,"sh. ```. And then run. ```. git clone https://github.com/andresailer/dictfailure.git. cd dictfailure. mkdir build. cd build. cmake .. make. python ../fail.py. ```. The python ends up with. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include <string>. namespace myProject {. namespace sim {. class TypeName : public std::pair<std::string, std::string> {. public:. TypeName(const std::pair<std::string, std::string>& c). : std::pair<std::string, std::string>(c) {}. /// Initializing constructor. TypeName(const std::string& typ, const std::string& nam). : std::pair<std::string, std::string>(typ, nam) {}. };. } // End namespace sim. } // End namespace myProject. namespace myProject {. namespace dict {. struct DictCreation {. };. } // dict. } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine. <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>. ```. ### ROOT version. Broken: 6-32-00 patches, master. Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/pull/15223:189,availability,operat,operator,189,[v630][hist] Implement Copy for TH2Poly; Backport of https://github.com/root-project/root/pull/14732. Add TH2Poly::Copy function and implement also using Copy the copy ctor and. assignment operator# This Pull request:. This PR fixes #13075.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15223
https://github.com/root-project/root/pull/15224:91,deployability,observ,observable,91,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:153,deployability,observ,observable,153,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:732,deployability,observ,observable,732,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:785,deployability,releas,release,785,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:307,energy efficiency,load,loading,307,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:177,modifiability,variab,variables,177,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:307,performance,load,loading,307,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:74,reliability,doe,doesn,74,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:272,safety,input,input,272,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:91,testability,observ,observable,91,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:153,testability,observ,observable,153,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:240,testability,context,contexts,240,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:620,testability,simpl,simply,620,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:732,testability,observ,observable,732,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:272,usability,input,input,272,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:620,usability,simpl,simply,620,"[RF] Fix computation graphs with RooParamHistFunc; The `RooParamHistFunc` doesn't take any observable RooRealVar as. constructor argument. It assumes as observable the internal variables in. the passed RooDataHist. This means it is in most contexts unusable,. because the input can't be changed, other than loading a different bin. in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation. backend is the default, and it is more sentitive to these issues:. https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was. simply ignored. To fix all these problems, the existing constructors were replaced by a. new one that takes the observable explicitly, and this is mentioned in. the release notes. The class is not used much, because ussually people use HistFactory or. CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15225:48,availability,down,down,48,"[skip-ci] Remove link to rawgit as it will shut down; . # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/cling/issues/339. From main RawGit Webpage: If you're currently using RawGit, please stop using it as soon as you can.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15225
https://github.com/root-project/root/pull/15225:192,energy efficiency,current,currently,192,"[skip-ci] Remove link to rawgit as it will shut down; . # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/cling/issues/339. From main RawGit Webpage: If you're currently using RawGit, please stop using it as soon as you can.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15225
https://github.com/root-project/root/pull/15225:223,usability,stop,stop,223,"[skip-ci] Remove link to rawgit as it will shut down; . # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/cling/issues/339. From main RawGit Webpage: If you're currently using RawGit, please stop using it as soon as you can.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15225
https://github.com/root-project/root/pull/15226:63,interoperability,platform,platform,63,[CMake] Disable `builtin_zeromq` in CI; This is to check which platform would provide zeromq compiled with the right flags.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15226
https://github.com/root-project/root/pull/15229:431,deployability,updat,updated,431,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:1,energy efficiency,core,core,1,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:59,performance,content,content,59,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:11,safety,compl,completion,11,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:401,safety,test,tested,401,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:431,safety,updat,updated,431,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:11,security,compl,completion,11,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:431,security,updat,updated,431,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:401,testability,test,tested,401,[core] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585. Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3. Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/issues/15230:265,availability,Operat,Operating,265,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:193,deployability,automat,automatically,193,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:217,deployability,version,version,217,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:235,deployability,Instal,Installation,235,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:131,integrability,sub,subdir,131,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:217,integrability,version,version,217,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:217,modifiability,version,version,217,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:193,testability,automat,automatically,193,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/issues/15230:303,testability,context,context,303,"[CI] clingtest=ON when cling touched; ### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480. https://github.com/root-project/root/issues/6957. https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/pull/15231:179,deployability,fail,fails,179,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:518,deployability,updat,updated,518,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:179,reliability,fail,fails,179,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:488,safety,test,tested,488,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:518,safety,updat,updated,518,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:518,security,updat,updated,518,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:488,testability,test,tested,488,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:294,usability,behavi,behaviour,294,"[Tree] Fix globbing of ? when also used as query; # This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:. This PR fixes #10239 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15232:440,deployability,updat,updated,440,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:970,deployability,Updat,Update,970,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:1031,deployability,Updat,Update,1031,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:945,energy efficiency,Draw,Draw,945,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:979,energy efficiency,draw,draws,979,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:63,modifiability,Exten,Extends,63,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:163,reliability,doe,does,163,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:410,safety,test,tested,410,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:440,safety,updat,updated,440,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:492,safety,test,test,492,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:970,safety,Updat,Update,970,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:1031,safety,Updat,Update,1031,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:440,security,updat,updated,440,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:970,security,Updat,Update,970,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:1031,security,Updat,Update,1031,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:1082,security,Modif,Modified,1082,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:250,testability,simpl,simply,250,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:410,testability,test,tested,410,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:492,testability,test,test,492,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:594,testability,Simpl,Simple,594,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:848,testability,simpl,simple,848,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:250,usability,simpl,simply,250,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:594,usability,Simpl,Simple,594,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:848,usability,simpl,simple,848,"[TGraphErrors] add AddPointError method; # This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (added a doxygen line). ## Code to test functionality:. (run as a root script). ```c++. void apge() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;. TGraphErrors *gr = new TGraphErrors;. for (Int_t i=0;i<n;i++) {. Double_t x = i*0.1;. gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));. }. gr->SetTitle(""a simple graph"");. gr->GetXaxis()->SetTitle(""X title"");. gr->GetYaxis()->SetTitle(""Y title"");. gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it. c1->Update();. c1->GetFrame()->SetBorderSize(12);. c1->Modified();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15233:6,availability,echo,echo,6,[win] echo without newline in `root-config.bat`; Should fix a problem when using `root-config.bat` in `execute_process`. when the output of `root-config.bat` contains a newline.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15233
https://github.com/root-project/root/pull/15233:158,deployability,contain,contains,158,[win] echo without newline in `root-config.bat`; Should fix a problem when using `root-config.bat` in `execute_process`. when the output of `root-config.bat` contains a newline.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15233
https://github.com/root-project/root/issues/15234:903,availability,Operat,Operating,903,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:60,deployability,contain,container,60,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:836,deployability,version,version,836,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:850,deployability,patch,patches,850,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:863,deployability,Instal,Installation,863,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:335,integrability,pub,public,335,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:420,integrability,pub,public,420,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:436,integrability,pub,public,436,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:520,integrability,pub,public,520,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:836,integrability,version,version,836,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:48,modifiability,polymorph,polymorphic,48,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:166,modifiability,polymorph,polymorphic,166,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:836,modifiability,version,version,836,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:1311,modifiability,variab,variable,1311,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:850,safety,patch,patches,850,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:850,security,patch,patches,850,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:943,testability,context,context,943,"cppyy - wrong object type when iterating over a polymorphic container; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". class vertex { public:. virtual std::string idself() { return ""I am vertex""; }. };. class Mvertex : public vertex { public:. virtual std::string idself() { return ""I am Mvertex""; }. };. class vCont { public:. std::vector< vertex* > verts { new vertex(), new Mvertex() };. const std::vector<vertex*>& vertices() { return verts; }. };. """"""). cont = cppyy.gbl.vCont(). verts = cont.vertices(). for v in verts:. print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ). ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:. `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False . I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`. which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/pull/15235:162,energy efficiency,model,model,162,[ntuple] Extend documentation of `CreateFillContext`; Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15235:9,modifiability,Exten,Extend,9,[ntuple] Extend documentation of `CreateFillContext`; Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15235:80,safety,safe,safe,80,[ntuple] Extend documentation of `CreateFillContext`; Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15235:162,security,model,model,162,[ntuple] Extend documentation of `CreateFillContext`; Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15235:16,usability,document,documentation,16,[ntuple] Extend documentation of `CreateFillContext`; Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15236:14,modifiability,pac,packages,14,Add Python ML packages in requirements; . This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:57,safety,test,testing,57,Add Python ML packages in requirements; . This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:57,testability,test,testing,57,Add Python ML packages in requirements; . This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:112,usability,tool,tools,112,Add Python ML packages in requirements; . This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15237:37,usability,learn,learn,37,[v628][CI] Add `xgboost` and `scikit-learn` to requirements; Backport of https://github.com/root-project/root/pull/15183.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15237
https://github.com/root-project/root/pull/15238:37,usability,learn,learn,37,[v630][CI] Add `xgboost` and `scikit-learn` to requirements; Backport of https://github.com/root-project/root/pull/15183.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15238
https://github.com/root-project/root/pull/15239:169,availability,cluster,cluster,169,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:169,deployability,cluster,cluster,169,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:177,deployability,automat,automatically,177,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:322,integrability,interfac,interface,322,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:322,interoperability,interfac,interface,322,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:322,modifiability,interfac,interface,322,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:361,performance,time,time,361,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:449,performance,parallel,parallel,449,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:524,performance,synch,synchronize,524,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:536,security,access,access,536,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:177,testability,automat,automatically,177,"[ntuple] Add FillNoCommit method and RNTupleFillStatus; This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15242:63,deployability,instal,installed,63,"[cmake] provide custom include path to bsd/stdlib.h; If libbsd installed in custom location,. custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:147,modifiability,variab,variable,147,"[cmake] provide custom include path to bsd/stdlib.h; If libbsd installed in custom location,. custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:16,usability,custom,custom,16,"[cmake] provide custom include path to bsd/stdlib.h; If libbsd installed in custom location,. custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:76,usability,custom,custom,76,"[cmake] provide custom include path to bsd/stdlib.h; If libbsd installed in custom location,. custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:94,usability,custom,custom,94,"[cmake] provide custom include path to bsd/stdlib.h; If libbsd installed in custom location,. custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15243:291,availability,cluster,cluster,291,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:291,deployability,cluster,cluster,291,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:42,energy efficiency,optim,optimization,42,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:129,energy efficiency,optim,optimization,129,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:152,energy efficiency,model,models,152,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:42,performance,optimiz,optimization,42,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:80,performance,memor,memory,80,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:129,performance,optimiz,optimization,129,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:152,security,model,models,152,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15243:80,usability,memor,memory,80,"[ntuple] Add option to turn off tail page optimization; It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15244:220,deployability,configurat,configuration,220,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:251,deployability,build,build,251,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:220,integrability,configur,configuration,220,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:187,interoperability,specif,specify,187,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:220,modifiability,configur,configuration,220,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:220,security,configur,configuration,220,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:36,usability,effectiv,effectively,36,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:165,usability,User,Users,165,"Delete `net/netx` directory; It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15245:247,deployability,updat,updated,247,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:503,deployability,updat,updated,503,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:316,interoperability,share,share,316,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:247,safety,updat,updated,247,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:473,safety,test,tested,473,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:503,safety,updat,updated,503,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:247,security,updat,updated,247,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:503,security,updat,updated,503,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:473,testability,test,tested,473,"Add Jupyter kernels for C++20 and C++2b (Nb: C++2b is a working draft of C++23); ## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15246:31,energy efficiency,model,model,31,"[ntuple] Tweak TFile ownership model for reading; After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:197,integrability,sub,subclass,197,"[ntuple] Tweak TFile ownership model for reading; After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:210,integrability,wrap,wrapped,210,"[ntuple] Tweak TFile ownership model for reading; After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:31,security,model,model,31,"[ntuple] Tweak TFile ownership model for reading; After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15247:48,integrability,interfac,interface,48,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:92,integrability,interfac,interface,92,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:192,integrability,interfac,interface,192,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:48,interoperability,interfac,interface,48,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:92,interoperability,interfac,interface,92,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:192,interoperability,interfac,interface,192,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:48,modifiability,interfac,interface,48,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:92,modifiability,interfac,interface,92,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:192,modifiability,interfac,interface,192,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:136,reliability,doe,doesn,136,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:257,safety,test,tested,257,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:257,testability,test,tested,257,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:428,usability,Close,Closes,428,"[RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15248:90,modifiability,variab,variable,90,"[cmake] provide custom path to bsd/stdlib.h (#15242) [6.32]; Introduce `LIBBSDROOT` cmake variable with path to main directory, where include and library can be found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15248
https://github.com/root-project/root/pull/15248:16,usability,custom,custom,16,"[cmake] provide custom path to bsd/stdlib.h (#15242) [6.32]; Introduce `LIBBSDROOT` cmake variable with path to main directory, where include and library can be found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15248
https://github.com/root-project/root/pull/15249:283,availability,slo,slowdown,283,[ntuple] Improve handling of large numbers of fields; Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15249
https://github.com/root-project/root/pull/15249:283,reliability,slo,slowdown,283,[ntuple] Improve handling of large numbers of fields; Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15249
https://github.com/root-project/root/pull/15249:154,safety,test,tests,154,[ntuple] Improve handling of large numbers of fields; Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15249
https://github.com/root-project/root/pull/15249:154,testability,test,tests,154,[ntuple] Improve handling of large numbers of fields; Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15249
https://github.com/root-project/root/pull/15251:117,deployability,modul,module,117,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:335,deployability,version,version,335,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:220,integrability,configur,configure,220,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:335,integrability,version,version,335,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:117,modifiability,modul,module,117,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:220,modifiability,configur,configure,220,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:335,modifiability,version,version,335,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:117,safety,modul,module,117,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:220,security,configur,configure,220,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:152,usability,custom,custom,152,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/pull/15251:230,usability,custom,custom,230,"[http] improve tutorials; 1. Do not use `Form` . 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`. 3. Use JS module in `httptextlog.C` demo for custom class. 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro. 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/issues/15252:1583,availability,state,stated,1583,"wBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2916,availability,Operat,Operating,2916,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:206,deployability,version,version,206,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:916,deployability,contain,contains,916,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1494,deployability,version,version,1494,"tation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2857,deployability,version,version,2857,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2885,deployability,Instal,Installation,2885,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:206,integrability,version,version,206,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1494,integrability,version,version,1494,"tation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1583,integrability,state,stated,1583,"wBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1851,integrability,pub,published,1851,"literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2857,integrability,version,version,2857,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:206,modifiability,version,version,206,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1494,modifiability,version,version,1494,"tation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2468,modifiability,exten,extend,2468,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2839,modifiability,pac,package,2839,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2857,modifiability,version,version,2857,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2072,performance,perform,performance,2072,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:376,reliability,doe,does,376,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1382,reliability,doe,does,1382," match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and wheth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1422,reliability,doe,does,1422,"e between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1480,testability,context,context,1480,"e code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the docum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2961,testability,context,context,2961,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:28,usability,document,documentation,28,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:491,usability,document,documentation,491,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:700,usability,document,documentation,700,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:718,usability,user,user,718,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:723,usability,guid,guide,723,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:889,usability,user,user,889,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:894,usability,guid,guide,894,"[RF] Missing and misleading documentation in RooBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1040,usability,document,documentation,1040,"oBarlowBeestonLL.cxx; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1065,usability,user,user,1065,"; ### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1070,usability,guid,guide,1070,"Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1513,usability,document,documentation,1513,"ps://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solutio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2072,usability,perform,performance,2072,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2479,usability,document,documentation,2479,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15253:709,availability,Operat,Operating,709,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:471,deployability,Build,Build,471,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:610,deployability,version,version,610,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:656,deployability,patch,patches,656,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:671,deployability,Instal,Installation,671,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:380,integrability,event,event-project,380,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:610,integrability,version,version,610,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:4,interoperability,standard,standard,4,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:172,interoperability,standard,standard,172,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:423,interoperability,standard,standard,423,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:489,interoperability,specif,specific,489,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:591,interoperability,standard,standard,591,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:610,modifiability,version,version,610,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:394,reliability,doe,does,394,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:656,safety,patch,patches,656,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:656,security,patch,patches,656,"C++ standard not propagated via CMake anymore; ### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/pull/15254:310,deployability,patch,patches,310,"[cmake] Add back `cxx_std_` compile feature; Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15254
https://github.com/root-project/root/pull/15254:194,interoperability,standard,standard,194,"[cmake] Add back `cxx_std_` compile feature; Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15254
https://github.com/root-project/root/pull/15254:310,safety,patch,patches,310,"[cmake] Add back `cxx_std_` compile feature; Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15254
https://github.com/root-project/root/pull/15254:310,security,patch,patches,310,"[cmake] Add back `cxx_std_` compile feature; Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15254
https://github.com/root-project/root/pull/15256:137,availability,error,error,137,"[gpad] Remove variable redeclaration; The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15256:14,modifiability,variab,variable,14,"[gpad] Remove variable redeclaration; The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15256:137,performance,error,error,137,"[gpad] Remove variable redeclaration; The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15256:137,safety,error,error,137,"[gpad] Remove variable redeclaration; The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15256:137,usability,error,error,137,"[gpad] Remove variable redeclaration; The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15257:238,energy efficiency,schedul,scheduling,238,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:295,energy efficiency,optim,optimize,295,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:407,integrability,buffer,buffered,407,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:130,modifiability,layer,layer,130,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:28,performance,cach,cache,28,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:124,performance,cach,cache,124,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:234,performance,I/O,I/O,234,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:238,performance,schedul,scheduling,238,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:295,performance,optimiz,optimize,295,"[ntuple] Don't use RRawFile cache for page reads; The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15259:200,interoperability,standard,standard,200,"[cmake] Add back cxx_std_ compile feature [v6.32]; Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253. (cherry picked from commit 9e67151fac9c9d61692375c27604370451b7148b; backport of https://github.com/root-project/root/pull/15254)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15259
https://github.com/root-project/root/pull/15260:54,integrability,interfac,interface,54,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:98,integrability,interfac,interface,98,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:198,integrability,interfac,interface,198,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:54,interoperability,interfac,interface,54,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:98,interoperability,interfac,interface,98,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:198,interoperability,interfac,interface,198,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:54,modifiability,interfac,interface,54,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:98,modifiability,interfac,interface,98,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:198,modifiability,interfac,interface,198,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:142,reliability,doe,doesn,142,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:263,safety,test,tested,263,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:263,testability,test,tested,263,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:434,usability,Close,Closes,434,"[v632][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15261:54,integrability,interfac,interface,54,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:98,integrability,interfac,interface,98,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:198,integrability,interfac,interface,198,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:54,interoperability,interfac,interface,54,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:98,interoperability,interfac,interface,98,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:198,interoperability,interfac,interface,198,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:54,modifiability,interfac,interface,54,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:98,modifiability,interfac,interface,98,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:198,modifiability,interfac,interface,198,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:142,reliability,doe,doesn,142,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:263,safety,test,tested,263,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:263,testability,test,tested,263,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:434,usability,Close,Closes,434,"[v630][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15262:54,integrability,interfac,interface,54,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:98,integrability,interfac,interface,98,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:198,integrability,interfac,interface,198,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:54,interoperability,interfac,interface,54,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:98,interoperability,interfac,interface,98,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:198,interoperability,interfac,interface,198,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:54,modifiability,interfac,interface,54,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:98,modifiability,interfac,interface,98,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:198,modifiability,interfac,interface,198,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:142,reliability,doe,doesn,142,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:263,safety,test,tested,263,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:263,testability,test,tested,263,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:434,usability,Close,Closes,434,"[v628][RF] Comment out `ryml` backend for RooFit JSON interface; The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/issues/15263:208,availability,avail,available,208,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1303,availability,error,error,1303,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1695,availability,Operat,Operating,1695,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:13,deployability,fail,fails,13,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:160,deployability,fail,fails,160,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:223,deployability,contain,contains,223,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1634,deployability,version,version,1634,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1657,deployability,Instal,Installation,1657,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:575,integrability,pub,public,575,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:624,integrability,pub,public,624,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:705,integrability,pub,public,705,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1634,integrability,version,version,1634,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:258,interoperability,Specif,Specifying,258,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1634,modifiability,version,version,1634,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:419,performance,memor,memory,419,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1303,performance,error,error,1303,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1888,performance,time,time,1888,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:2061,performance,time,time,2061,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:13,reliability,fail,fails,13,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:160,reliability,fail,fails,160,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:208,reliability,availab,available,208,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:208,safety,avail,available,208,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1303,safety,error,error,1303,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:208,security,availab,available,208,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1735,testability,context,context,1735,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:419,usability,memor,memory,419,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:566,usability,Help,Helper,566,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:613,usability,Help,Helper,613,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:714,usability,Help,Helper,714,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:770,usability,Help,Helper,770,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:783,usability,Help,Helper,783,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:804,usability,Help,Helper,804,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:811,usability,Help,Helper,811,"RDF `Book()` fails to compile with ambiguous calls in `Exec` with zero arguments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1151,usability,Help,Helper,1151,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1214,usability,Help,Helper,1214,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1303,usability,error,error,1303,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1811,usability,Help,Helper,1811,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:2002,usability,support,support,2002,"uments; ### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++. #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {. template <typename... A>. void Fill(A... a) {}. template <typename... A>. void Fill(typename A::type... a) {}. };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {. public:. using Result_t = Result;. private:. std::shared_ptr<Result_t> fResult;. public:. Helper() {. fResult = std::make_shared<Result_t>();. }. Helper(const Helper &) = delete;. Helper(Helper &&) = default;. std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. template <typename... ColumnTypes>. void Exec(unsigned int, ColumnTypes... values) {. fResult->Fill(values...);. }. void Finalize() {}. std::string GetActionName() const { return ""Helper""; }. };. int main() {. ROOT::RDataFrame df(1);. df.Book(Helper{}, {""rdfentry_""});. return 0;. }. ```. gives with GCC 8.5.0:. ```. book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous. fResult->Fill(values...);. ^~~~~~~. book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’. void Fill(A... a) {}. ^~~~. book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’. void Fill(typename A::type... a) {}. ^~~~. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/pull/15264:0,energy efficiency,Reduc,Reduce,0,Reduce the memory footprint of the computation graph; Move the actual creation of an RDefineReader and the relative string representing its column name to a centralized register in the RLoopManager. The RColumnRegister only holds references to that. Fixes #14510,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:11,performance,memor,memory,11,Reduce the memory footprint of the computation graph; Move the actual creation of an RDefineReader and the relative string representing its column name to a centralized register in the RLoopManager. The RColumnRegister only holds references to that. Fixes #14510,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:11,usability,memor,memory,11,Reduce the memory footprint of the computation graph; Move the actual creation of an RDefineReader and the relative string representing its column name to a centralized register in the RLoopManager. The RColumnRegister only holds references to that. Fixes #14510,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15266:393,energy efficiency,reduc,reduce,393,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:486,energy efficiency,reduc,reduction,486,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:33,modifiability,variab,variables,33,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:128,modifiability,variab,variables,128,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:223,usability,help,helps,223,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:370,usability,help,helps,370,"[RF] Remove warning about unused variables in `RooFormula`; After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in. `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/issues/15267:1369,availability,Operat,Operating,1369,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:3,deployability,modul,modulemap,3,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:158,deployability,build,building,158,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:218,deployability,modul,modulemap,218,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:411,deployability,build,build,411,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:661,deployability,modul,modulemap,661,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:900,deployability,modul,modulemap,900,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:943,deployability,modul,modulemap,943,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1090,deployability,modul,modulemap,1090,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1107,deployability,build,build,1107,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1207,deployability,build,build,1207,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1240,deployability,version,version,1240,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1325,deployability,Instal,Installation,1325,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1346,deployability,build,build,1346,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:577,energy efficiency,core,core,577,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1240,integrability,version,version,1240,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:3,modifiability,modul,modulemap,3,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:218,modifiability,modul,modulemap,218,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:661,modifiability,modul,modulemap,661,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:900,modifiability,modul,modulemap,900,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:943,modifiability,modul,modulemap,943,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1090,modifiability,modul,modulemap,1090,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1240,modifiability,version,version,1240,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1283,modifiability,concern,concerns,1283,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:3,safety,modul,modulemap,3,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:218,safety,modul,modulemap,218,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:661,safety,modul,modulemap,661,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:900,safety,modul,modulemap,900,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:943,safety,modul,modulemap,943,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1090,safety,modul,modulemap,1090,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1122,safety,prevent,prevent,1122,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:478,security,access,accessible,478,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1122,security,preven,prevent,1122,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1283,testability,concern,concerns,1283,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1427,testability,context,context,1427,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:62,usability,support,support,62,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:193,usability,support,support,193,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:359,usability,user,user,359,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:738,usability,support,support,738,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:1006,usability,support,support,1006,"vc.modulemap created (and registered) when ROOT built without support for Vc; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:. 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue. 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15269:1220,availability,Operat,Operating,1220,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:1090,deployability,version,version,1090,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:1116,deployability,Instal,Installation,1116,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:1090,integrability,version,version,1090,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:1090,modifiability,version,version,1090,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:1265,testability,context,context,1265,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:179,usability,behavi,behaviour,179,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:304,usability,behavi,behaviour,304,"Iterators in pyROOT working differently in ROOT master compared to 6.30/02; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>. >>> ROOT.gROOT.GetVersion(). '6.30/02'. ```. Same code in ROOT master:. ```. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class 'cppyy.LowLevelView'>. >>> ROOT.gROOT.GetVersion(). '6.33/01'. ```. Is it known why the iteration functionality is different? ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15270:385,availability,Operat,Operating,385,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:27,deployability,fail,fails,27,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:330,deployability,version,version,330,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:355,deployability,Instal,Installation,355,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:330,integrability,version,version,330,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:330,modifiability,version,version,330,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:27,reliability,fail,fails,27,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/issues/15270:423,testability,context,context,423,MakeClass and MakeSelector fails with special character in branchname.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/pull/15272:1600,availability,error,errors,1600,"r/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2605,availability,Error,Error,2605,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2690,availability,error,error,2690,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:123,deployability,instal,install,123,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:135,deployability,depend,dependencies,135,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:187,deployability,instal,install,187,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:309,deployability,observ,observed,309,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:448,deployability,configurat,configuration,448,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:546,deployability,depend,dependencies,546,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:559,deployability,instal,installed,559,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:735,deployability,API,API,735,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1295,deployability,depend,dependency,1295," This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1327,deployability,depend,dependency,1327,"and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1387,deployability,depend,dependency,1387,"ions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2083,deployability,depend,dependency,2083,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2115,deployability,depend,dependency,2115,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2175,deployability,depend,dependency,2175,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2335,deployability,depend,dependencies,2335,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2645,deployability,modul,modules,2645,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:135,integrability,depend,dependencies,135,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:448,integrability,configur,configuration,448,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:546,integrability,depend,dependencies,546,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:735,integrability,API,API,735,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1295,integrability,depend,dependency,1295," This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1327,integrability,depend,dependency,1327,"and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1387,integrability,depend,dependency,1387,"ions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2083,integrability,depend,dependency,2083,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2115,integrability,depend,dependency,2115,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2175,integrability,depend,dependency,2175,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2335,integrability,depend,dependencies,2335,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2679,integrability,messag,message,2679,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:619,interoperability,bind,bindings,619,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:735,interoperability,API,API,735,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1398,interoperability,distribut,distributed,1398,"s fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2186,interoperability,distribut,distributed,2186,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2369,interoperability,distribut,distribution,2369,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2446,interoperability,distribut,distribution,2446,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2536,interoperability,distribut,distribution,2536,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2679,interoperability,messag,message,2679,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:135,modifiability,depend,dependencies,135,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:448,modifiability,configur,configuration,448,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:546,modifiability,depend,dependencies,546,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:619,modifiability,bind,bindings,619,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1295,modifiability,depend,dependency,1295," This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1327,modifiability,depend,dependency,1327,"and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1387,modifiability,depend,dependency,1387,"ions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2083,modifiability,depend,dependency,2083,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2115,modifiability,depend,dependency,2115,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2175,modifiability,depend,dependency,2175,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2335,modifiability,depend,dependencies,2335,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2645,modifiability,modul,modules,2645,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1600,performance,error,errors,1600,"r/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2605,performance,Error,Error,2605,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2690,performance,error,error,2690,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:52,safety,test,test,52,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:63,safety,test,test,63,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:135,safety,depend,dependencies,135,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:360,safety,test,test,360,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:497,safety,test,test,497,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:546,safety,depend,dependencies,546,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:650,safety,test,test,650,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1295,safety,depend,dependency,1295," This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1327,safety,depend,dependency,1327,"and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1387,safety,depend,dependency,1387,"ions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1527,safety,test,test,1527,"ronment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1600,safety,error,errors,1600,"r/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2083,safety,depend,dependency,2083,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2115,safety,depend,dependency,2115,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2175,safety,depend,dependency,2175,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2335,safety,depend,dependencies,2335,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2605,safety,Error,Error,2605,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2645,safety,modul,modules,2645,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2690,safety,error,error,2690,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:448,security,configur,configuration,448,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:52,testability,test,test,52,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:63,testability,test,test,63,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:135,testability,depend,dependencies,135,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:309,testability,observ,observed,309,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:360,testability,test,test,360,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:497,testability,test,test,497,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:546,testability,depend,dependencies,546,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:650,testability,test,test,650,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1295,testability,depend,dependency,1295," This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1327,testability,depend,dependency,1327,"and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1387,testability,depend,dependency,1387,"ions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1527,testability,test,test,1527,"ronment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2083,testability,depend,dependency,2083,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2115,testability,depend,dependency,2115,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2175,testability,depend,dependency,2175,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2335,testability,depend,dependencies,2335,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:893,usability,learn,learn,893,"[PyROOT] Remove broken `pyroot_dependency_versions` test; This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:. ```. pip install -r requirements.txt. ```. it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux. Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:. ```. /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1600,usability,error,errors,1600,"r/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1681,usability,learn,learn,1681,"recationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (messa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2605,usability,Error,Error,2605,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2690,usability,error,error,2690,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html. import pkg_resources. Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". . ----------------------------------------------------------------------. Ran 1 test in 0.149s. OK. ```. And here is the output with ctest:. ```. AILED (errors=1). Attempting requirement 'numpy>=1.4.1'. Attempting requirement 'scikit-learn'. Attempting requirement 'xgboost'. Attempting requirement 'tensorflow'. Attempting requirement 'torch'. Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'. Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'. Attempting requirement 'cffi>=1.9.1'. Attempting requirement 'notebook>=4.4.1'. Attempting requirement 'metakernel>=0.20.0'. Ignore dependency pyspark>=2.4. Ignore dependency dask>=2022.08.1; python_version >= ""3.8"". Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt. Details about not matched dependencies:. - The 'tensorflow' distribution was not found and is required by the application. - The 'torch' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15274:182,availability,error,error,182,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:213,availability,Error,Error,213,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:373,deployability,updat,updated,373,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:188,integrability,messag,messages,188,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:188,interoperability,messag,messages,188,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:182,performance,error,error,182,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:213,performance,Error,Error,213,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:182,safety,error,error,182,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:213,safety,Error,Error,213,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:343,safety,test,tested,343,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:373,safety,updat,updated,373,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:373,security,updat,updated,373,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:343,testability,test,tested,343,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:182,usability,error,error,182,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:213,usability,Error,Error,213,"[tree] Warn about too long TTreeFormula and double limit; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15275:25,deployability,version,version,25,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:25,integrability,version,version,25,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:25,modifiability,version,version,25,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:156,security,team,team,156,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:15,usability,support,supported,15,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:58,usability,support,support,58,[TMVA] Enforce supported version of TensorFlow; We do not support Tensorflow >2.15 since Keras 3.x brings several breaking changes https://github.com/keras-team/keras/issues/18467,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15277:28,availability,operat,operations,28,[skip-CI][doc] Improve RVec operations documentation; Fixes [ROOT-10865](https://its.cern.ch/jira/browse/ROOT-10865),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15277
https://github.com/root-project/root/pull/15277:39,usability,document,documentation,39,[skip-CI][doc] Improve RVec operations documentation; Fixes [ROOT-10865](https://its.cern.ch/jira/browse/ROOT-10865),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15277
https://github.com/root-project/root/pull/15278:38,safety,test,tests,38,[TMVA] Correctly link `blas` in PyMVA tests; BLAS should be linked like in the main TMVA library:. https://github.com/root-project/root/blob/master/tmva/tmva/CMakeLists.txt#L420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15278
https://github.com/root-project/root/pull/15278:38,testability,test,tests,38,[TMVA] Correctly link `blas` in PyMVA tests; BLAS should be linked like in the main TMVA library:. https://github.com/root-project/root/blob/master/tmva/tmva/CMakeLists.txt#L420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15278
https://github.com/root-project/root/pull/15279:292,deployability,updat,updated,292,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:194,energy efficiency,current,currently,194,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:262,safety,test,tested,262,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:292,safety,updat,updated,292,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:292,security,updat,updated,292,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:152,testability,context,context,152,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:262,testability,test,tested,262,"[ntuple] Add `Internal::MergeModels`; The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15280:195,deployability,updat,updated,195,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:34,integrability,buffer,buffer,34,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:7,safety,Prevent,Prevent,7,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:165,safety,test,tested,165,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:195,safety,updat,updated,195,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:7,security,Preven,Prevent,7,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:23,security,access,access,23,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:195,security,updat,updated,195,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:165,testability,test,tested,165,[tree] Prevent garbage access and buffer overflow; Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15281:78,safety,test,testing,78,[v630][TMVA] Backport some fixes for CI; Backport some PRs related to TMVA CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15258. * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15281
https://github.com/root-project/root/pull/15281:78,testability,test,testing,78,[v630][TMVA] Backport some fixes for CI; Backport some PRs related to TMVA CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15258. * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15281
https://github.com/root-project/root/pull/15282:78,safety,test,testing,78,[v632][TMVA] Backport some fixes for CI; Backport some PRs related to TMVA CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15258. * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15282
https://github.com/root-project/root/pull/15282:78,testability,test,testing,78,[v632][TMVA] Backport some fixes for CI; Backport some PRs related to TMVA CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15258. * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15282
https://github.com/root-project/root/pull/15283:13,availability,error,error,13,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:217,deployability,updat,updated,217,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:13,performance,error,error,13,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:13,safety,error,error,13,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:187,safety,test,tested,187,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:217,safety,updat,updated,217,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:51,security,access,access,51,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:217,security,updat,updated,217,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:187,testability,test,tested,187,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:13,usability,error,error,13,[tree] raise error instead of crash when trying to access null GetTree; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15284:118,energy efficiency,alloc,allocation,118,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:6,performance,memor,memory,6,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:111,performance,memor,memory,111,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:0,safety,avoid,avoid,0,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:98,safety,avoid,avoids,98,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:6,usability,memor,memory,6,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/pull/15284:111,usability,memor,memory,111,avoid memory copy in TDecompChol::TDecompChol; # This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/issues/15285:609,availability,slo,slower,609,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1357,availability,Operat,Operating,1357,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1288,deployability,version,version,1288,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1313,deployability,Instal,Installation,1313,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1334,deployability,build,build,1334,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1066,energy efficiency,current,currently,1066,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1219,integrability,interfac,interface,1219,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1288,integrability,version,version,1288,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1219,interoperability,interfac,interface,1219,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:912,modifiability,layer,layers,912,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1219,modifiability,interfac,interface,1219,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1288,modifiability,version,version,1288,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:237,performance,time,time,237,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:256,performance,bottleneck,bottleneck,256,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:609,reliability,slo,slower,609,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:928,safety,sanit,sanity,928,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1213,safety,safe,safer,1213,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:719,security,access,access,719,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:928,security,sanit,sanity,928,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1397,testability,context,context,1397,"Fast element setter/getter for TMatrixT/TVectorT classes; ### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```. TMatrixDSym d(100);. for ( int i=0; i< 100; i++) d(i,i)=i;. ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of . ```. d.GetMatrixArray()[i*100+i] = i;. ```. via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)? ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/pull/15286:299,deployability,manag,management,299,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:375,deployability,manag,managed,375,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:514,deployability,instal,installed,514,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:299,energy efficiency,manag,management,299,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:375,energy efficiency,manag,managed,375,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:181,modifiability,pac,packages,181,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:501,modifiability,pac,packages,501,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:32,safety,test,test,32,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:42,safety,test,test,42,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:111,safety,test,test,111,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:299,safety,manag,management,299,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:375,safety,manag,managed,375,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:475,safety,safe,safely,475,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:32,testability,test,test,32,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:42,testability,test,test,42,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:111,testability,test,test,111,"[PyROOT] Remove now unnecessary test; The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15287:45,modifiability,Deco,Decompose,45,remove repeatative divisions in TDecompChol::Decompose; # This Pull request:. ## Changes or fixes:. Replace repeated divisions by multiplications of 1/x.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15287
https://github.com/root-project/root/pull/15288:88,modifiability,pac,packages,88,"[v626][tutorials] When pymva is not there exclude tutorials based on external Python ML packages; Backport of https://github.com/root-project/root/pull/15276, plus additional fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15289:67,safety,test,testing,67,[v628] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15275. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15289
https://github.com/root-project/root/pull/15289:67,testability,test,testing,67,[v628] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/15278. * https://github.com/root-project/root/pull/15276. * https://github.com/root-project/root/pull/15275. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15289
https://github.com/root-project/root/pull/15290:7,safety,Avoid,Avoid,7,"[TMVA] Avoid torch-cppyy symbol clashing problem in tmva tutorials; Apply the same fix as in a561a9fe09, but for PyTorch. Needs to be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15290
https://github.com/root-project/root/pull/15291:67,safety,test,testing,67,[v630] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15291
https://github.com/root-project/root/pull/15291:67,testability,test,testing,67,[v630] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15291
https://github.com/root-project/root/pull/15292:67,safety,test,testing,67,[v632] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15292
https://github.com/root-project/root/pull/15292:67,testability,test,testing,67,[v632] Backport some fixes for CI; Backport some PRs related to CI testing:. * https://github.com/root-project/root/pull/14685. * https://github.com/root-project/root/pull/15286. * https://github.com/root-project/root/pull/15290.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15292
https://github.com/root-project/root/pull/15294:76,interoperability,compatib,compatible,76,"requirements.txt: Skip tensorflow with Python 3.12; Only TensorFlow 2.16 is compatible with Python 3.12, but not with ROOT (see commit e30dc626a6).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15294
https://github.com/root-project/root/pull/15295:288,availability,failur,failures,288,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:288,deployability,fail,failures,288,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:280,energy efficiency,current,current,280,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:215,modifiability,variab,variables,215,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:288,performance,failur,failures,288,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:288,reliability,fail,failures,288,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:43,safety,detect,detection,43,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:43,security,detect,detection,43,[tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15296:303,availability,failur,failures,303,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:303,deployability,fail,failures,303,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:295,energy efficiency,current,current,295,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:230,modifiability,variab,variables,230,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:303,performance,failur,failures,303,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:303,reliability,fail,failures,303,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:58,safety,detect,detection,58,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:58,security,detect,detection,58,[skip-ci][v628][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15297:303,availability,failur,failures,303,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:303,deployability,fail,failures,303,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:295,energy efficiency,current,current,295,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:230,modifiability,variab,variables,230,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:303,performance,failur,failures,303,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:303,reliability,fail,failures,303,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:58,safety,detect,detection,58,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:58,security,detect,detection,58,[skip-ci][v630][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15298:294,availability,failur,failures,294,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:294,deployability,fail,failures,294,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:286,energy efficiency,current,current,286,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:221,modifiability,variab,variables,221,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:294,performance,failur,failures,294,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:294,reliability,fail,failures,294,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:49,safety,detect,detection,49,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:49,security,detect,detection,49,[v632][tutorials] Fix `tensorflow` and `pytorch` detection in TMVA tutorial; This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15299:65,deployability,patch,patch,65,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:71,deployability,releas,release,71,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:94,deployability,patch,patch,94,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:100,deployability,releas,release,100,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:262,deployability,version,version,262,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:649,deployability,patch,patch,649,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:655,deployability,releas,release,655,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:262,integrability,version,version,262,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:331,integrability,discover,discovery,331,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:331,interoperability,discover,discovery,331,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:400,interoperability,compatib,compatibility,400,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:262,modifiability,version,version,262,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:65,safety,patch,patch,65,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:94,safety,patch,patch,94,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:649,safety,patch,patch,649,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:65,security,patch,patch,65,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:94,security,patch,patch,94,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:649,security,patch,patch,649,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:331,usability,discov,discovery,331,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:632,usability,feedback,feedback,632,"[v630][RF] Remove `RooExpPoly` and `RooPower` from the next 6.30 patch release; The next 6.30 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and is. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15300:10880,deployability,continu,continues,10880,treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15941,deployability,continu,continues,15941,treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17534,deployability,updat,updated,17534,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:3021,energy efficiency,core,core,3021,eadStores]. 1: Value stored to 'numberOfVarDim' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2026. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2436:28: warning: Value stored to 'foundAtSign' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'foundAtSign' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2436. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2448:16: warning: Value stored to 'foundAtSign' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'foundAtSign' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2448. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2562:16: warning: Value stored to 'foundAtSign' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'foundAtSign' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2562. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4045:53: warning: Division by zero [clang-analyzer-core.DivideZero]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Initializing to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4012. 5: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 7: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 9: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 11: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:5052,energy efficiency,core,core,5052,condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 13: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 15: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 17: Control jumps to 'case kModulo:' at line 4042 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 18: The value -1 is assigned to 'pos' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4042. 19: 'int2' initialized to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4044. 20: Division by zero in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4045. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079:49: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:6954,energy efficiency,core,core,6954,ree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kstrstr:' at line 4079 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: The value -2 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. 18: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:8762,energy efficiency,core,core,8762,/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10472,energy efficiency,core,core,10472,t/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10643,energy efficiency,core,core,10643,r' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10832,energy efficiency,core,core,10832,tion' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:12012,energy efficiency,core,core,12012,reeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:13823,energy efficiency,core,core,13823,eeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15533,energy efficiency,core,core,15533,t/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15704,energy efficiency,core,core,15704,r' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15893,energy efficiency,core,core,15893,tion' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:107,integrability,coupl,couple,107,"[tree] Treeformula has many clang-tidy warnings; # This Pull request:. ## Changes or fixes:. This solves a couple, but not all of them. Maybe related: https://github.com/root-project/root/issues/14682. There are still:. ```. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2436:28: Value stored to 'foundAtSign' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: Value stored to 'last' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279:12: warning: Value stored to 'prevUseReferenceObject' during its initialization is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' during its initialization is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445:13: warning: Value stored to 'prevUseCollectionObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseCollectionObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446:13: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535:19: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909:25: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2026:7: warning: Value stored to 'numberOfVarDim' is never read [cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10338,integrability,sub,subform,10338,17. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15399,integrability,sub,subform,15399,17. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:107,modifiability,coupl,couple,107,"[tree] Treeformula has many clang-tidy warnings; # This Pull request:. ## Changes or fixes:. This solves a couple, but not all of them. Maybe related: https://github.com/root-project/root/issues/14682. There are still:. ```. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2436:28: Value stored to 'foundAtSign' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: Value stored to 'last' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279:12: warning: Value stored to 'prevUseReferenceObject' during its initialization is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' during its initialization is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445:13: warning: Value stored to 'prevUseCollectionObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseCollectionObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446:13: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535:19: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909:25: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2026:7: warning: Value stored to 'numberOfVarDim' is never read [cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17504,safety,test,tested,17504,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17534,safety,updat,updated,17534,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:4541,security,Control,Control,4541,eeplayer/src/TTreeFormula.cxx:4015. 7: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 9: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 11: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 13: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 15: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 17: Control jumps to 'case kModulo:' at line 4042 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 18: The value -1 is assigned to 'pos' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4042. 19: 'int2' initialized to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4044. 20: Division by zero in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4045. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079:49: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assumin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:6494,security,Control,Control,6494,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kstrstr:' at line 4079 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: The value -2 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. 18: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:8396,security,Control,Control,8396,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10213,security,Control,Control,10213,/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:11547,security,Control,Control,11547,/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:13454,security,Control,Control,13454,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15274,security,Control,Control,15274,/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:16608,security,Control,Control,16608,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17534,security,updat,updated,17534,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:107,testability,coupl,couple,107,"[tree] Treeformula has many clang-tidy warnings; # This Pull request:. ## Changes or fixes:. This solves a couple, but not all of them. Maybe related: https://github.com/root-project/root/issues/14682. There are still:. ```. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2436:28: Value stored to 'foundAtSign' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: Value stored to 'last' is never read. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279:12: warning: Value stored to 'prevUseReferenceObject' during its initialization is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' during its initialization is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1279. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445:13: warning: Value stored to 'prevUseCollectionObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseCollectionObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1445. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446:13: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1446. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535:19: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1535. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909:25: warning: Value stored to 'prevUseReferenceObject' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'prevUseReferenceObject' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:1909. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:2026:7: warning: Value stored to 'numberOfVarDim' is never read [cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:4541,testability,Control,Control,4541,eeplayer/src/TTreeFormula.cxx:4015. 7: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 9: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 11: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 13: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 15: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 17: Control jumps to 'case kModulo:' at line 4042 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 18: The value -1 is assigned to 'pos' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4042. 19: 'int2' initialized to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4044. 20: Division by zero in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4045. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079:49: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assumin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:6494,testability,Control,Control,6494,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kstrstr:' at line 4079 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: The value -2 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. 18: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4079. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:8396,testability,Control,Control,8396,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:10213,testability,Control,Control,10213,/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:11547,testability,Control,Control,11547,/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringEqual:' at line 4122 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4122. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:13454,testability,Control,Control,13454,reeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 16: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 17: 1st function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125:56: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3949. 2: Assuming field 'fNoper' is not equal to 1 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 3: Left side of '&&' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:3950. 4: Assuming 'stringStackArg' is null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 5: '?' condition is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:15274,testability,Control,Control,15274,/src/TTreeFormula.cxx:4015. 6: Assuming 'instance' is not equal to 0 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 7: Left side of '||' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4017. 8: Assuming 'willLoad' is false in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 9: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4018. 10: Assuming 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 11: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 12: Assuming 'newaction' is >= kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 13: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 14: Assuming 'newaction' is not equal to kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 15: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4227. 16: Control jumps to 'case kAliasString:' at line 4299 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4284. 17: Assuming 'subform' is non-null in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:16608,testability,Control,Control,16608,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17504,testability,test,tested,17504,. 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302. 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119. 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307. 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022. 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027. 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031. 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033. 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728. /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx. ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15301:5,deployability,Updat,Update,5,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:198,performance,content,content,198,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:5,safety,Updat,Update,5,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:5,security,Updat,Update,5,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:104,security,access,accessing,104,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:176,security,access,accessing,176,"[RF] Update xRooFit; This PR includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15302:136,deployability,version,version,136,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:218,deployability,instal,installed,218,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:255,deployability,version,versions,255,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:19,energy efficiency,cpu,cpu,19,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:83,energy efficiency,cpu,cpu,83,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
