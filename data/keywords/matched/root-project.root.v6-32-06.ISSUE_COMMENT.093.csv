id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/15196:229,availability,consist,consistent,229,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1083,availability,error,error,1083,". ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:201,deployability,version,versions,201,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:318,deployability,automat,automatically,318,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:400,energy efficiency,predict,predicted,400,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1184,energy efficiency,model,model,1184,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1762,energy efficiency,model,model,1762,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1907,energy efficiency,estimat,estimation,1907,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:201,integrability,version,versions,201,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:410,integrability,event,events,410,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1593,integrability,sub,subtracting,1593,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1745,integrability,compon,component,1745,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1745,interoperability,compon,component,1745,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:201,modifiability,version,versions,201,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:294,modifiability,exten,extendible,294,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:338,modifiability,exten,extended,338,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:526,modifiability,exten,extended,526,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:586,modifiability,Exten,Extended,586,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:950,modifiability,Exten,Extended,950,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1202,modifiability,inherit,inherits,1202,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1745,modifiability,compon,component,1745,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1083,performance,error,error,1083,". ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1345,performance,content,contents,1345,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1536,performance,content,content,1536,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:360,reliability,Poisson,Poisson,360,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1564,reliability,doe,does,1564,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:400,safety,predict,predicted,400,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:679,safety,test,test,679,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1083,safety,error,error,1083,". ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1513,safety,avoid,avoid,1513,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1184,security,model,model,1184,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1762,security,model,model,1762,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:318,testability,automat,automatically,318,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:679,testability,test,test,679,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:229,usability,consist,consistent,229,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:623,usability,behavi,behavior,623,"Hello! I see that your dataset has bins with negative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1043,usability,statu,status,1043,"egative weights. That's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions abo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1062,usability,MINIM,MINIMIZE,1062,"t's not a good start. ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1083,usability,error,error,1083,". ![plot](https://github.com/root-project/root/assets/6578603/f213df07-1c68-4453-9e6e-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1924,usability,close,close,1924,"-5f9cbb24787c). In newer ROOT versions, the Chi2 are more consistent with the likelihood fits. Meaning that if you have an extendible pdf, it will automatically do an extended fit (i.e., a Poisson term to constrain the number of predicted events is added). However, if you have weights this is not meaningful anymore. I guess you don't even want to do an extended fit in your case. You can explicitly pass `RooFit::Extended(false)` to get back the old behavior:. ```c++. using namespace RooFit;. TFile file{""test.root""};. auto workspace = file.Get<RooWorkspace>(""w_test"");. auto hist = static_cast<RooDataHist *>(workspace->data(""jpsi_ppbar_mass""));. auto x = workspace->var(""Jpsi_m_fitted"");. auto pdf = workspace->pdf(""model_Low"");. auto result = pdf->chi2FitTo(*hist, Save(), Extended(false));. result->Print();. ```. But your fit has also has a different problem (any status other than `MINIMIZE=0` means an error in Minuit). You use a [RooAddPdf](https://root.cern.ch/doc/master/classRooAddPdf.html) for the model. This class inherits from RooAbsPdf, and a pdf in RooFit is forced to be positive everywhere. Therefore, you can't fit the your data with the negative bin contents at all. You need to create a RooAbsReal-derived function, maybe a [RooRealSumFunc](https://root.cern.ch/doc/master/classRooRealSumFunc.html). Or maybe can you avoid the negative bin content all together? Where does it even come from, from subtracting a background? IN this case this is the wrong thing do do for statistical analysis. I would rather keep the background in the data and add a component to the model, maybe a fixed [RooHistPdf](https://root.cern.ch/doc/master/classRooHistPdf.html) for that part that exactly corresponds to the background estimation. I'll close this issue because it's not a bug in RooFit, or an improvement of feature request. If you have further questions about your RooFit analysis, please open a thread on the forum to follow up:. https://root-forum.cern.ch/c/roofit-and-roostats/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15197:0,usability,Close,Closed,0,Closed by: #15173.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/pull/15204:0,availability,Failur,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15204
https://github.com/root-project/root/pull/15204:0,deployability,Fail,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15204
https://github.com/root-project/root/pull/15204:0,performance,Failur,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15204
https://github.com/root-project/root/pull/15204:0,reliability,Fail,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15204
https://github.com/root-project/root/pull/15206:233,energy efficiency,current,current,233,"I guess that this backport should happen 'after' backporting this commit by @guitargeek ? https://github.com/root-project/root/commit/0992621c3e8cadc920b9b139fca87261ef11c93b or not at all if 6.32 is only deprecating? otherwise, the current BP status would be a hybrid of both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15206
https://github.com/root-project/root/pull/15206:244,usability,statu,status,244,"I guess that this backport should happen 'after' backporting this commit by @guitargeek ? https://github.com/root-project/root/commit/0992621c3e8cadc920b9b139fca87261ef11c93b or not at all if 6.32 is only deprecating? otherwise, the current BP status would be a hybrid of both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15206
https://github.com/root-project/root/pull/15206:70,safety,reme,remember,70,"Ah I'm sorry my bad, the option was only removed after 6.32! I didn't remember that anymore, so no backport necessary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15206
https://github.com/root-project/root/issues/15211:75,deployability,build,builds,75,My two cents is we should disable the tests (and stop using Jenkins for PR builds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:38,safety,test,tests,38,My two cents is we should disable the tests (and stop using Jenkins for PR builds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:38,testability,test,tests,38,My two cents is we should disable the tests (and stop using Jenkins for PR builds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:49,usability,stop,stop,49,My two cents is we should disable the tests (and stop using Jenkins for PR builds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:365,deployability,build,builds,365,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:520,deployability,instal,installed,520,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:530,deployability,version,version,530,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:546,deployability,depend,dependent,546,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,deployability,configurat,configuration,653,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:670,deployability,fail,fail,670,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:705,deployability,version,version,705,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:530,integrability,version,version,530,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:546,integrability,depend,dependent,546,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,integrability,configur,configuration,653,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:705,integrability,version,version,705,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:530,modifiability,version,version,530,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:546,modifiability,depend,dependent,546,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,modifiability,configur,configuration,653,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:705,modifiability,version,version,705,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:670,reliability,fail,fail,670,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:40,safety,test,tests,40,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:386,safety,except,except,386,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:461,safety,test,testing,461,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:546,safety,depend,dependent,546,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:653,security,configur,configuration,653,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:40,testability,test,tests,40,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:461,testability,test,testing,461,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:505,testability,simpl,simple,505,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:546,testability,depend,dependent,546,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:201,usability,user,user,201,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:324,usability,user,user,324,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:339,usability,stop,stop,339,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:505,usability,simpl,simple,505,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue? In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:446,availability,down,down,446,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:413,deployability,releas,release,413,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:342,integrability,pub,public,342,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:470,integrability,inject,inject,470,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:301,reliability,doe,does,301,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:470,security,inject,inject,470,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:157,usability,user,user,157,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:280,usability,user,user,280,"> Do you mean short term while we fix the issue or do you mean just ignore the issue? > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:340,deployability,instal,installed,340,"This is a again the same problem which appeared before, see https://github.com/root-project/root/pull/14716. The conflict between std::regexp and pytorch jit. . Either we can avoid using in pytorch or we somehow try to live with this issue hoping at some point it will be fixed in pytorch. We don't see in the new CI because pytorch is not installed in the ubuntu nodes. I will add it before retiring the old CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:113,interoperability,conflict,conflict,113,"This is a again the same problem which appeared before, see https://github.com/root-project/root/pull/14716. The conflict between std::regexp and pytorch jit. . Either we can avoid using in pytorch or we somehow try to live with this issue hoping at some point it will be fixed in pytorch. We don't see in the new CI because pytorch is not installed in the ubuntu nodes. I will add it before retiring the old CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:175,safety,avoid,avoid,175,"This is a again the same problem which appeared before, see https://github.com/root-project/root/pull/14716. The conflict between std::regexp and pytorch jit. . Either we can avoid using in pytorch or we somehow try to live with this issue hoping at some point it will be fixed in pytorch. We don't see in the new CI because pytorch is not installed in the ubuntu nodes. I will add it before retiring the old CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:207,interoperability,bind,bindings,207,"In cppyy, and we know for sure that that usage is problematic because we see the same problem with upstream cppyy:. https://github.com/wlav/cppyy/issues/227. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx#L61. So it's not only pytorch, but also xgboost. For the xgboost case, I could fix the crash by importing xgboost before ROOT. Maybe for pytorch that works too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:207,modifiability,bind,bindings,207,"In cppyy, and we know for sure that that usage is problematic because we see the same problem with upstream cppyy:. https://github.com/wlav/cppyy/issues/227. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx#L61. So it's not only pytorch, but also xgboost. For the xgboost case, I could fix the crash by importing xgboost before ROOT. Maybe for pytorch that works too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:63,deployability,updat,update,63,"By curiosity, did we notice the clash during the `CPPYY` merge/update process? If not in which other step did we see it (and/or miss seeing it when we should). I.e. I am asking in the context of improving our processes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:63,safety,updat,update,63,"By curiosity, did we notice the clash during the `CPPYY` merge/update process? If not in which other step did we see it (and/or miss seeing it when we should). I.e. I am asking in the context of improving our processes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:63,security,updat,update,63,"By curiosity, did we notice the clash during the `CPPYY` merge/update process? If not in which other step did we see it (and/or miss seeing it when we should). I.e. I am asking in the context of improving our processes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:184,testability,context,context,184,"By curiosity, did we notice the clash during the `CPPYY` merge/update process? If not in which other step did we see it (and/or miss seeing it when we should). I.e. I am asking in the context of improving our processes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:287,availability,failur,failures,287,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:43,deployability,upgrad,upgrade,43,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:287,deployability,fail,failures,287,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:340,deployability,upgrad,upgrade,340,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:102,energy efficiency,green,green,102,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:43,modifiability,upgrad,upgrade,43,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:340,modifiability,upgrad,upgrade,340,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:287,performance,failur,failures,287,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:287,reliability,fail,failures,287,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:65,safety,test,tests,65,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:174,safety,test,tests,174,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:183,safety,test,test,183,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:65,testability,test,tests,65,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:174,testability,test,tests,174,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:183,testability,test,test,183,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:. https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:26,availability,failur,failures,26,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:160,availability,failur,failure,160,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:254,availability,failur,failure,254,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:280,availability,servic,services,280,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:26,deployability,fail,failures,26,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:79,deployability,upgrad,upgrade,79,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:160,deployability,fail,failure,160,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:254,deployability,fail,failure,254,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:280,deployability,servic,services,280,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:280,integrability,servic,services,280,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:79,modifiability,upgrad,upgrade,79,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:280,modifiability,servic,services,280,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:26,performance,failur,failures,26,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:160,performance,failur,failure,160,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:254,performance,failur,failure,254,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:423,performance,time,time,423,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:26,reliability,fail,failures,26,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:160,reliability,fail,failure,160,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:254,reliability,fail,failure,254,"> Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? This is a problem in itself :(. From my record (it was nice to received failure report by emails, it seems we don't get that from the new CI), that this is the first failure: . https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/30970/console. I.e on the nightly of April 3rd, 2024 (9 days ago). But rather than time it might also be `-DCTEST_TEST_EXCLUDE_NONE=On` that uncovered it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:31,deployability,build,build,31,And indeed the Ubuntu node are build by default without the `-DCTEST_TEST_EXCLUDE_NONE=On`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:44,deployability,Continu,Continue,44,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:403,deployability,Updat,Update,403,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:428,deployability,configurat,configuration,428,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:458,deployability,instal,installed,458,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:491,deployability,continu,continue,491,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:371,energy efficiency,load,load,371,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:428,integrability,configur,configuration,428,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:310,interoperability,conflict,conflict,310,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:428,modifiability,configur,configuration,428,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:371,performance,load,load,371,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:580,reliability,doe,does,580,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:79,safety,test,tests,79,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:403,safety,Updat,Update,403,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:552,safety,test,test,552,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:403,security,Updat,Update,403,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:428,security,configur,configuration,428,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:6,testability,understand,understanding,6,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:79,testability,test,tests,79,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:552,testability,test,test,552,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:196,usability,support,support,196,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:500,usability,support,supporting,500,So my understanding is that we need to:. 1. Continue having the new CI run all tests :). 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works). 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:140,deployability,API,API,140,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:8,energy efficiency,reduc,reducing,8,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:133,integrability,pub,public,133,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:140,integrability,API,API,140,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:140,interoperability,API,API,140,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:299,interoperability,standard,standard,299,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:227,reliability,doe,doesn,227,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:393,security,control,control,393,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:393,testability,control,control,393,"I tried reducing the number of symbols that `libcppyy.so` exports using `-fvisibility=hidden`, combined with explicit exports of the public API functions. That works fine (is, after all, already done this way for Windows), but doesn't resolve the issue: the `regex` symbols remain. I found that the standard C++ headers force `__attribute__((__visibility__(""default"")))`, so there's no way to control this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:32,energy efficiency,Load,LoadLibrary,32,"If I replace `lib = ctypes.cdll.LoadLibrary(lib_path)` in `xgboost/core.py` with `lib = ctypes.CDLL(lib_path, 8)`, then that solves the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:67,energy efficiency,core,core,67,"If I replace `lib = ctypes.cdll.LoadLibrary(lib_path)` in `xgboost/core.py` with `lib = ctypes.CDLL(lib_path, 8)`, then that solves the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:32,performance,Load,LoadLibrary,32,"If I replace `lib = ctypes.cdll.LoadLibrary(lib_path)` in `xgboost/core.py` with `lib = ctypes.CDLL(lib_path, 8)`, then that solves the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15212:836,availability,avail,available,836,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:104,deployability,build,build-time,104,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:122,deployability,depend,dependencies,122,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:317,deployability,depend,dependencies,317,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:665,deployability,infrastructur,infrastructure,665,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:738,deployability,instal,install,738,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:787,deployability,contain,container,787,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:873,deployability,build,building,873,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:986,deployability,instal,installed,986,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1118,deployability,build,builds,1118,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1241,deployability,instal,install,1241,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:122,integrability,depend,dependencies,122,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:317,integrability,depend,dependencies,317,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:449,integrability,sub,subset,449,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:122,modifiability,depend,dependencies,122,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:164,modifiability,pac,packages,164,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:269,modifiability,pac,packages,269,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:317,modifiability,depend,dependencies,317,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:559,modifiability,pac,packages,559,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:805,modifiability,pac,packages,805,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:959,modifiability,pac,packages,959,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1255,modifiability,pac,packages,1255,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:110,performance,time,time,110,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:865,performance,time,time,865,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:83,reliability,doe,does,83,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:836,reliability,availab,available,836,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:122,safety,depend,dependencies,122,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:136,safety,except,except,136,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:244,safety,test,test,244,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:317,safety,depend,dependencies,317,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:346,safety,test,test,346,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:431,safety,test,testing,431,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:481,safety,test,tested,481,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:836,safety,avail,available,836,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:836,security,availab,available,836,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1223,security,team,team,1223,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:4,testability,unit,unittest,4,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:122,testability,depend,dependencies,122,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:207,testability,unit,unittest,207,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:244,testability,test,test,244,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:317,testability,depend,dependencies,317,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:346,testability,test,test,346,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:431,testability,test,testing,431,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:481,testability,test,tested,481,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1054,usability,close,close,1054,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:. 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197). 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image). 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:28,deployability,build,build-time,28,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:46,deployability,depend,dependencies,46,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:241,deployability,depend,dependencies,241,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:419,deployability,instal,installed,419,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:467,deployability,configurat,configuration,467,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:507,deployability,configurat,configuration,507,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:657,deployability,build,build,657,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:46,integrability,depend,dependencies,46,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:241,integrability,depend,dependencies,241,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:467,integrability,configur,configuration,467,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:507,integrability,configur,configuration,507,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:46,modifiability,depend,dependencies,46,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:197,modifiability,pac,packages,197,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:241,modifiability,depend,dependencies,241,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:467,modifiability,configur,configuration,467,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:507,modifiability,configur,configuration,507,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:571,modifiability,pac,package,571,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:34,performance,time,time,34,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:663,performance,time,time,663,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:7,reliability,doe,does,7,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:80,reliability,Doe,Does,80,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:46,safety,depend,dependencies,46,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:60,safety,except,except,60,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:172,safety,test,test,172,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:241,safety,depend,dependencies,241,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:270,safety,test,test,270,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:386,safety,test,test,386,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:454,safety,test,testing,454,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:467,security,configur,configuration,467,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:507,security,configur,configuration,507,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:46,testability,depend,dependencies,46,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:135,testability,unit,unittest,135,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:172,testability,test,test,172,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:241,testability,depend,dependencies,241,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:270,testability,test,test,270,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:386,testability,test,test,386,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:454,testability,test,testing,454,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement? > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time? i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:321,deployability,instal,installed,321,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:455,deployability,configurat,configuration,455,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:495,deployability,configurat,configuration,495,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:631,deployability,instal,installed,631,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:455,integrability,configur,configuration,455,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:495,integrability,configur,configuration,495,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:455,modifiability,configur,configuration,455,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:495,modifiability,configur,configuration,495,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:617,modifiability,pac,package,617,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:718,modifiability,pac,package,718,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:2,reliability,Doe,Does,2,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:288,safety,test,test,288,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:442,safety,test,testing,442,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:562,safety,test,testing,562,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:455,security,configur,configuration,455,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:495,security,configur,configuration,495,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:207,testability,unit,unittests,207,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:288,testability,test,test,288,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:442,testability,test,testing,442,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:562,testability,test,testing,562,"> Does it mean that they are optional requirement? Correct, always has been like this. > Humm ... but then they become non-optional requirement for developer. If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. > It also means that we can not test the case where they are not installed. In principle we can add a ""special"" CI image and run that as a separate github action. > and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise). What we are ""not testing"" is the situation `-Dpyroot=OFF` and no Python package being installed on the same machine... i.e. no need to even bother with Python. > i.e. those package are actually required . No, they are not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:424,availability,state,states,424,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:368,deployability,configurat,configuration,368,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:404,deployability,fail,fails,404,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:577,deployability,instal,installed,577,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:769,deployability,instal,installed,769,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:918,deployability,instal,installed,918,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1017,deployability,fail,fails,1017,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1098,deployability,fail,fails,1098,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:302,integrability,configur,configured,302,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:368,integrability,configur,configuration,368,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:424,integrability,state,states,424,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:560,integrability,compon,component,560,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:751,integrability,compon,component,751,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:560,interoperability,compon,component,560,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:751,interoperability,compon,component,751,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:302,modifiability,configur,configured,302,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:368,modifiability,configur,configuration,368,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:560,modifiability,compon,component,560,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:751,modifiability,compon,component,751,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:404,reliability,fail,fails,404,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1017,reliability,fail,fails,1017,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1082,reliability,doe,does,1082,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1098,reliability,fail,fails,1098,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:275,safety,test,test,275,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:660,safety,test,tests,660,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:710,safety,test,test,710,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:721,safety,compl,complains,721,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:969,safety,test,test,969,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:302,security,configur,configured,302,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:368,security,configur,configuration,368,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:721,security,compl,complains,721,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:50,testability,unit,unittests,50,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:275,testability,test,test,275,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:660,testability,test,tests,660,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:710,testability,test,test,710,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:969,testability,test,test,969,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:337,usability,user,user,337,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:415,usability,clear,clearly,415,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:523,usability,support,support,523,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:855,usability,support,support,855,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:932,usability,support,support,932,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:. * python support is enabled . * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:. * `X11` support is enabled. * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code). * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:127,deployability,instal,installed,127,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:325,deployability,instal,installed,325,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:110,integrability,compon,component,110,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:307,integrability,compon,component,307,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:415,integrability,compon,components,415,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:110,interoperability,compon,component,110,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:307,interoperability,compon,component,307,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:415,interoperability,compon,components,415,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:110,modifiability,compon,component,110,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:307,modifiability,compon,component,307,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:415,modifiability,compon,components,415,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:210,safety,test,tests,210,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:266,safety,test,test,266,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:277,safety,compl,complains,277,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:377,safety,test,test,377,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:385,safety,compl,complain,385,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:439,safety,test,test,439,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:277,security,compl,complains,277,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:385,security,compl,complain,385,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:210,testability,test,tests,210,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:266,testability,test,test,266,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:377,testability,test,test,377,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:439,testability,test,test,439,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:68,usability,support,support,68,"> From my limited view point it seems that we have:. > . > * python support is enabled. > . > * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run). > . > * a test still complains that those optional component are not installed. You're correct, there is no reason for a test to complain about these optional components missing. The test is gone now:. https://github.com/root-project/root/pull/15286",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:79,deployability,infrastructur,infrastructure,79,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:174,deployability,releas,release,174,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:71,safety,test,testing,71,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:71,testability,test,testing,71,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:104,usability,user,users,104,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15217:42,deployability,releas,release,42,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:69,deployability,version,version,69,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:69,integrability,version,version,69,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:69,modifiability,version,version,69,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:85,usability,support,support,85,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15221:145,modifiability,inherit,inheriting,145,"Hi @andresailer , we'll look into this, thanks for reporting. Nevertheless, even if I know you are not the author of that code, let me note that inheriting from stl constructs might not always be the best idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:107,security,auth,author,107,"Hi @andresailer , we'll look into this, thanks for reporting. Nevertheless, even if I know you are not the author of that code, let me note that inheriting from stl constructs might not always be the best idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:189,availability,error,error,189,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:265,availability,Error,Error,265,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:301,availability,Error,Error,301,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3426,availability,operat,operator,3426,all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::stri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3501,availability,operat,operator,3501,/. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(cons,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18577,availability,Error,Error,18577,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18677,availability,avail,available,18677,":Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18739,availability,Error,Error,18739,";. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18839,availability,avail,available,18839,"C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18901,availability,Error,Error,18901,"ss dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19001,availability,avail,available,19001,"k C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19063,availability,Error,Error,19063,"class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19099,availability,Error,Error,19099,"eHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22224,availability,operat,operator,22224,all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::stri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22299,availability,operat,operator,22299,/. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(cons,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35968,availability,Error,Error,35968,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:36004,availability,Error,Error,36004,"4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39134,availability,operat,operator,39134,all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::stri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39209,availability,operat,operator,39209,/. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(cons,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54285,availability,Error,Error,54285,onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54385,availability,avail,available,54385,:Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available eve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54447,availability,Error,Error,54447,;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54547,availability,avail,available,54547,C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is availabl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54609,availability,Error,Error,54609,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54709,availability,avail,available,54709,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54771,availability,Error,Error,54771,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54876,availability,avail,available,54876,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54938,availability,Error,Error,54938,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55043,availability,avail,available,55043,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55105,availability,Error,Error,55105,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55210,availability,avail,available,55210,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55272,availability,Error,Error,55272,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55377,availability,avail,available,55377,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55439,availability,Error,Error,55439,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55544,availability,avail,available,55544,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:172,deployability,Fail,Failed,172,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3335,deployability,releas,release,3335,=================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3362,deployability,releas,release,3362,======================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3853,deployability,Stack,StackingAction,3853,"rapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4202,deployability,Stack,StackingActionSequence,4202,"##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6357,deployability,Stack,StackingActionHandle,6357,"etup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6477,deployability,Stack,StackingActionHandle,6477,"td::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6505,deployability,Stack,StackAction,6505,"{ return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:9948,deployability,Stack,StackingActionHandle,9948,tic Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10514,deployability,Stack,StackingActionSequenceHandle,10514," return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:11918,deployability,Contain,Container,11918,"n* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtensio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12075,deployability,Contain,Container,12075,"ic PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12396,deployability,configurat,configuration,12396,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15447,deployability,Stack,StackingActionHandle,15447,link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15565,deployability,Stack,StackingActionSequenceHandle,15565,class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22133,deployability,releas,release,22133,=================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22160,deployability,releas,release,22160,======================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22651,deployability,Stack,StackingAction,22651,"rapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23000,deployability,Stack,StackingActionSequence,23000,"##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25155,deployability,Stack,StackingActionHandle,25155,"etup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25275,deployability,Stack,StackingActionHandle,25275,"td::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25303,deployability,Stack,StackAction,25303,"{ return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:27339,deployability,Stack,StackingActionHandle,27339,"etup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:27905,deployability,Stack,StackingActionSequenceHandle,27905," return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29309,deployability,Contain,Container,29309,"n* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtensio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29466,deployability,Contain,Container,29466,"ic PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29787,deployability,configurat,configuration,29787,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32838,deployability,Stack,StackingActionHandle,32838,link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32956,deployability,Stack,StackingActionSequenceHandle,32956,class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39043,deployability,releas,release,39043,=================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39070,deployability,releas,release,39070,======================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39561,deployability,Stack,StackingAction,39561,"rapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39910,deployability,Stack,StackingActionSequence,39910,"##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42065,deployability,Stack,StackingActionHandle,42065,"etup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42185,deployability,Stack,StackingActionHandle,42185,"td::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42213,deployability,Stack,StackAction,42213,"{ return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:45656,deployability,Stack,StackingActionHandle,45656,tic Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46222,deployability,Stack,StackingActionSequenceHandle,46222," return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:47626,deployability,Contain,Container,47626,"n* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtensio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:47783,deployability,Contain,Container,47783,"ic PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48104,deployability,configurat,configuration,48104,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51155,deployability,Stack,StackingActionHandle,51155,link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51273,deployability,Stack,StackingActionSequenceHandle,51273,class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18595,energy efficiency,Load,LoadClassInfo,18595,"k C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18757,energy efficiency,Load,LoadClassInfo,18757,"ass dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18919,energy efficiency,Load,LoadClassInfo,18919,"Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54303,energy efficiency,Load,LoadClassInfo,54303,k C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54465,energy efficiency,Load,LoadClassInfo,54465,ass dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54627,energy efficiency,Load,LoadClassInfo,54627,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54789,energy efficiency,Load,LoadClassInfo,54789,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54956,energy efficiency,Load,LoadClassInfo,54956,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55123,energy efficiency,Load,LoadClassInfo,55123,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55290,energy efficiency,Load,LoadClassInfo,55290,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55457,energy efficiency,Load,LoadClassInfo,55457,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3603,integrability,Filter,Filter,3603,"/ Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.da",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3703,integrability,Event,EventAction,3703,"eant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4088,integrability,Event,EventActionSequence,4088,"dle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5065,integrability,Filter,FilterHandle,5065,");. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5169,integrability,Filter,FilterHandle,5169,"onSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingAction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5189,integrability,Filter,Filter,5189,"IONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createStep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5776,integrability,Event,EventActionHandle,5776," bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5890,integrability,Event,EventActionHandle,5890,"ionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5915,integrability,Event,EventAction,5915,"(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorCons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:9299,integrability,Filter,FilterHandle,9299,eratorAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4RunActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4EventActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4TrackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4SteppingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4StackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsListActionSequence* f){ return f; }. static Geant4Action* toAction(Geant4SensDetActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:9723,integrability,Event,EventActionHandle,9723,4Action* toAction(Geant4StackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsListActionSequence* f){ return f; }. static Geant4Action* toAction(Geant4SensDetActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.actio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10265,integrability,Event,EventActionSequenceHandle,10265,"ant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12396,integrability,configur,configuration,12396,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14828,integrability,Event,EventActionSequenceHandle,14828,p_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14956,integrability,Event,EventActionHandle,14956,ink C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17408,integrability,Filter,FilterHandle,17408,ass dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17819,integrability,compon,components,17819,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::K,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18730,integrability,rout,routine,18730,"Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18892,integrability,rout,routine,18892," C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19054,integrability,rout,routine,19054,"ink C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22401,integrability,Filter,Filter,22401,"/ Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.da",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22501,integrability,Event,EventAction,22501,"eant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22886,integrability,Event,EventActionSequence,22886,"dle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23863,integrability,Filter,FilterHandle,23863,");. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23967,integrability,Filter,FilterHandle,23967,"onSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingAction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23987,integrability,Filter,Filter,23987,"IONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createStep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24574,integrability,Event,EventActionHandle,24574," bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24688,integrability,Event,EventActionHandle,24688,"ionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24713,integrability,Event,EventAction,24713,"(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorCons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:27114,integrability,Event,EventActionHandle,27114,"dle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.actio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:27656,integrability,Event,EventActionSequenceHandle,27656,"ction* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29787,integrability,configur,configuration,29787,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32219,integrability,Event,EventActionSequenceHandle,32219,p_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32347,integrability,Event,EventActionHandle,32347,ink C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34799,integrability,Filter,FilterHandle,34799,ass dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35210,integrability,compon,components,35210,"s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39311,integrability,Filter,Filter,39311,"/ Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.da",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39411,integrability,Event,EventAction,39411,"eant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39796,integrability,Event,EventActionSequence,39796,"dle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40773,integrability,Filter,FilterHandle,40773,");. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40877,integrability,Filter,FilterHandle,40877,"onSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingAction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40897,integrability,Filter,Filter,40897,"IONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createStep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41484,integrability,Event,EventActionHandle,41484," bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41598,integrability,Event,EventActionHandle,41598,"ionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41623,integrability,Event,EventAction,41623,"(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorCons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:45007,integrability,Filter,FilterHandle,45007,eratorAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4RunActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4EventActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4TrackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4SteppingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4StackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsListActionSequence* f){ return f; }. static Geant4Action* toAction(Geant4SensDetActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:45431,integrability,Event,EventActionHandle,45431,4Action* toAction(Geant4StackingActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsListActionSequence* f){ return f; }. static Geant4Action* toAction(Geant4SensDetActionSequence* f) { return f; }. static Geant4Action* toAction(Geant4UserInitialization* f) { return f; }. static Geant4Action* toAction(Geant4UserInitializationSequence* f){ return f; }. static Geant4Action* toAction(Geant4DetectorConstruction* f) { return f; }. static Geant4Action* toAction(Geant4DetectorConstructionSequence* f){ return f; }. static Geant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.actio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:45973,integrability,Event,EventActionSequenceHandle,45973,"ant4Action* toAction(FilterHandle f) { return f.action; }. static Geant4Action* toAction(ActionHandle f) { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48104,integrability,configur,configuration,48104,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50536,integrability,Event,EventActionSequenceHandle,50536,p_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50664,integrability,Event,EventActionHandle,50664,ink C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53116,integrability,Filter,FilterHandle,53116,ass dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53527,integrability,compon,components,53527,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54438,integrability,rout,routine,54438,Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54600,integrability,rout,routine,54600, C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54762,integrability,rout,routine,54762,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54929,integrability,rout,routine,54929,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55096,integrability,rout,routine,55096,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55263,integrability,rout,routine,55263,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55430,integrability,rout,routine,55430,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55597,integrability,rout,routine,55597,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4791,interoperability,share,shared,4791,"ckingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4835,interoperability,share,shared,4835,". ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4979,interoperability,share,shared,4979,"rInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5046,interoperability,share,shared,5046,"NDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5148,interoperability,share,shared,5148,"CTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5214,interoperability,share,shared,5214,"equence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5326,interoperability,share,shared,5326,"ensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5403,interoperability,share,shared,5403,"pertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5685,interoperability,share,shared,5685," template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5757,interoperability,share,shared,5757,"t std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static Dete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5869,interoperability,share,shared,5869,"turn handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:5945,interoperability,share,shared,5945,"t std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6063,interoperability,share,shared,6063,"ilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6142,interoperability,share,shared,6142,"ol shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6260,interoperability,share,shared,6260,"ction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6338,interoperability,share,shared,6338,"urn cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6456,interoperability,share,shared,6456,"ernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(Ke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6535,interoperability,share,shared,6535,"le,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSeq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6657,interoperability,share,shared,6657,":string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6735,interoperability,share,shared,6735,">(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7295,interoperability,share,shared,7295,"dle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7379,interoperability,share,shared,7379,"teStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4Generator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17819,interoperability,compon,components,17819,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::K,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23589,interoperability,share,shared,23589,"ckingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23633,interoperability,share,shared,23633,". ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23777,interoperability,share,shared,23777,"rInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23844,interoperability,share,shared,23844,"NDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23946,interoperability,share,shared,23946,"CTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24012,interoperability,share,shared,24012,"equence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24124,interoperability,share,shared,24124,"ensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24201,interoperability,share,shared,24201,"pertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24483,interoperability,share,shared,24483," template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24555,interoperability,share,shared,24555,"t std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static Dete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24667,interoperability,share,shared,24667,"turn handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24743,interoperability,share,shared,24743,"t std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24861,interoperability,share,shared,24861,"ilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:24940,interoperability,share,shared,24940,"ol shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25058,interoperability,share,shared,25058,"ction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25136,interoperability,share,shared,25136,"urn cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25254,interoperability,share,shared,25254,"ernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(Ke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25333,interoperability,share,shared,25333,"le,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSeq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25455,interoperability,share,shared,25455,":string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25533,interoperability,share,shared,25533,">(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26093,interoperability,share,shared,26093,"dle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26177,interoperability,share,shared,26177,"teStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Action* to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35210,interoperability,compon,components,35210,"s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40499,interoperability,share,shared,40499,"ckingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40543,interoperability,share,shared,40543,". ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40687,interoperability,share,shared,40687,"rInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40754,interoperability,share,shared,40754,"NDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40856,interoperability,share,shared,40856,"CTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40922,interoperability,share,shared,40922,"equence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41034,interoperability,share,shared,41034,"ensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41111,interoperability,share,shared,41111,"pertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41393,interoperability,share,shared,41393," template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41465,interoperability,share,shared,41465,"t std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static Dete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41577,interoperability,share,shared,41577,"turn handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41653,interoperability,share,shared,41653,"t std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41771,interoperability,share,shared,41771,"ilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41850,interoperability,share,shared,41850,"ol shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:41968,interoperability,share,shared,41968,"ction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42046,interoperability,share,shared,42046,"urn cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42164,interoperability,share,shared,42164,"ernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(Ke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42243,interoperability,share,shared,42243,"le,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSeq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42365,interoperability,share,shared,42365,":string& name_type, bool shared). { return cr<RunActionHandle,Setup::RunAction>(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42443,interoperability,share,shared,42443,">(kernel,name_type,shared); }. static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:43003,interoperability,share,shared,43003,"dle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:43087,interoperability,share,shared,43087,"teStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4Generator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53527,interoperability,compon,components,53527,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12396,modifiability,configur,configuration,12396,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17819,modifiability,compon,components,17819,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::K,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29787,modifiability,configur,configuration,29787,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35210,modifiability,compon,components,35210,"s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48104,modifiability,configur,configuration,48104,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53527,modifiability,compon,components,53527,s dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:189,performance,error,error,189,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:265,performance,Error,Error,265,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:301,performance,Error,Error,301,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:369,performance,content,content,369,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18577,performance,Error,Error,18577,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18595,performance,Load,LoadClassInfo,18595,"k C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18739,performance,Error,Error,18739,";. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18757,performance,Load,LoadClassInfo,18757,"ass dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18901,performance,Error,Error,18901,"ss dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18919,performance,Load,LoadClassInfo,18919,"Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19063,performance,Error,Error,19063,"class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19099,performance,Error,Error,19099,"eHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19167,performance,content,content,19167,". Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35968,performance,Error,Error,35968,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:36004,performance,Error,Error,36004,"4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:36077,performance,content,content,36077,"haseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54285,performance,Error,Error,54285,onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54303,performance,Load,LoadClassInfo,54303,k C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54447,performance,Error,Error,54447,;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54465,performance,Load,LoadClassInfo,54465,ass dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54609,performance,Error,Error,54609,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54627,performance,Load,LoadClassInfo,54627,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54771,performance,Error,Error,54771,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54789,performance,Load,LoadClassInfo,54789,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54938,performance,Error,Error,54938,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54956,performance,Load,LoadClassInfo,54956,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55105,performance,Error,Error,55105,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55123,performance,Load,LoadClassInfo,55123,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55272,performance,Error,Error,55272,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55290,performance,Load,LoadClassInfo,55290,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55439,performance,Error,Error,55439,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55457,performance,Load,LoadClassInfo,55457,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:172,reliability,Fail,Failed,172,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12510,reliability,pra,pragma,12510,"ropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12586,reliability,pra,pragma,12586,">hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12641,reliability,pra,pragma,12641,"roperty(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12693,reliability,pra,pragma,12693,",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12754,reliability,pra,pragma,12754,"onst std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12816,reliability,pra,pragma,12816,"el->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12873,reliability,pra,pragma,12873,"ue);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12929,reliability,pra,pragma,12929,"nitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12993,reliability,pra,pragma,12993,"nt4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13071,reliability,pra,pragma,13071," Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13150,reliability,pra,pragma,13150," Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13208,reliability,pra,pragma,13208,"e*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13267,reliability,pra,pragma,13267,"4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13326,reliability,pra,pragma,13326,"ail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::Kernel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13387,reliability,pra,pragma,13387," CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionCont",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13448,reliability,pra,pragma,13448,"INT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13503,reliability,pra,pragma,13503," //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13623,reliability,pra,pragma,13623,"xExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13682,reliability,pra,pragma,13682,"tex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13738,reliability,pra,pragma,13738,"Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13806,reliability,pra,pragma,13806,"*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13881,reliability,pra,pragma,13881," C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:13957,reliability,pra,pragma,13957,"im::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::Even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14060,reliability,pra,pragma,14060,"n*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14119,reliability,pra,pragma,14119,"nt4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14170,reliability,pra,pragma,14170,"d4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14236,reliability,pra,pragma,14236,":sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14288,reliability,pra,pragma,14288,"dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14339,reliability,pra,pragma,14339,"typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14399,reliability,pra,pragma,14399," typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4Stepping",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14450,reliability,pra,pragma,14450,"a link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::Stacki",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14501,reliability,pra,pragma,14501,"ragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14563,reliability,pra,pragma,14563,"; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14625,reliability,pra,pragma,14625,"a link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14679,reliability,pra,pragma,14679,"pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14739,reliability,pra,pragma,14739,"ma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14793,reliability,pra,pragma,14793,icle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C+,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14857,reliability,pra,pragma,14857,VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14921,reliability,pra,pragma,14921,4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:14977,reliability,pra,pragma,14977,d4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15039,reliability,pra,pragma,15039, // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15095,reliability,pra,pragma,15095,nt4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15162,reliability,pra,pragma,15162,l;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAct,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15229,reliability,pra,pragma,15229,;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15288,reliability,pra,pragma,15288,gma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15353,reliability,pra,pragma,15353,lass dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15412,reliability,pra,pragma,15412,class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ cla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15471,reliability,pra,pragma,15471,4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15530,reliability,pra,pragma,15530,m::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15597,reliability,pra,pragma,15597,ant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15664,reliability,pra,pragma,15664,onHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15723,reliability,pra,pragma,15723,RunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15782,reliability,pra,pragma,15782,tion;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4Use,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15849,reliability,pra,pragma,15849,e;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConst,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15916,reliability,pra,pragma,15916, #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:15976,reliability,pra,pragma,15976,agma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16044,reliability,pra,pragma,16044,ink C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16112,reliability,pra,pragma,16112,s dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16172,reliability,pra,pragma,16172,++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16228,reliability,pra,pragma,16228,agma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16284,reliability,pra,pragma,16284,#pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16340,reliability,pra,pragma,16340,Action;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16396,reliability,pra,pragma,16396,ingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16466,reliability,pra,pragma,16466, #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16536,reliability,pra,pragma,16536,nk C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16599,reliability,pra,pragma,16599,a link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16670,reliability,pra,pragma,16670,nk C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16741,reliability,pra,pragma,16741, dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16804,reliability,pra,pragma,16804,hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16869,reliability,pra,pragma,16869,d4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16942,reliability,pra,pragma,16942,:sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17015,reliability,pra,pragma,17015,orActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17080,reliability,pra,pragma,17080,t4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17134,reliability,pra,pragma,17134,hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17200,reliability,pra,pragma,17200,im::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17253,reliability,pra,pragma,17253,::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #en,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17307,reliability,pra,pragma,17307,ep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17373,reliability,pra,pragma,17373,eant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17424,reliability,pra,pragma,17424,im::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ nam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17475,reliability,pra,pragma,17475,C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17536,reliability,pra,pragma,17536,gma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17592,reliability,pra,pragma,17592,;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17648,reliability,pra,pragma,17648,nSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17704,reliability,pra,pragma,17704,ant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17746,reliability,pra,pragma,17746,ink C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17832,reliability,pra,pragma,17832,im::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17885,reliability,pra,pragma,17885,ss dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17936,reliability,pra,pragma,17936,. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:17996,reliability,pra,pragma,17996,tionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18050,reliability,pra,pragma,18050,nt4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18218,reliability,pra,pragma,18218," dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifnde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18408,reliability,pra,pragma,18408,"terHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18443,reliability,pra,pragma,18443,"dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18485,reliability,pra,pragma,18485,"++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifnd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18677,reliability,availab,available,18677,":Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18839,reliability,availab,available,18839,"C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19001,reliability,availab,available,19001,"k C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29901,reliability,pra,pragma,29901,"ropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29977,reliability,pra,pragma,29977,">hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30032,reliability,pra,pragma,30032,"roperty(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30084,reliability,pra,pragma,30084,",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30145,reliability,pra,pragma,30145,"onst std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30207,reliability,pra,pragma,30207,"el->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30264,reliability,pra,pragma,30264,"ue);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30320,reliability,pra,pragma,30320,"nitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30384,reliability,pra,pragma,30384,"nt4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30462,reliability,pra,pragma,30462," Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30541,reliability,pra,pragma,30541," Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30599,reliability,pra,pragma,30599,"e*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30658,reliability,pra,pragma,30658,"4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30717,reliability,pra,pragma,30717,"ail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::Kernel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30778,reliability,pra,pragma,30778," CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionCont",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30839,reliability,pra,pragma,30839,"INT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:30894,reliability,pra,pragma,30894," //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31014,reliability,pra,pragma,31014,"xExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31073,reliability,pra,pragma,31073,"tex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31129,reliability,pra,pragma,31129,"Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31197,reliability,pra,pragma,31197,"*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31272,reliability,pra,pragma,31272," C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31348,reliability,pra,pragma,31348,"im::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::Even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31451,reliability,pra,pragma,31451,"n*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31510,reliability,pra,pragma,31510,"nt4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31561,reliability,pra,pragma,31561,"d4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31627,reliability,pra,pragma,31627,":sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31679,reliability,pra,pragma,31679,"dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31730,reliability,pra,pragma,31730,"typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31790,reliability,pra,pragma,31790," typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4Stepping",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31841,reliability,pra,pragma,31841,"a link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::Stacki",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31892,reliability,pra,pragma,31892,"ragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:31954,reliability,pra,pragma,31954,"; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32016,reliability,pra,pragma,32016,"a link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32070,reliability,pra,pragma,32070,"pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32130,reliability,pra,pragma,32130,"ma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32184,reliability,pra,pragma,32184,icle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C+,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32248,reliability,pra,pragma,32248,VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32312,reliability,pra,pragma,32312,4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32368,reliability,pra,pragma,32368,d4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32430,reliability,pra,pragma,32430, // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32486,reliability,pra,pragma,32486,nt4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32553,reliability,pra,pragma,32553,l;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAct,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32620,reliability,pra,pragma,32620,;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32679,reliability,pra,pragma,32679,gma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32744,reliability,pra,pragma,32744,lass dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32803,reliability,pra,pragma,32803,class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ cla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32862,reliability,pra,pragma,32862,4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32921,reliability,pra,pragma,32921,m::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:32988,reliability,pra,pragma,32988,ant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33055,reliability,pra,pragma,33055,onHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33114,reliability,pra,pragma,33114,RunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33173,reliability,pra,pragma,33173,tion;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4Use,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33240,reliability,pra,pragma,33240,e;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConst,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33307,reliability,pra,pragma,33307, #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33367,reliability,pra,pragma,33367,agma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33435,reliability,pra,pragma,33435,ink C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33503,reliability,pra,pragma,33503,s dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33563,reliability,pra,pragma,33563,++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33619,reliability,pra,pragma,33619,agma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33675,reliability,pra,pragma,33675,#pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33731,reliability,pra,pragma,33731,Action;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33787,reliability,pra,pragma,33787,ingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33857,reliability,pra,pragma,33857, #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33927,reliability,pra,pragma,33927,nk C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33990,reliability,pra,pragma,33990,a link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34061,reliability,pra,pragma,34061,nk C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34132,reliability,pra,pragma,34132, dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34195,reliability,pra,pragma,34195,hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34260,reliability,pra,pragma,34260,d4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34333,reliability,pra,pragma,34333,:sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34406,reliability,pra,pragma,34406,orActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34471,reliability,pra,pragma,34471,t4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34525,reliability,pra,pragma,34525,hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34591,reliability,pra,pragma,34591,im::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34644,reliability,pra,pragma,34644,::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #en,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34698,reliability,pra,pragma,34698,ep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34764,reliability,pra,pragma,34764,eant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34815,reliability,pra,pragma,34815,im::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ nam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34866,reliability,pra,pragma,34866,C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34927,reliability,pra,pragma,34927,gma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34983,reliability,pra,pragma,34983,;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35039,reliability,pra,pragma,35039,nSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35095,reliability,pra,pragma,35095,"ant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35137,reliability,pra,pragma,35137,"ink C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35223,reliability,pra,pragma,35223,"im::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35276,reliability,pra,pragma,35276,"ss dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35327,reliability,pra,pragma,35327,". #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35387,reliability,pra,pragma,35387,"tionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35441,reliability,pra,pragma,35441,"nt4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35609,reliability,pra,pragma,35609," dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35799,reliability,pra,pragma,35799,"terHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35834,reliability,pra,pragma,35834,"dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35876,reliability,pra,pragma,35876,"++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48218,reliability,pra,pragma,48218,"ropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48294,reliability,pra,pragma,48294,">hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48349,reliability,pra,pragma,48349,"roperty(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48401,reliability,pra,pragma,48401,",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48462,reliability,pra,pragma,48462,"onst std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48524,reliability,pra,pragma,48524,"el->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48581,reliability,pra,pragma,48581,"ue);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48637,reliability,pra,pragma,48637,"nitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48701,reliability,pra,pragma,48701,"nt4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48779,reliability,pra,pragma,48779," Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48858,reliability,pra,pragma,48858," Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48916,reliability,pra,pragma,48916,"e*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48975,reliability,pra,pragma,48975,"4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49034,reliability,pra,pragma,49034,"ail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::Kernel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49095,reliability,pra,pragma,49095," CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionCont",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49156,reliability,pra,pragma,49156,"INT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49211,reliability,pra,pragma,49211," //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49331,reliability,pra,pragma,49331,"xExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49390,reliability,pra,pragma,49390,"tex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49446,reliability,pra,pragma,49446,"Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49514,reliability,pra,pragma,49514,"*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49589,reliability,pra,pragma,49589," C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49665,reliability,pra,pragma,49665,"im::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::Even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49768,reliability,pra,pragma,49768,"n*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49827,reliability,pra,pragma,49827,"nt4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4he",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49878,reliability,pra,pragma,49878,"d4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49944,reliability,pra,pragma,49944,":sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:49996,reliability,pra,pragma,49996,"dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50047,reliability,pra,pragma,50047,"typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50107,reliability,pra,pragma,50107," typedef dd4hep::sim::Geant4ParticleIntMap;. #pragma link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4Stepping",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50158,reliability,pra,pragma,50158,"a link C++ class dd4hep::sim::PropertyResult;. //#pragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::Stacki",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50209,reliability,pra,pragma,50209,"ragma link C++ class dd4hep::sim::Geant4InputAction::Particles; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50271,reliability,pra,pragma,50271,"; // same as std::vector<dd4hep::sim::Geant4Particle*>. #pragma link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50333,reliability,pra,pragma,50333,"a link C++ class dd4hep::sim::Geant4ParticleHandle;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50387,reliability,pra,pragma,50387,"pragma link C++ class dd4hep::sim::Geant4ParticleMap;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50447,reliability,pra,pragma,50447,"ma link C++ class std::map<int,dd4hep::sim::Geant4Particle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50501,reliability,pra,pragma,50501,icle*>;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C+,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50565,reliability,pra,pragma,50565,VertexExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50629,reliability,pra,pragma,50629,4hep::sim::PrimaryExtension>+;. #pragma link C++ class dd4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50685,reliability,pra,pragma,50685,d4hep::dd4hep_ptr<dd4hep::sim::Geant4InputAction::Particles>;. // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50747,reliability,pra,pragma,50747, // Basic stuff. #pragma link C++ class dd4hep::sim::Geant4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50803,reliability,pra,pragma,50803,nt4ActionCreation;. #pragma link C++ class dd4hep::sim::Geant4Kernel;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50870,reliability,pra,pragma,50870,l;. #pragma link C++ class dd4hep::sim::Geant4Kernel::PhaseSelector;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAct,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50937,reliability,pra,pragma,50937,;. #pragma link C++ class dd4hep::sim::Geant4Context;. #pragma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #prag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:50996,reliability,pra,pragma,50996,gma link C++ class dd4hep::sim::KernelHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51061,reliability,pra,pragma,51061,lass dd4hep::sim::Geant4ActionContainer;. #pragma link C++ class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51120,reliability,pra,pragma,51120,class dd4hep::sim::Geant4Action;. #pragma link C++ class dd4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ cla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51179,reliability,pra,pragma,51179,4hep::sim::ActionHandle;. #pragma link C++ class dd4hep::sim::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51238,reliability,pra,pragma,51238,m::RunActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51305,reliability,pra,pragma,51305,ant4RunActionSequence;. #pragma link C++ class dd4hep::sim::RunActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51372,reliability,pra,pragma,51372,onHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedRunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51431,reliability,pra,pragma,51431,RunAction;. #pragma link C++ class dd4hep::sim::Geant4RunAction;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51490,reliability,pra,pragma,51490,tion;. #pragma link C++ class dd4hep::sim::EventActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4Use,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51557,reliability,pra,pragma,51557,e;. #pragma link C++ class dd4hep::sim::Geant4EventActionSequence;. #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConst,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51624,reliability,pra,pragma,51624, #pragma link C++ class dd4hep::sim::EventActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51684,reliability,pra,pragma,51684,agma link C++ class dd4hep::sim::Geant4SharedEventAction;. #pragma link C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51752,reliability,pra,pragma,51752,ink C++ class dd4hep::sim::Geant4EventAction;. #pragma link C++ class dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51820,reliability,pra,pragma,51820,s dd4hep::sim::SteppingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51880,reliability,pra,pragma,51880,++ class dd4hep::sim::Geant4SteppingActionSequence;. #pragma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51936,reliability,pra,pragma,51936,agma link C++ class dd4hep::sim::SteppingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:51992,reliability,pra,pragma,51992,#pragma link C++ class dd4hep::sim::Geant4SharedSteppingAction;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52048,reliability,pra,pragma,52048,Action;. #pragma link C++ class dd4hep::sim::Geant4SteppingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52104,reliability,pra,pragma,52104,ingAction;. #pragma link C++ class dd4hep::sim::StackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52174,reliability,pra,pragma,52174, #pragma link C++ class dd4hep::sim::Geant4StackingAction;. #pragma link C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52244,reliability,pra,pragma,52244,nk C++ class dd4hep::sim::StackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52307,reliability,pra,pragma,52307,a link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52378,reliability,pra,pragma,52378,nk C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52449,reliability,pra,pragma,52449, dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52512,reliability,pra,pragma,52512,hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52577,reliability,pra,pragma,52577,d4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52650,reliability,pra,pragma,52650,:sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52723,reliability,pra,pragma,52723,orActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52788,reliability,pra,pragma,52788,t4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52842,reliability,pra,pragma,52842,hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52908,reliability,pra,pragma,52908,im::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52961,reliability,pra,pragma,52961,::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #en,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53015,reliability,pra,pragma,53015,ep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53081,reliability,pra,pragma,53081,eant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53132,reliability,pra,pragma,53132,im::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ nam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53183,reliability,pra,pragma,53183,C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53244,reliability,pra,pragma,53244,gma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53300,reliability,pra,pragma,53300,;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53356,reliability,pra,pragma,53356,nSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53412,reliability,pra,pragma,53412,ant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53454,reliability,pra,pragma,53454,ink C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53540,reliability,pra,pragma,53540,im::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53593,reliability,pra,pragma,53593,ss dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initializat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53644,reliability,pra,pragma,53644,. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53704,reliability,pra,pragma,53704,tionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53758,reliability,pra,pragma,53758,nt4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:53926,reliability,pra,pragma,53926, dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54116,reliability,pra,pragma,54116,terHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TCla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54151,reliability,pra,pragma,54151,dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54193,reliability,pra,pragma,54193,++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54385,reliability,availab,available,54385,:Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available eve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54547,reliability,availab,available,54547,C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is availabl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54709,reliability,availab,available,54709,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54876,reliability,availab,available,54876,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55043,reliability,availab,available,55043,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55210,reliability,availab,available,55210,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55377,reliability,availab,available,55377,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55544,reliability,availab,available,55544,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:189,safety,error,error,189,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:265,safety,Error,Error,265,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:301,safety,Error,Error,301,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1974,safety,Detect,Detector,1974,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2898,safety,detect,detector,2898,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3011,safety,detect,detector,3011,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3884,safety,Detect,DetectorConstruction,3884,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4241,safety,Detect,DetectorConstructionSequence,4241,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6756,safety,Detect,DetectorConstructionHandle,6756,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6875,safety,Detect,DetectorConstructionHandle,6875,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6909,safety,Detect,DetectorConstruction,6909,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7280,safety,detect,detector,7280,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Actio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7370,safety,detect,detector,7370,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10935,safety,Detect,DetectorConstructionHandle,10935,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:11017,safety,Detect,DetectorConstructionSequenceHandle,11017,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12333,safety,Detect,DetectorInterna,12333,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16839,safety,Detect,DetectorConstructionHandle,16839,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16904,safety,Detect,DetectorConstructionSequenceHandle,16904,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18577,safety,Error,Error,18577,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18677,safety,avail,available,18677,":Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18739,safety,Error,Error,18739,";. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18839,safety,avail,available,18839,"C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18901,safety,Error,Error,18901,"ss dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19001,safety,avail,available,19001,"k C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19063,safety,Error,Error,19063,"class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19099,safety,Error,Error,19099,"eHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:20772,safety,Detect,Detector,20772,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21696,safety,detect,detector,21696,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21809,safety,detect,detector,21809,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22682,safety,Detect,DetectorConstruction,22682,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23039,safety,Detect,DetectorConstructionSequence,23039,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25554,safety,Detect,DetectorConstructionHandle,25554,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25673,safety,Detect,DetectorConstructionHandle,25673,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25707,safety,Detect,DetectorConstruction,25707,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26078,safety,detect,detector,26078,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26168,safety,detect,detector,26168,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28326,safety,Detect,DetectorConstructionHandle,28326,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28408,safety,Detect,DetectorConstructionSequenceHandle,28408,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29724,safety,Detect,DetectorInterna,29724,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34230,safety,Detect,DetectorConstructionHandle,34230,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34295,safety,Detect,DetectorConstructionSequenceHandle,34295,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35968,safety,Error,Error,35968,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:36004,safety,Error,Error,36004,"4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:37682,safety,Detect,Detector,37682,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38606,safety,detect,detector,38606,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38719,safety,detect,detector,38719,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39592,safety,Detect,DetectorConstruction,39592,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39949,safety,Detect,DetectorConstructionSequence,39949,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42464,safety,Detect,DetectorConstructionHandle,42464,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42583,safety,Detect,DetectorConstructionHandle,42583,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42617,safety,Detect,DetectorConstruction,42617,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42988,safety,detect,detector,42988,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Actio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:43078,safety,detect,detector,43078,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46643,safety,Detect,DetectorConstructionHandle,46643,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46725,safety,Detect,DetectorConstructionSequenceHandle,46725,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48041,safety,Detect,DetectorInterna,48041,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52547,safety,Detect,DetectorConstructionHandle,52547,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52612,safety,Detect,DetectorConstructionSequenceHandle,52612,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54285,safety,Error,Error,54285,onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54385,safety,avail,available,54385,:Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available eve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54447,safety,Error,Error,54447,;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54547,safety,avail,available,54547,C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is availabl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54609,safety,Error,Error,54609,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54709,safety,avail,available,54709,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54771,safety,Error,Error,54771,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54876,safety,avail,available,54876,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54938,safety,Error,Error,54938,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55043,safety,avail,available,55043,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55105,safety,Error,Error,55105,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55210,safety,avail,available,55210,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55272,safety,Error,Error,55272,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55377,safety,avail,available,55377,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55439,safety,Error,Error,55439,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55544,safety,avail,available,55544,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1974,security,Detect,Detector,1974,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2511,security,Auth,Author,2511,NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2898,security,detect,detector,2898,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3011,security,detect,detector,3011,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3884,security,Detect,DetectorConstruction,3884,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4241,security,Detect,DetectorConstructionSequence,4241,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6756,security,Detect,DetectorConstructionHandle,6756,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6875,security,Detect,DetectorConstructionHandle,6875,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6909,security,Detect,DetectorConstruction,6909,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7280,security,detect,detector,7280,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Actio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7370,security,detect,detector,7370,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10935,security,Detect,DetectorConstructionHandle,10935,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:11017,security,Detect,DetectorConstructionSequenceHandle,11017,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12333,security,Detect,DetectorInterna,12333,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:12396,security,configur,configuration,12396,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16839,security,Detect,DetectorConstructionHandle,16839,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16904,security,Detect,DetectorConstructionSequenceHandle,16904,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18677,security,availab,available,18677,":Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18839,security,availab,available,18839,"C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19001,security,availab,available,19001,"k C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:20772,security,Detect,Detector,20772,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21309,security,Auth,Author,21309,NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21696,security,detect,detector,21696,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21809,security,detect,detector,21809,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22682,security,Detect,DetectorConstruction,22682,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23039,security,Detect,DetectorConstructionSequence,23039,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25554,security,Detect,DetectorConstructionHandle,25554,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25673,security,Detect,DetectorConstructionHandle,25673,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25707,security,Detect,DetectorConstruction,25707,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26078,security,detect,detector,26078,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:26168,security,detect,detector,26168,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* toAction(SensitiveHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListHandle f) { return f.action; }. static Geant4Action* toAction(RunActionHandle f) { return f.action; }. static Geant4Action* toAction(EventActionHandle f) { return f.action; }. static Geant4Ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28326,security,Detect,DetectorConstructionHandle,28326,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28408,security,Detect,DetectorConstructionSequenceHandle,28408,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29724,security,Detect,DetectorInterna,29724,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:29787,security,configur,configuration,29787,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34230,security,Detect,DetectorConstructionHandle,34230,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34295,security,Detect,DetectorConstructionSequenceHandle,34295,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:37682,security,Detect,Detector,37682,IS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38219,security,Auth,Author,38219,NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38606,security,detect,detector,38606,==============================================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstructi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38719,security,detect,detector,38719,-------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39592,security,Detect,DetectorConstruction,39592,"IDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39949,security,Detect,DetectorConstructionSequence,39949,"tion) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle crea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42464,security,Detect,DetectorConstructionHandle,42464,"static EventActionHandle createEventAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42583,security,Detect,DetectorConstructionHandle,42583,"r<EventActionHandle,Setup::EventAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42617,security,Detect,DetectorConstruction,42617,"tAction>(kernel,name_type,shared); }. static TrackingActionHandle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42988,security,detect,detector,42988,"ppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Actio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:43078,security,detect,detector,43078,"dle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4TrackingAction* f) { return f; }. static Geant4Action* toAction(Geant4SteppingAction* f) { return f; }. static Geant4Action* toAction(Geant4StackingAction* f) { return f; }. static Geant4Action* toAction(Geant4GeneratorAction* f) { return f; }. static Geant4Action* toAction(Geant4G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46643,security,Detect,DetectorConstructionHandle,46643,"StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Gean",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46725,security,Detect,DetectorConstructionSequenceHandle,46725,"ctionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48041,security,Detect,DetectorInterna,48041,"d::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:48104,security,configur,configuration,48104,"Property(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(name).str(value);. return 1;. }. return 0;. }. };. /// Container definitions for Geant4Vertex. typedef std::vector<Geant4Vertex*> Geant4VertexVector;. typedef std::map<int,Geant4Vertex*> Geant4VertexIntMap;. /// Container definitions for Geant4Particle. typedef std::vector<Geant4Particle*> Geant4ParticleVector;. typedef std::map<int,Geant4Particle*> Geant4ParticleIntMap;. }. }. typedef dd4hep::sim::Geant4ActionCreation Geant4ActionCreation;. #include <DD4hep/detail/DetectorInterna.h>. #include <DDG4/Geant4UIManager.h>. // CINT configuration. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). //#pragma link C++ namespace DDSegmentation;. /// Geant4 Vertex dictionaries. #pragma link C++ class dd4hep::sim::VertexExtension+;. #pragma link C++ class dd4hep::sim::Geant4Vertex+;. #pragma link C++ class vector<dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class map<int,dd4hep::sim::Geant4Vertex*>+;. #pragma link C++ class dd4hep::sim::Geant4ParticleMap+;. #pragma link C++ class dd4hep::sim::PrimaryExtension+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryInteraction+;. #pragma link C++ class std::vector<dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class std::map<int,dd4hep::sim::Geant4PrimaryInteraction*>+;. #pragma link C++ class dd4hep::sim::Geant4PrimaryEvent+;. #pragma link C++ typedef dd4hep::sim::Geant4VertexVector;. #pragma link C++ typedef dd4hep::sim::Geant4VertexIntMap;. #pragma link C++ typedef dd4hep::sim::Geant4ParticleVector;. #pragma link C++ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52547,security,Detect,DetectorConstructionHandle,52547,gma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52612,security,Detect,DetectorConstructionSequenceHandle,52612,a link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54385,security,availab,available,54385,:Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available eve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54547,security,availab,available,54547,C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is availabl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54709,security,availab,available,54709,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54876,security,availab,available,54876,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55043,security,availab,available,55043,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55210,security,availab,available,55210,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55377,security,availab,available,55377,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55544,security,availab,available,55544,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2983,testability,simul,simulation,2983,iption implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserIniti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21781,testability,simul,simulation,21781,iption implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserIniti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38691,testability,simul,simulation,38691,iption implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserIniti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:189,usability,error,error,189,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:265,usability,Error,Error,265,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:301,usability,Error,Error,301,"Hi @dpiparo ,. Thanks for you comment! Please also note that this code in DD4hep has been working for around 10 years, and only recently has ROOT started throwing up this ""Failed to parse"" error, which by the way looks like this in its full glory from DD4hep. ```. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #define G4VIS_USE_OPENGLX 1. #endif. #ifndef G4VIS_USE_OPENGLXM. #define G4VIS_USE_OPENGLXM 1. #endif. #ifndef QT_GUI_LIB. #define QT_GUI_LIB 1. #endif. #ifndef QT_CORE_LIB. #define QT_CORE_LIB 1. #endif. #ifndef QT_NO_DEBUG. #define QT_NO_DEBUG 1. #endif. #ifndef QT_OPENGL_LIB. #define QT_OPENGL_LIB 1. #endif. #ifndef QT_WIDGETS_LIB. #define QT_WIDGETS_LIB 1. #endif. #ifndef G4VIS_USE_QT3D. #define G4VIS_USE_QT3D 1. #endif. #ifndef G4UI_USE_QT. #define G4UI_USE_QT 1. #endif. #ifndef G4UI_USE_XM. #define G4UI_USE_XM 1. #endif. #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. //==========================================================================. // AIDA Detector description imple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2919,usability,tool,toolkit,2919,=========================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3032,usability,tool,toolkit,3032,----------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequenc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:3979,usability,User,UserInitialization,3979,"ation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4366,usability,User,UserInitializationSequence,4366,"4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4444,usability,statu,status,4444,":Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4472,usability,statu,status,4472,"n action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& ker",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4541,usability,statu,status,4541,"ant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Set",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4611,usability,statu,status,4611,"CTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:4620,usability,statu,status,4620,"LE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:6968,usability,User,UserInitializationHandle,6968,"ndle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:7080,usability,User,UserInitializationHandle,7080,"ActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10768,usability,User,UserInitializationHandle,10768,"ction* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:10848,usability,User,UserInitializationSequenceHandle,10848,"oAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16571,usability,User,UserInitializationHandle,16571,enceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:16634,usability,User,UserInitializationSequenceHandle,16634,onSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18577,usability,Error,Error,18577,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18739,usability,Error,Error,18739,";. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:18901,usability,Error,Error,18901,"ss dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19063,usability,Error,Error,19063,"class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:19099,usability,Error,Error,19099,"eHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21717,usability,tool,toolkit,21717,=========================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:21830,usability,tool,toolkit,21830,----------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequenc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:22777,usability,User,UserInitialization,22777,"ation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23164,usability,User,UserInitializationSequence,23164,"4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23242,usability,statu,status,23242,":Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23270,usability,statu,status,23270,"n action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& ker",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23339,usability,statu,status,23339,"ant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Set",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23409,usability,statu,status,23409,"CTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:23418,usability,statu,status,23418,"LE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25766,usability,User,UserInitializationHandle,25766,"ndle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25878,usability,User,UserInitializationHandle,25878,"ActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) … { return f.action; }. static Geant4Action* toAction(PhaseActionHandle f) { return f.action; }. static Geant4Action* ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28159,usability,User,UserInitializationHandle,28159,"ction* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:28239,usability,User,UserInitializationSequenceHandle,28239,"oAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:33962,usability,User,UserInitializationHandle,33962,enceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:34025,usability,User,UserInitializationSequenceHandle,34025,onSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:35968,usability,Error,Error,35968,"onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:36004,usability,Error,Error,36004,"4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4ActionPhase with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB. #define DD4HEP_USE_TBB 1. #endif. #ifndef BOOST_SPIRIT_USE_PHOENIX_V3. #define BOOST_SPIRIT_USE_PHOENIX_V3 1. #endif. #ifndef DD4HEP_USE_XERCESC. #define DD4HEP_USE_XERCESC 1. #endif. #ifndef G4LIB_BUILD_DLL. #define G4LIB_BUILD_DLL 1. #endif. #ifndef PTL_BUILD_DLL. #define PTL_BUILD_DLL 1. #endif. #ifndef G4VIS_USE_RAYTRACERX. #define G4VIS_USE_RAYTRACERX 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_GLES. #define G4VIS_USE_TOOLSSG_QT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_QT_ZB. #define G4VIS_USE_TOOLSSG_QT_ZB 1. #endif. #ifndef G4VIS_USE_TOOLSSG_X11_GLES. #define G4VIS_USE_TOOLSSG_X11_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_GLES. #define G4VIS_USE_TOOLSSG_XT_GLES 1. #endif. #ifndef G4VIS_USE_TOOLSSG_XT_ZB. #define G4VIS_USE_TOOLSSG_XT_ZB 1. #endif. #ifndef G4VIS_USE_OPENGLQT. #define G4VIS_USE_OPENGLQT 1. #endif. #ifndef G4VIS_USE_OPENGLX. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38627,usability,tool,toolkit,38627,=========================================. // AIDA Detector description implementation . //--------------------------------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:38740,usability,tool,toolkit,38740,----------------------------------------------------. // Copyright (C) Organisation europeenne pour la Recherche nucleaire (CERN). // All rights reserved. //. // For the licensing terms see $DD4hepINSTALL/LICENSE. // For the list of contributors see $DD4hepINSTALL/doc/CREDITS. //. //====================================================================. //. // Define the ROOT dictionaries for all data classes to be saved . // which are created by the DDG4 examples. //. // Author : M.Frank. //. //====================================================================. // Framework include files. #include <DDG4/DDG4Dict.h>. #include <DDG4/Geant4Config.h>. #include <DDG4/Geant4Primary.h>. #include <DDG4/Geant4Random.h>. #include <DDG4/Geant4DataDump.h>. #include <DDG4/Geant4InputAction.h>. #include <DDG4/Geant4GeneratorWrapper.h>. /// Namespace for the AIDA detector description toolkit. namespace dd4hep {. /// Namespace for the Geant4 based simulation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequenc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:39687,usability,User,UserInitialization,39687,"ation part of the AIDA detector description toolkit. namespace sim {. #define ACTIONHANDLE(x) \. struct x##Handle { \. Geant4##x* action; \. explicit x##Handle(Geant4##x* a) : action(a) { if ( action ) action->addRef();} \. x##Handle(const x##Handle& h) : action(h.action) { if ( action ) action->addRef();} \. ~x##Handle() { if ( action) action->release(); } \. Geant4##x* release() { Geant4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40074,usability,User,UserInitializationSequence,40074,"4##x* tmp = action; action=0; return tmp; } \. operator dd4hep::sim::Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40152,usability,statu,status,40152,":Geant4##x* () const { return action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40180,usability,statu,status,40180,"n action; } \. Geant4##x* operator->() const { return action; } \. Geant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& ker",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40249,usability,statu,status,40249,"ant4##x* get() const { return action; } \. }. ACTIONHANDLE(Filter);. ACTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Set",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40319,usability,statu,status,40319,"CTIONHANDLE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:40328,usability,statu,status,40328,"LE(Action);. ACTIONHANDLE(PhaseAction);. ACTIONHANDLE(RunAction);. ACTIONHANDLE(EventAction);. ACTIONHANDLE(GeneratorAction);. ACTIONHANDLE(PhysicsList);. ACTIONHANDLE(TrackingAction);. ACTIONHANDLE(SteppingAction);. ACTIONHANDLE(StackingAction);. ACTIONHANDLE(DetectorConstruction);. ACTIONHANDLE(Sensitive);. ACTIONHANDLE(ParticleHandler);. ACTIONHANDLE(UserInitialization);. ACTIONHANDLE(GeneratorActionSequence);. ACTIONHANDLE(RunActionSequence);. ACTIONHANDLE(EventActionSequence);. ACTIONHANDLE(TrackingActionSequence);. ACTIONHANDLE(SteppingActionSequence);. ACTIONHANDLE(StackingActionSequence);. ACTIONHANDLE(DetectorConstructionSequence);. ACTIONHANDLE(PhysicsListActionSequence);. ACTIONHANDLE(SensDetActionSequence);. ACTIONHANDLE(UserInitializationSequence);. struct PropertyResult {. std::string data;. int status;. PropertyResult() : status(0) {}. PropertyResult(const std::string& d, int s) : data(d), status(s) {}. PropertyResult(const PropertyResult& c) : data(c.data), status(c.status) {}. ~PropertyResult() {}. };. struct Geant4ActionCreation {. template <typename H,typename T> static H cr(KernelHandle& kernel, const std::string& name_type, bool shared) {. T action(*kernel.get(),name_type,shared);. H handle(action.get());. return handle;. }. static ActionHandle createAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<ActionHandle,Setup::Action>(kernel,name_type,shared); }. static FilterHandle createFilter(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<FilterHandle,Setup::Filter>(kernel,name_type,shared); }. static PhaseActionHandle createPhaseAction(KernelHandle& kernel, const std::string& name_type, bool shared) . { return cr<PhaseActionHandle,Setup::PhaseAction>(kernel,name_type,shared); }. static PhysicsListHandle createPhysicsList(KernelHandle& kernel, const std::string& name_type). { return cr<PhysicsListHandle,Setup::PhysicsList>(kernel,name_type,false); }. static RunActionHandle createRunAc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42676,usability,User,UserInitializationHandle,42676,"ndle createTrackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<TrackingActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:42788,usability,User,UserInitializationHandle,42788,"ActionHandle,Setup::TrackAction>(kernel,name_type,shared); }. static SteppingActionHandle createSteppingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<SteppingActionHandle,Setup::StepAction>(kernel,name_type,shared); }. static StackingActionHandle createStackingAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<StackingActionHandle,Setup::StackAction>(kernel,name_type,shared); }. . static GeneratorActionHandle createGeneratorAction(KernelHandle& kernel, const std::string& name_type, bool shared). { return cr<GeneratorActionHandle,Setup::GenAction>(kernel,name_type,shared); }. . static DetectorConstructionHandle createDetectorConstruction(KernelHandle& kernel, const std::string& name_type). { return cr<DetectorConstructionHandle,Setup::DetectorConstruction>(kernel,name_type,false); }. . static UserInitializationHandle createUserInitialization(KernelHandle& kernel, const std::string& name_type). {	return UserInitializationHandle(Setup::Initialization(*kernel.get(),name_type,false).get());}. . static SensitiveHandle createSensitive(KernelHandle& kernel, const std::string& name_type, const std::string& detector, bool shared). {	return SensitiveHandle(Setup::Sensitive(*kernel.get(),name_type,detector,shared).get()); }. . static SensDetActionSequenceHandle createSensDetSequence(KernelHandle& kernel, const std::string& name_type). {	return cr<SensDetActionSequenceHandle,Setup::SensitiveSeq>(kernel,name_type,false); }. . static Geant4Action* toAction(Geant4Filter* f) { return f; }. static Geant4Action* toAction(Geant4Action* f) { return f; }. static Geant4Action* toAction(Geant4PhaseAction* f) { return f; }. static Geant4Action* toAction(Geant4Sensitive* f) { return f; }. static Geant4Action* toAction(Geant4PhysicsList* f) { return f; }. static Geant4Action* toAction(Geant4RunAction* f) { return f; }. static Geant4Action* toAction(Geant4EventAction* f) { return f; }. static Geant4Action* toAction(Geant4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46476,usability,User,UserInitializationHandle,46476,"ction* toAction(TrackingActionHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:46556,usability,User,UserInitializationSequenceHandle,46556,"oAction(SteppingActionHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionHandle f) { return f.action; }. static Geant4Action* toAction(GeneratorActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(RunActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(EventActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(TrackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SteppingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(StackingActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(PhysicsListActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(SensDetActionSequenceHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationHandle f) { return f.action; }. static Geant4Action* toAction(UserInitializationSequenceHandle f){ return f.action; }. static Geant4Action* toAction(DetectorConstructionHandle f) { return f.action; }. static Geant4Action* toAction(DetectorConstructionSequenceHandle f){ return f.action; }. static PropertyResult getProperty(Geant4Action* action, const std::string& name) {. if ( action->hasProperty(name) ) {. return PropertyResult(action->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setProperty(Geant4Action* action, const std::string& name, const std::string& value) {. if ( action->hasProperty(name) ) {. action->property(name).str(value);. return 1;. }. return 0;. }. static PropertyResult getPropertyKernel(Geant4Kernel* kernel, const std::string& name) {. if ( kernel->hasProperty(name) ) {. return PropertyResult(kernel->property(name).str(),1);. }. return PropertyResult("""",0);. }. static int setPropertyKernel(Geant4Kernel* kernel, const std::string& name, const std::string& value) {. if ( kernel->hasProperty(name) ) {. kernel->property(n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52279,usability,User,UserInitializationHandle,52279,enceHandle;. #pragma link C++ class dd4hep::sim::Geant4StackingActionSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:52342,usability,User,UserInitializationSequenceHandle,52342,onSequence;. #pragma link C++ class dd4hep::sim::TrackingActionHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingAction;. #pragma link C++ class dd4hep::sim::TrackingActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4TrackingActionSequence;. #pragma link C++ class dd4hep::sim::GeneratorActionHandle;. #pragma link C++ class dd4hep::sim::GeneratorActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4GeneratorActionSequence;. #pragma link C++ class dd4hep::sim::Geant4GeneratorAction;. #pragma link C++ class dd4hep::sim::Geant4InputAction;. #pragma link C++ class dd4hep::sim::Geant4EventReader;. #pragma link C++ class dd4hep::sim::PhysicsListHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsList;. #pragma link C++ class dd4hep::sim::PhysicsListActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4PhysicsListActionSequence;. #pragma link C++ class dd4hep::sim::UserInitializationHandle;. #pragma link C++ class dd4hep::sim::UserInitializationSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4UserInitializationSequence;. #pragma link C++ class dd4hep::sim::Geant4UserInitialization;. #pragma link C++ class dd4hep::sim::DetectorConstructionHandle;. #pragma link C++ class dd4hep::sim::DetectorConstructionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstructionSequence;. #pragma link C++ class dd4hep::sim::Geant4DetectorConstruction;. #pragma link C++ class dd4hep::sim::SensitiveHandle;. #pragma link C++ class dd4hep::sim::SensDetActionSequenceHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionSD;. #pragma link C++ class dd4hep::sim::Geant4Sensitive;. #pragma link C++ class dd4hep::sim::Geant4SensDetActionSequence;. #pragma link C++ class dd4hep::sim::FilterHandle;. #pragma link C++ class dd4hep::sim::Geant4Filter;. #pragma link C++ class dd4hep::sim::Geant4GeneratorWrapper;. #pragma link C++ class dd4hep::sim::PhaseActionHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54285,usability,Error,Error,54285,onHandle;. #pragma link C++ class dd4hep::sim::Geant4ActionPhase;. #pragma link C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54447,usability,Error,Error,54447,;. #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components. #pragma link C++ class dd4hep::sim::Geant4DataDump;. #pragma link C++ class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54609,usability,Error,Error,54609,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54771,usability,Error,Error,54771,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:54938,usability,Error,Error,54938,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55105,usability,Error,Error,55105,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55272,usability,Error,Error,55272,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:55439,usability,Error,Error,55439,class dd4hep::sim::Geant4Random;. #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;. #pragma link C++ class dd4hep::sim::Geant4UIManager;. #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here. //namespace detail {}. //#pragma link C++ namespace detail;. #endif. // CLHEP stuff. #include <CLHEP/Random/Random.h>. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;. #pragma link C++ class CLHEP::HepRandom;. #pragma link C++ class CLHEP::HepRandomEngine;. #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25,deployability,fail,fails,25,The reproducer no longer fails in ROOT 6.32/04,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:25,reliability,fail,fails,25,The reproducer no longer fails in ROOT 6.32/04,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/pull/15222:15,availability,failur,failures,15,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:50,availability,FAILUR,FAILURES,50,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:15,deployability,fail,failures,15,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:50,deployability,FAIL,FAILURES,50,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:233,deployability,loader,loadernotapp-build,233,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:277,deployability,loader,loadernotapp,277,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:346,deployability,build,build,346,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:233,energy efficiency,load,loadernotapp-build,233,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:277,energy efficiency,load,loadernotapp,277,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:15,performance,failur,failures,15,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:50,performance,FAILUR,FAILURES,50,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:233,performance,load,loadernotapp-build,233,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:277,performance,load,loadernotapp,277,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:15,reliability,fail,failures,15,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:50,reliability,FAIL,FAILURES,50,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:45,safety,TEST,TEST,45,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:45,testability,TEST,TEST,45,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15222:333,testability,emul,emulatePairs-build,333,Windows 10 x64 failures are unrelated:. ```. TEST FAILURES:. 1330:roottest-cling-template-runtemplatefriend. 1736:roottest-root-io-transient-base-WriteFile. 1737:roottest-root-io-transient-base-hadd_autoload. 1785:roottest-root-meta-loadernotapp-build. 1786:roottest-root-meta-loadernotapp. 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15222
https://github.com/root-project/root/pull/15227:39,testability,simpl,simple-function-working-with-,39,Following https://root-forum.cern.ch/t/simple-function-working-with-6-28-04-but-not-with-6-30-04/58975,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15227
https://github.com/root-project/root/pull/15227:39,usability,simpl,simple-function-working-with-,39,Following https://root-forum.cern.ch/t/simple-function-working-with-6-28-04-but-not-with-6-30-04/58975,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15227
https://github.com/root-project/root/pull/15228:397,availability,Error,Error,397,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:490,availability,error,error,490,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:183,interoperability,bind,bindings,183,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:429,interoperability,bind,bindings,429,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:599,interoperability,bind,bindings,599,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:183,modifiability,bind,bindings,183,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:429,modifiability,bind,bindings,429,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:599,modifiability,bind,bindings,599,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:397,performance,Error,Error,397,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:490,performance,error,error,490,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:397,safety,Error,Error,397,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:490,safety,error,error,490,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:521,security,token,token,521,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:397,usability,Error,Error,397,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:490,usability,error,error,490,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):. ```txt. /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:. Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token. 38 | (fArgsRequired <= nargs-1) {. | ^~. | ). /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’. 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \. | . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:240,deployability,patch,patch,240,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:207,reliability,Doe,Does,207,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:240,safety,patch,patch,240,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:111,security,auth,authorship,111,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:240,security,patch,patch,240,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:186,usability,command,command,186,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:303,usability,Document,Documentation,303,> Thank you! This one should be backported to 6.32 I think. > . > I didn't know that it's possible to preserve authorship in the commits when porting them to a different repo! Which git command did you use? Does is just magically work with patch files? Maybe he used: https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---allow-unrelated-histories,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:44,deployability,updat,updated,44,"@vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:44,safety,updat,updated,44,"@vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:44,security,updat,updated,44,"@vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:46,deployability,updat,updated,46,"> @vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly. Sorry I didn't see this comment before re-pushing the commits! Anyway, now the changes should be good, let's see if the CI agrees",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:46,safety,updat,updated,46,"> @vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly. Sorry I didn't see this comment before re-pushing the commits! Anyway, now the changes should be good, let's see if the CI agrees",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:46,security,updat,updated,46,"> @vepadulano is travelling to Fermilab, so I updated this PR instead. Then it can be merged and backported quickly. Sorry I didn't see this comment before re-pushing the commits! Anyway, now the changes should be good, let's see if the CI agrees",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15228:3,reliability,doe,does,3,It does! I'll take care of the backport then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15228
https://github.com/root-project/root/pull/15232:290,usability,command,command,290,"> @ferdymercury it seems I didn't follow the coding convention of root, what would be the best way to fix it? The instructions are here at the bottom:. https://github.com/root-project/root/actions/runs/8688050309/job/23860940934?pr=15232. You might need to remove the -7 from the suggested command",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:29,modifiability,inherit,inheritance,29,"And also, if you look at the inheritance diagram of TGraph:. <img width=""689"" alt=""Screenshot 2024-04-18 at 08 47 17"" src=""https://github.com/root-project/root/assets/4697738/c8f63171-4092-4f4a-af7e-ed7e1c0e36c6"">. you will notice that TGraphAsymmErrors TGraphBentErrors and TGraphMultiErrors will miss this new method. To be complete it should be added there too. Similarly, it should be also added in TGrpha2DAssymErrors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:326,safety,compl,complete,326,"And also, if you look at the inheritance diagram of TGraph:. <img width=""689"" alt=""Screenshot 2024-04-18 at 08 47 17"" src=""https://github.com/root-project/root/assets/4697738/c8f63171-4092-4f4a-af7e-ed7e1c0e36c6"">. you will notice that TGraphAsymmErrors TGraphBentErrors and TGraphMultiErrors will miss this new method. To be complete it should be added there too. Similarly, it should be also added in TGrpha2DAssymErrors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:326,security,compl,complete,326,"And also, if you look at the inheritance diagram of TGraph:. <img width=""689"" alt=""Screenshot 2024-04-18 at 08 47 17"" src=""https://github.com/root-project/root/assets/4697738/c8f63171-4092-4f4a-af7e-ed7e1c0e36c6"">. you will notice that TGraphAsymmErrors TGraphBentErrors and TGraphMultiErrors will miss this new method. To be complete it should be added there too. Similarly, it should be also added in TGrpha2DAssymErrors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:240,deployability,updat,update,240,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:240,safety,updat,update,240,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:45,security,modif,modify,45,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:90,security,modif,modifying,90,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:240,security,updat,update,240,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:213,usability,experien,experience,213,"@couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:260,availability,error,error,260,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:242,deployability,updat,update,242,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:260,performance,error,error,260,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:242,safety,updat,update,242,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:260,safety,error,error,260,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:47,security,modif,modify,47,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:92,security,modif,modifying,92,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:242,security,updat,update,242,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:215,usability,experien,experience,215,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:260,usability,error,error,260,"> @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. What error do you encounter if you try with:. ```. void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. AddPoint(x,y);. SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:268,availability,error,error,268,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:646,availability,error,errors,646,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:791,availability,error,errors,791,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:244,deployability,updat,update,244,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:662,deployability,depend,depends,662,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:662,integrability,depend,depends,662,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:662,modifiability,depend,depends,662,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:268,performance,error,error,268,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:646,performance,error,errors,646,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:791,performance,error,errors,791,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:244,safety,updat,update,244,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:268,safety,error,error,268,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:646,safety,error,errors,646,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:662,safety,depend,depends,662,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:791,safety,error,errors,791,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:49,security,modif,modify,49,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:94,security,modif,modifying,94,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:244,security,updat,update,244,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:662,testability,depend,depends,662,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:217,usability,experien,experience,217,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:268,usability,error,error,268,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:630,usability,effectiv,effectively,630,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:646,usability,error,errors,646,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:791,usability,error,errors,791,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them. > . > What error do you encounter if you try with:. > . > ```. > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {. > AddPoint(x,y);. > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);. > }. > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:15,availability,failur,failures,15,There is still failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:15,deployability,fail,failures,15,There is still failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:15,performance,failur,failures,15,There is still failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:15,reliability,fail,failures,15,There is still failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:17,availability,failur,failures,17,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:17,deployability,fail,failures,17,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:45,energy efficiency,current,current,45,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:17,performance,failur,failures,17,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:17,reliability,fail,failures,17,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:60,usability,help,helps,60,> There is still failures. Maybe rebasing to current master helps with those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:19,availability,failur,failures,19,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:469,availability,error,error,469,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:630,availability,Error,Error,630,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:742,availability,Error,Error,742,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:19,deployability,fail,failures,19,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:102,deployability,build,build,102,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:112,deployability,fail,failed,112,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:154,deployability,log,log,154,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:269,deployability,depend,dependencies,269,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:337,deployability,depend,dependencies,337,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:381,deployability,Build,Building,381,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:573,deployability,build,build,573,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:792,deployability,fail,failed,792,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:53,energy efficiency,current,current,53,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:269,integrability,depend,dependencies,269,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:337,integrability,depend,dependencies,337,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:269,modifiability,depend,dependencies,269,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:337,modifiability,depend,dependencies,337,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:19,performance,failur,failures,19,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:469,performance,error,error,469,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:630,performance,Error,Error,630,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:742,performance,Error,Error,742,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:19,reliability,fail,failures,19,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:112,reliability,fail,failed,112,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:792,reliability,fail,failed,792,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:154,safety,log,log,154,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:269,safety,depend,dependencies,269,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:337,safety,depend,dependencies,337,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:469,safety,error,error,469,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:529,safety,test,test,529,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:545,safety,Test,TestRModelParserPyTorch,545,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:600,safety,test,test,600,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:605,safety,Test,TestRModelParserPyTorch,605,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:630,safety,Error,Error,630,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:693,safety,test,test,693,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:709,safety,Test,TestRModelParserPyTorch,709,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:742,safety,Error,Error,742,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:807,safety,test,tested,807,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:154,security,log,log,154,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:139,testability,understand,understand,139,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:154,testability,log,log,154,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:269,testability,depend,dependencies,269,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:337,testability,depend,dependencies,337,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:529,testability,test,test,529,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:545,testability,Test,TestRModelParserPyTorch,545,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:600,testability,test,test,600,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:605,testability,Test,TestRModelParserPyTorch,605,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:693,testability,test,test,693,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:709,testability,Test,TestRModelParserPyTorch,709,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:807,testability,test,tested,807,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:68,usability,help,helps,68,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:469,usability,error,error,469,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:495,usability,statu,status,495,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:630,usability,Error,Error,630,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:742,usability,Error,Error,742,"> > There is still failures. > . > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:. ```. [ 98%] Linking CXX executable emitGraphIndependent. /usr/bin/ld: cannot find -lblas. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. collect2: error: ld returned 1 exit status. gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2. ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:38,deployability,fail,failed,38,"> Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. To solve it, go to your fork on GitHub, master branch, click on Sync Fork. Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. Finally, call git push -f add_point to end the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:38,reliability,fail,failed,38,"> Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. To solve it, go to your fork on GitHub, master branch, click on Sync Fork. Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. Finally, call git push -f add_point to end the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:53,safety,test,tested,53,"> Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. To solve it, go to your fork on GitHub, master branch, click on Sync Fork. Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. Finally, call git push -f add_point to end the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:53,testability,test,tested,53,"> Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. To solve it, go to your fork on GitHub, master branch, click on Sync Fork. Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. Finally, call git push -f add_point to end the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:301,usability,interact,interactive,301,"> Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. To solve it, go to your fork on GitHub, master branch, click on Sync Fork. Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. Finally, call git push -f add_point to end the rebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:40,deployability,fail,failed,40,"> > Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. > . > To solve it, go to your fork on GitHub, master branch, click on Sync Fork. > . > Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. > . > Finally, call git push -f add_point to end the rebase. Ok, now my master branch is in sync with the mainstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:40,reliability,fail,failed,40,"> > Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. > . > To solve it, go to your fork on GitHub, master branch, click on Sync Fork. > . > Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. > . > Finally, call git push -f add_point to end the rebase. Ok, now my master branch is in sync with the mainstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:55,safety,test,tested,55,"> > Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. > . > To solve it, go to your fork on GitHub, master branch, click on Sync Fork. > . > Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. > . > Finally, call git push -f add_point to end the rebase. Ok, now my master branch is in sync with the mainstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:55,testability,test,tested,55,"> > Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. > . > To solve it, go to your fork on GitHub, master branch, click on Sync Fork. > . > Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. > . > Finally, call git push -f add_point to end the rebase. Ok, now my master branch is in sync with the mainstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:315,usability,interact,interactive,315,"> > Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked. > . > To solve it, go to your fork on GitHub, master branch, click on Sync Fork. > . > Then go to your terminal, git pull your master branch. Then checkout your branch add_point. Call git rebase --interactive master. > . > Finally, call git push -f add_point to end the rebase. Ok, now my master branch is in sync with the mainstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:13,interoperability,format,formatting,13,I fixed some formatting to make clang happy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:32,energy efficiency,green,green,32,Thanks a lot ! @couet all looks green now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:40,energy efficiency,green,green,40,> Thanks a lot ! > . > @couet all looks green now. Thanks for your help!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:67,usability,help,help,67,> Thanks a lot ! > . > @couet all looks green now. Thanks for your help!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/issues/15234:9,energy efficiency,current,current,9,"Yes, the current implementation uses the `NoCast` binding: https://github.com/wlav/CPyCppyy/blob/master/src/CustomPyTypes.cxx#L414",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:50,interoperability,bind,binding,50,"Yes, the current implementation uses the `NoCast` binding: https://github.com/wlav/CPyCppyy/blob/master/src/CustomPyTypes.cxx#L414",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:50,modifiability,bind,binding,50,"Yes, the current implementation uses the `NoCast` binding: https://github.com/wlav/CPyCppyy/blob/master/src/CustomPyTypes.cxx#L414",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:108,usability,Custom,CustomPyTypes,108,"Yes, the current implementation uses the `NoCast` binding: https://github.com/wlav/CPyCppyy/blob/master/src/CustomPyTypes.cxx#L414",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/pull/15236:104,deployability,contain,container,104,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:157,deployability,instal,installed,157,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:195,deployability,build,builds,195,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:206,energy efficiency,current,currently,206,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:5,reliability,doe,does,5,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:41,deployability,instal,installation,41,"They are red, it is expected because the installation of the package in the containers should happen the next day. We need to see the results tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:76,deployability,contain,containers,76,"They are red, it is expected because the installation of the package in the containers should happen the next day. We need to see the results tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:61,modifiability,pac,package,61,"They are red, it is expected because the installation of the package in the containers should happen the next day. We need to see the results tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:0,deployability,Instal,Installation,0,"Installation in the containers happens from `requirements.txt` present in `master`. As of now, that one doesn't have entries for `tensorflow` and `torch` (that's why I called these two out) and the result will be the same as today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:20,deployability,contain,containers,20,"Installation in the containers happens from `requirements.txt` present in `master`. As of now, that one doesn't have entries for `tensorflow` and `torch` (that's why I called these two out) and the result will be the same as today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15236:104,reliability,doe,doesn,104,"Installation in the containers happens from `requirements.txt` present in `master`. As of now, that one doesn't have entries for `tensorflow` and `torch` (that's why I called these two out) and the result will be the same as today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15237:44,safety,test,test,44,Can you just add the two commits fixing the test? I have #15236 adding already xgboost and scikit-learn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15237
https://github.com/root-project/root/pull/15237:44,testability,test,test,44,Can you just add the two commits fixing the test? I have #15236 adding already xgboost and scikit-learn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15237
https://github.com/root-project/root/pull/15237:98,usability,learn,learn,98,Can you just add the two commits fixing the test? I have #15236 adding already xgboost and scikit-learn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15237
https://github.com/root-project/root/pull/15242:317,deployability,build,build,317,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:144,security,hardcod,hardcode,144,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:303,testability,simpl,simple,303,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:8,usability,confirm,confirm,8,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:303,usability,simpl,simple,303,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:310,usability,custom,custom,310,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15244:90,safety,compl,complain,90,"Thanks! I didn't want to do the removal last year just to have a few months for people to complain that `netx` became dead code that they can't compile anymore. This hasn't been the case, so indeed the next development cycle after 6.32 is the good moment to remove this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:90,security,compl,complain,90,"Thanks! I didn't want to do the removal last year just to have a few months for people to complain that `netx` became dead code that they can't compile anymore. This hasn't been the case, so indeed the next development cycle after 6.32 is the good moment to remove this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:116,deployability,build,build,116,"Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:19,energy efficiency,Current,Currently,19,"Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:84,energy efficiency,cool,cool,84,"Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:122,performance,time,time,122,"Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:92,safety,avoid,avoid,92,"Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:118,deployability,build,build,118,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:21,energy efficiency,Current,Currently,21,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:86,energy efficiency,cool,cool,86,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:124,performance,time,time,124,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:94,safety,avoid,avoid,94,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:210,usability,user,user,210,"> Can we merge this? Currently `net/netx` is still built I think, and and it would be cool to avoid the corresponding build time and binary sizes! No, as explained in the first commit it's not built unless the user really explicitly sets `-Dnetx=ON`. I put it on the agenda for the meeting today, just to make sure nobody has objections (because it was never formally deprecated).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15246:112,integrability,sub,subclass,112,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:125,integrability,wrap,wrapped,125,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:313,integrability,sub,subclasses,313,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:25,reliability,doe,does,25,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:208,usability,behavi,behavior,208,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:54,integrability,sub,subclasses,54,"> Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used? Yes, that's what I want to say. I will think about a clearer formulation... (or maybe you have a proposal?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:206,usability,clear,clearer,206,"> Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used? Yes, that's what I want to say. I will think about a clearer formulation... (or maybe you have a proposal?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:122,integrability,messag,message,122,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:122,interoperability,messag,message,122,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:97,usability,document,documentation,97,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:177,usability,clear,clear,177,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:148,energy efficiency,Model,Model,148,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:42,integrability,messag,message,42,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:42,interoperability,messag,message,42,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:148,security,Model,Model,148,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:17,usability,document,documentation,17,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:97,usability,clear,clear,97,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15246:170,usability,clear,clear,170,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now? To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15264:103,deployability,contain,contained,103,"This PR is now blocked by https://github.com/root-project/root/pull/15400, which extrapolates a bugfix contained in the second commit to ease the review process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:146,safety,review,review,146,"This PR is now blocked by https://github.com/root-project/root/pull/15400, which extrapolates a bugfix contained in the second commit to ease the review process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:146,testability,review,review,146,"This PR is now blocked by https://github.com/root-project/root/pull/15400, which extrapolates a bugfix contained in the second commit to ease the review process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:4,deployability,fail,failing,4,"The failing test is unrelated (JupyROOT), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:4,reliability,fail,failing,4,"The failing test is unrelated (JupyROOT), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:12,safety,test,test,12,"The failing test is unrelated (JupyROOT), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/pull/15264:12,testability,test,test,12,"The failing test is unrelated (JupyROOT), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15264
https://github.com/root-project/root/issues/15269:79,availability,down,down,79,"Just found that the problem appears in 6.30/04 as well, so at least can narrow down the change to between 6.30/02 and 6.30/04 .... tested with `source /cvmfs/sft.cern.ch/lcg/views/LCG_105a/x86_64-el9-gcc13-opt/setup.sh` (6.30/04) vs `source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh` (6.30/02)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:131,safety,test,tested,131,"Just found that the problem appears in 6.30/04 as well, so at least can narrow down the change to between 6.30/02 and 6.30/04 .... tested with `source /cvmfs/sft.cern.ch/lcg/views/LCG_105a/x86_64-el9-gcc13-opt/setup.sh` (6.30/04) vs `source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh` (6.30/02)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:131,testability,test,tested,131,"Just found that the problem appears in 6.30/04 as well, so at least can narrow down the change to between 6.30/02 and 6.30/04 .... tested with `source /cvmfs/sft.cern.ch/lcg/views/LCG_105a/x86_64-el9-gcc13-opt/setup.sh` (6.30/04) vs `source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh` (6.30/02)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:165,availability,error,error,165,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:285,availability,operat,operator,285,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:353,availability,operat,operator,353,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:482,availability,error,error,482,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:499,deployability,stack,stackoverflow,499,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:165,performance,error,error,165,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:482,performance,error,error,482,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:165,safety,error,error,165,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:482,safety,error,error,482,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:165,usability,error,error,165,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:482,usability,error,error,482,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:587,usability,person,person,587,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```. decltype(auto) operator*() const. ```. with. ```. const std::shared_ptr<xRooNode>& operator*() const. ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:77,deployability,updat,updates,77,"Hi @will-cern . Looks like the issue no longer exists with the latest PyROOT updates:. ```. (root_venv) ➜ ROOT python. Python 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x906dac0>. >>> ROOT.gROOT.GetVersion(). '6.33.01'. >>> . ```. Closing as this issue is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:77,safety,updat,updates,77,"Hi @will-cern . Looks like the issue no longer exists with the latest PyROOT updates:. ```. (root_venv) ➜ ROOT python. Python 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x906dac0>. >>> ROOT.gROOT.GetVersion(). '6.33.01'. >>> . ```. Closing as this issue is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:77,security,updat,updates,77,"Hi @will-cern . Looks like the issue no longer exists with the latest PyROOT updates:. ```. (root_venv) ➜ ROOT python. Python 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x906dac0>. >>> ROOT.gROOT.GetVersion(). '6.33.01'. >>> . ```. Closing as this issue is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15269:192,usability,help,help,192,"Hi @will-cern . Looks like the issue no longer exists with the latest PyROOT updates:. ```. (root_venv) ➜ ROOT python. Python 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> from ROOT.Experimental import XRooFit. >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""). xRooNode{}. >>> for c in w: print(type(c)). ... . <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x906dac0>. >>> ROOT.gROOT.GetVersion(). '6.33.01'. >>> . ```. Closing as this issue is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/pull/15272:382,availability,avail,availability,382,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:91,modifiability,concern,concerns,91,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:139,modifiability,pac,packages,139,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:287,modifiability,pac,packages,287,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:357,modifiability,pac,packages,357,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:382,reliability,availab,availability,382,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:549,reliability,doe,doesn,549,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:6,safety,test,test,6,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:105,safety,test,test,105,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:235,safety,test,tests,235,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:347,safety,test,test,347,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:382,safety,avail,availability,382,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:524,safety,test,test,524,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:594,safety,compl,completely,594,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:616,safety,test,test,616,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:382,security,availab,availability,382,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:594,security,compl,completely,594,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:6,testability,test,test,6,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:91,testability,concern,concerns,91,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:105,testability,test,test,105,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:235,testability,test,tests,235,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:347,testability,test,test,347,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:524,testability,test,test,524,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:616,testability,test,test,616,"> Our test suite is driven via `ctest`, so whatever `ctest` thinks is ""the truth"" for what concerns that test run. If it cannot find those packages, then they are not there for all intents and purposes. In all other `ctest`-run Python tests it works just fine, because the importing the packages with `import` always works. It's just that in this test, the packages are checked for availability with the deprecated `pkg_resources.require()`. So what `ctest` thinks is the truth is inconsistent, hence my conclusion that the test is broken. But that doesn't matter anymore, since you suggest to completely remove the test :smile: Thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15274:14,deployability,build,builds,14,restarted the builds since they were red for other reasons.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:28,usability,close,close,28,Thanks!! Gentle reminder to close associated JIRA issue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15275:18,availability,failur,failures,18,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:12,deployability,build,build,12,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:18,deployability,fail,failures,18,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:54,deployability,depend,dependencies,54,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:122,deployability,depend,dependencies,122,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:166,deployability,Build,Building,166,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:54,integrability,depend,dependencies,54,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:122,integrability,depend,dependencies,122,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:54,modifiability,depend,dependencies,54,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:122,modifiability,depend,dependencies,122,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:18,performance,failur,failures,18,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:18,reliability,fail,failures,18,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:54,safety,depend,dependencies,54,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:122,safety,depend,dependencies,122,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:274,safety,Test,TestRModelParserPyTorch,274,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:54,testability,depend,dependencies,54,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:122,testability,depend,dependencies,122,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:274,testability,Test,TestRModelParserPyTorch,274,"I see these build failures on `alma9`:. ```. Scanning dependencies of target G__TMVAUtils. Consolidate compiler generated dependencies of target G__TMVAUtils. [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o. [ 98%] Linking CXX executable TestRModelParserPyTorch. /usr/bin/ld: cannot find -lblas. ```. But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15275:62,deployability,build,build,62,"Merging now, so I can make a bulk backport of the recent TMVA build fixes to the other branches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15275
https://github.com/root-project/root/pull/15283:14,deployability,build,builds,14,"Rerunning all builds on linux given the unfortunate crashes, not related to this work, but hopefully fixed. Thanks a lot for this PR @ferdymercury !!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:36,deployability,build,builds,36,"> LGTM too, provided that the Linux builds succeed. Thanks! Looking green now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:68,energy efficiency,green,green,68,"> LGTM too, provided that the Linux builds succeed. Thanks! Looking green now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:4,availability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:4,performance,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:4,safety,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:4,usability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15288:14,availability,failur,failures,14,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:14,deployability,fail,failures,14,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:87,deployability,updat,updated,87,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:74,interoperability,platform,platforms,74,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:126,modifiability,pac,package,126,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:14,performance,failur,failures,14,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:14,reliability,fail,failures,14,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:87,safety,updat,updated,87,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15288:87,security,updat,updated,87,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:. https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15288
https://github.com/root-project/root/pull/15293:333,deployability,updat,updated,333,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:492,deployability,build,builds,492,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:416,interoperability,platform,platforms,416,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:213,performance,disk,disk,213,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:180,safety,avoid,avoid,180,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:333,safety,updat,updated,333,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:396,safety,test,test,396,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:333,security,updat,updated,333,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:455,security,assess,assess,455,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15293:396,testability,test,test,396,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15293
https://github.com/root-project/root/pull/15300:57,availability,error,error,57,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:215,availability,error,error,215,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:359,availability,error,error,359,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:554,availability,Error,Error,554,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:643,availability,Error,Error,643,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17,deployability,build,build,17,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:488,deployability,build,build,488,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:929,deployability,observ,observation,929,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:40,integrability,messag,messages,40,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:180,integrability,messag,messages,180,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:40,interoperability,messag,messages,40,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:153,interoperability,standard,standard,153,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:180,interoperability,messag,messages,180,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:192,interoperability,standard,standard,192,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:336,interoperability,standard,standard,336,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:57,performance,error,error,57,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:215,performance,error,error,215,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:359,performance,error,error,359,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:554,performance,Error,Error,554,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:643,performance,Error,Error,643,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:57,safety,error,error,57,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:162,safety,input,input,162,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:201,safety,input,input,201,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:215,safety,error,error,215,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:345,safety,input,input,345,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:359,safety,error,error,359,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:554,safety,Error,Error,554,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:643,safety,Error,Error,643,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:929,testability,observ,observation,929,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:57,usability,error,error,57,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:162,usability,input,input,162,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:201,usability,input,input,201,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:215,usability,error,error,215,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:345,usability,input,input,345,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:359,usability,error,error,359,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:372,usability,close,close,372,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:554,usability,Error,Error,554,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:643,usability,Error,Error,643,"From the `alma8` build:. ```. Assembler messages:. Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device. {standard input}: Assembler messages:. {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'. {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device. gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... ```. Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15306:106,deployability,depend,dependencies,106,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:106,integrability,depend,dependencies,106,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:106,modifiability,depend,dependencies,106,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:9,safety,test,test,9,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:101,safety,test,test,101,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:106,safety,depend,dependencies,106,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:9,testability,test,test,9,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:101,testability,test,test,101,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:106,testability,depend,dependencies,106,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:24,usability,learn,learned,24,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:. https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/issues/15309:17,deployability,version,version,17,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:154,deployability,version,version,154,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:550,deployability,configurat,configuration,550,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:577,deployability,configurat,configuration,577,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:848,deployability,modul,module,848,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:988,deployability,instal,installed,988,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:17,integrability,version,version,17,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:154,integrability,version,version,154,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:436,integrability,wrap,wrapper,436,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:550,integrability,configur,configuration,550,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:577,integrability,configur,configuration,577,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:436,interoperability,wrapper,wrapper,436,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:17,modifiability,version,version,17,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:154,modifiability,version,version,154,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:550,modifiability,configur,configuration,550,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:577,modifiability,configur,configuration,577,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:678,modifiability,pac,package,678,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:848,modifiability,modul,module,848,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:696,reliability,doe,does,696,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:848,safety,modul,module,848,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:550,security,configur,configuration,550,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:577,security,configur,configuration,577,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:344,usability,interact,interact,344,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy. python3-numpy-1.20.1-5.el9.x86_64. # rpm -q --requires python3-numpy | grep blas. libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva. root-tmva-6.30.06-1.el9.x86_64. # rpm -q --requires root-tmva | grep blas. libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:89,deployability,configurat,configuration,89,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:354,deployability,instal,installed,354,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:89,integrability,configur,configuration,89,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:89,modifiability,configur,configuration,89,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:339,modifiability,pac,package,339,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:89,security,configur,configuration,89,"Thanks, that's a very valuable insight! Indeed, on `alma9` it picked up flexiblas at the configuration:. https://github.com/root-project/root/actions/runs/8785067526/job/24104668181. ```. -- Found BLAS: /usr/lib64/libflexiblas.so . ```. The probably the symbol clash came from mixing flexiblas from the system with openblas from the numpy package that's installed with pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/pull/15310:44,availability,failur,failures,44,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:44,deployability,fail,failures,44,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:44,performance,failur,failures,44,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:44,reliability,fail,failures,44,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:20,safety,test,tests,20,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:20,testability,test,tests,20,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:115,deployability,manag,manage,115,"@guitargeek it seems this generates several segfaults, basically on all plarforms, but only for some tests: do you manage to make sense of those?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:115,energy efficiency,manag,manage,115,"@guitargeek it seems this generates several segfaults, basically on all plarforms, but only for some tests: do you manage to make sense of those?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:101,safety,test,tests,101,"@guitargeek it seems this generates several segfaults, basically on all plarforms, but only for some tests: do you manage to make sense of those?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:115,safety,manag,manage,115,"@guitargeek it seems this generates several segfaults, basically on all plarforms, but only for some tests: do you manage to make sense of those?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:101,testability,test,tests,101,"@guitargeek it seems this generates several segfaults, basically on all plarforms, but only for some tests: do you manage to make sense of those?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15312:22,deployability,depend,dependency,22,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:40,deployability,instal,installed,40,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:22,integrability,depend,dependency,22,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:22,modifiability,depend,dependency,22,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:22,safety,depend,dependency,22,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:82,safety,test,tested,82,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:22,testability,depend,dependency,22,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:82,testability,test,tested,82,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15313:57,interoperability,format,format,57,"Hi @linev, it looks like this PR did not pass the `clang-format` check, which is now affecting new PRs (e.g., #15084). Could you fix the formatting? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:137,interoperability,format,formatting,137,"Hi @linev, it looks like this PR did not pass the `clang-format` check, which is now affecting new PRs (e.g., #15084). Could you fix the formatting? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:108,interoperability,format,format,108,@enirolf Strange that changes in webgui has effect on ntuple PRs. ROOT source code by 95% do not pass clang-format test - especially header files. Therefore I often ignore this warning during PRs - otherwise header files formatting will be confusing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:221,interoperability,format,formatting,221,@enirolf Strange that changes in webgui has effect on ntuple PRs. ROOT source code by 95% do not pass clang-format test - especially header files. Therefore I often ignore this warning during PRs - otherwise header files formatting will be confusing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:115,safety,test,test,115,@enirolf Strange that changes in webgui has effect on ntuple PRs. ROOT source code by 95% do not pass clang-format test - especially header files. Therefore I often ignore this warning during PRs - otherwise header files formatting will be confusing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:115,testability,test,test,115,@enirolf Strange that changes in webgui has effect on ntuple PRs. ROOT source code by 95% do not pass clang-format test - especially header files. Therefore I often ignore this warning during PRs - otherwise header files formatting will be confusing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/issues/15315:519,deployability,fail,fails,519,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:59,integrability,inject,inject,59,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:305,interoperability,prox,proxy,305,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:454,interoperability,bind,bindings,454,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:454,modifiability,bind,bindings,454,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:519,reliability,fail,fails,519,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:599,safety,valid,valid,599,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:59,security,inject,inject,59,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:860,usability,user,user-defined,860,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {. PyObject* iself = (PyObject*)_internal_self;. if (!iself || iself == Py_None) {. PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");. return unsigned int{};. }. ```. using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/pull/15316:73,security,access,accessed,73,"I tried with the reported case and the debugger on gdb and indeed k=5 is accessed, but I have no clue why it's not crashing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15316
https://github.com/root-project/root/pull/15316:27,usability,close,close,27,Thanks! Gentle reminder to close JIRA issue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15316
https://github.com/root-project/root/issues/15318:48,reliability,doe,does,48,Do you have the pcm files in $ROOTSYS/lib? What does it expand to? `/opt/o2/lib/`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:79,deployability,modul,modulemap,79,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:79,modifiability,modul,modulemap,79,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:144,modifiability,variab,variable,144,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:79,safety,modul,modulemap,79,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:58,testability,understand,understand,58,"And to add on top of that, I would still be interested to understand where the modulemap files are searched and if there is another environment variable we could set to force the search in /opt/o2/include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:151,modifiability,pac,packaging,151,"Any idea of what might be going on here? To a first loop, we just need a some hint on how to force the lookup, and then we can add a workaround in our packaging instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:78,usability,hint,hint,78,"Any idea of what might be going on here? To a first loop, we just need a some hint on how to force the lookup, and then we can add a workaround in our packaging instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:14,performance,time,time,14,I do not have time to look at this now. Maybe in a week?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:111,deployability,build,build,111,Is there a way for me to reproduce your setup? Can you create some reproducing environment on lxplus with ROOT build in debug mode (`-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug`)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:220,deployability,modul,modulemap,220,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:230,deployability,modul,module,230,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:286,deployability,modul,modulemap,286,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:296,deployability,instal,installed,296,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:411,deployability,modul,module,411,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:418,deployability,modul,modulemap,418,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:472,deployability,modul,module,472,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:479,deployability,modul,modulemap,479,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:47,modifiability,pac,package,47,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:220,modifiability,modul,modulemap,220,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:230,modifiability,modul,module,230,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:286,modifiability,modul,modulemap,286,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:411,modifiability,modul,module,411,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:418,modifiability,modul,modulemap,418,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:472,modifiability,modul,module,472,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:479,modifiability,modul,modulemap,479,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:135,performance,time,time,135,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:220,safety,modul,modulemap,220,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:230,safety,modul,module,230,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:286,safety,modul,modulemap,286,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:411,safety,modul,module,411,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:418,safety,modul,modulemap,418,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:472,safety,modul,module,472,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:479,safety,modul,modulemap,479,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:390,testability,simpl,simply,390,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:390,usability,simpl,simply,390,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? . Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4,deployability,modul,module,4,The module map used by ROOT was renamed recently. Do you also see the problem with v6.32.00?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4,modifiability,modul,module,4,The module map used by ROOT was renamed recently. Do you also see the problem with v6.32.00?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4,safety,modul,module,4,The module map used by ROOT was renamed recently. Do you also see the problem with v6.32.00?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:36,deployability,modul,module,36,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:43,deployability,modul,modulemap,43,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,deployability,modul,module,113,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,deployability,modul,modulemap,120,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:36,modifiability,modul,module,36,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:43,modifiability,modul,modulemap,43,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,modifiability,modul,module,113,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,modifiability,modul,modulemap,120,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:36,safety,modul,module,36,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:43,safety,modul,modulemap,43,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,safety,modul,module,113,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,safety,modul,modulemap,120,"so, if the file is `/opt/o2/include/module.modulemap`, I should do `export CLING_MODULEMAP_FILES=/opt/o2/include/module.modulemap` before calling `root` ? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:61,deployability,fail,fails,61,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:95,deployability,modul,module,95,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:102,deployability,modul,modulemap,102,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:95,modifiability,modul,module,95,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:102,modifiability,modul,modulemap,102,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:21,reliability,doe,does,21,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:61,reliability,fail,fails,61,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:47,safety,compl,complains,47,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:95,safety,modul,module,95,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:102,safety,modul,modulemap,102,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:47,security,compl,complains,47,"> Yes. Strangely, it does not work, root still complains and fails. . Copying `/opt/o2/include/module.modulemap` to `.` still works. . 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:86,deployability,modul,modulemap,86,"Would `EXTRA_CLING_ARGS="" -v ""` produce some useful output that can hint us where the modulemap is being searched for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:86,modifiability,modul,modulemap,86,"Would `EXTRA_CLING_ARGS="" -v ""` produce some useful output that can hint us where the modulemap is being searched for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:86,safety,modul,modulemap,86,"Would `EXTRA_CLING_ARGS="" -v ""` produce some useful output that can hint us where the modulemap is being searched for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:68,usability,hint,hint,68,"Would `EXTRA_CLING_ARGS="" -v ""` produce some useful output that can hint us where the modulemap is being searched for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,deployability,modul,module,113,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,deployability,modul,modulemap,120,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:178,deployability,modul,modulemap,178,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:209,deployability,modul,module,209,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:216,deployability,modul,modulemap,216,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:258,deployability,modul,module,258,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:265,deployability,modul,modulemap,265,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:344,deployability,version,version,344,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1136,deployability,version,version,1136,"exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1207,deployability,Instal,InstalledDir,1207,"le.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1243,deployability,instal,installation,1243,"/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1305,deployability,instal,installation,1305,"ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2356,deployability,modul,module,2356,"date multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2363,deployability,modul,modulemap,2363,"ilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2423,deployability,modul,modulemap,2423,": .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2451,deployability,modul,module,2451,"tent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2458,deployability,modul,modulemap,2458,"ctory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents':",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2561,deployability,modul,module,2561,"nt directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2568,deployability,modul,modulemap,2568,"ory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2627,deployability,modul,modulemap,2627,"de"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2732,deployability,modul,module,2732," search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'dire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2739,deployability,modul,modulemap,2739,"tarts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2768,deployability,modul,module,2768,"e/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2775,deployability,modul,modulemap,2775,"pt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2833,deployability,modul,modulemap,2833,"/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2864,deployability,modul,module,2864,"ude. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2871,deployability,modul,modulemap,2871,"/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2906,deployability,modul,module,2906,"/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2913,deployability,modul,modulemap,2913,"cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2974,deployability,modul,modulemap,2974,"c/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3011,deployability,modul,module,3011,"./include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3018,deployability,modul,modulemap,3018,"/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3030,deployability,modul,modulemap,3030,"t/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3058,deployability,version,version,3058,"r/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3163,deployability,modul,modulemap,3163,"ot/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3237,deployability,modul,modulemap,3237," /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3414,deployability,modul,modulemap,3414,"ibc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3487,deployability,modul,modulemap,3487,"2/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3586,deployability,modul,module,3586,"xist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3593,deployability,modul,modulemap,3593,"nting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3665,deployability,modul,modulemap,3665,"usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3776,deployability,modul,modulemap,3776,"map' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3851,deployability,modul,modulemap,3851,"include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:5444,deployability,Modul,Module,5444,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1193,energy efficiency,model,model,1193,"t/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1850,energy efficiency,GPU,GPU,1850,"oot/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4412,energy efficiency,GPU,GPU,4412,"modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:344,integrability,version,version,344,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1136,integrability,version,version,1136,"exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3058,integrability,version,version,3058,"r/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1924,interoperability,plug,plugins,1924,"cc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4486,interoperability,plug,plugins,4486,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,modifiability,modul,module,113,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,modifiability,modul,modulemap,120,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:178,modifiability,modul,modulemap,178,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:209,modifiability,modul,module,209,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:216,modifiability,modul,modulemap,216,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:258,modifiability,modul,module,258,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:265,modifiability,modul,modulemap,265,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:344,modifiability,version,version,344,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1136,modifiability,version,version,1136,"exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2356,modifiability,modul,module,2356,"date multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2363,modifiability,modul,modulemap,2363,"ilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2423,modifiability,modul,modulemap,2423,": .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2451,modifiability,modul,module,2451,"tent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2458,modifiability,modul,modulemap,2458,"ctory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents':",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2561,modifiability,modul,module,2561,"nt directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2568,modifiability,modul,modulemap,2568,"ory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2627,modifiability,modul,modulemap,2627,"de"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2732,modifiability,modul,module,2732," search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'dire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2739,modifiability,modul,modulemap,2739,"tarts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2768,modifiability,modul,module,2768,"e/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2775,modifiability,modul,modulemap,2775,"pt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2833,modifiability,modul,modulemap,2833,"/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2864,modifiability,modul,module,2864,"ude. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2871,modifiability,modul,modulemap,2871,"/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2906,modifiability,modul,module,2906,"/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2913,modifiability,modul,modulemap,2913,"cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2974,modifiability,modul,modulemap,2974,"c/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3011,modifiability,modul,module,3011,"./include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3018,modifiability,modul,modulemap,3018,"/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3030,modifiability,modul,modulemap,3030,"t/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3058,modifiability,version,version,3058,"r/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3163,modifiability,modul,modulemap,3163,"ot/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3237,modifiability,modul,modulemap,3237," /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3414,modifiability,modul,modulemap,3414,"ibc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3487,modifiability,modul,modulemap,3487,"2/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3586,modifiability,modul,module,3586,"xist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3593,modifiability,modul,modulemap,3593,"nting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3665,modifiability,modul,modulemap,3665,"usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3776,modifiability,modul,modulemap,3776,"map' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3851,modifiability,modul,modulemap,3851,"include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:5444,modifiability,Modul,Module,5444,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1850,performance,GPU,GPU,1850,"oot/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3133,performance,content,contents,3133,"inux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent director",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3202,performance,content,contents,3202,"../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignorin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3385,performance,content,contents,3385," Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3453,performance,content,contents,3453,".modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/et",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3561,performance,content,contents,3561,"le.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3632,performance,content,contents,3632,"' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3745,performance,content,contents,3745,". '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3815,performance,content,contents,3815,"/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4412,performance,GPU,GPU,4412,"modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:131,reliability,doe,does,131,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2374,reliability,doe,does,2374,"@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'direc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2579,reliability,doe,does,2579,"clude"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2786,reliability,doe,does,2786,"clude/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2924,reliability,doe,does,2924,"ugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:20,safety,reme,remember,20,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:113,safety,modul,module,113,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:120,safety,modul,modulemap,120,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:178,safety,modul,modulemap,178,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:209,safety,modul,module,209,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:216,safety,modul,modulemap,216,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:258,safety,modul,module,258,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:265,safety,modul,modulemap,265,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2356,safety,modul,module,2356,"date multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2363,safety,modul,modulemap,2363,"ilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2423,safety,modul,modulemap,2423,": .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2451,safety,modul,module,2451,"tent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2458,safety,modul,modulemap,2458,"ctory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents':",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2561,safety,modul,module,2561,"nt directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2568,safety,modul,modulemap,2568,"ory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2627,safety,modul,modulemap,2627,"de"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2732,safety,modul,module,2732," search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'dire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2739,safety,modul,modulemap,2739,"tarts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2768,safety,modul,module,2768,"e/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2775,safety,modul,modulemap,2775,"pt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2833,safety,modul,modulemap,2833,"/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2864,safety,modul,module,2864,"ude. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2871,safety,modul,modulemap,2871,"/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2906,safety,modul,module,2906,"/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2913,safety,modul,modulemap,2913,"cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2974,safety,modul,modulemap,2974,"c/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3011,safety,modul,module,3011,"./include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3018,safety,modul,modulemap,3018,"/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3030,safety,modul,modulemap,3030,"t/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3163,safety,modul,modulemap,3163,"ot/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3237,safety,modul,modulemap,3237," /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3414,safety,modul,modulemap,3414,"ibc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3487,safety,modul,modulemap,3487,"2/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3586,safety,modul,module,3586,"xist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3593,safety,modul,modulemap,3593,"nting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3665,safety,modul,modulemap,3665,"usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3776,safety,modul,modulemap,3776,"map' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3851,safety,modul,modulemap,3851,"include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:5444,safety,Modul,Module,5444,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1193,security,model,model,1193,"t/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:531,usability,tool,toolset-,531,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:621,usability,tool,toolset-,621,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:731,usability,tool,toolset-,731,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:840,usability,tool,toolset-,840,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:931,usability,tool,toolset-,931,"Nice option, I must remember that ! The long output is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1042,usability,tool,toolset-,1042,"utput is below, but let me highlight this :. ```. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. ```. I swear `/opt/o2/include/module.modulemap` exists ! long output: . ```. [root@ansible-ci-cs8-6 ~]# root. cling version ROOT_1.0~dev. Looking for C++ headers with:. LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Looking for C++ headers in ""/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux:/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward"". Found:. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1953,usability,tool,toolset-,1953,"c/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2044,usability,tool,toolset-,2044,"t-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. clang version 13.0.0. Target: x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2155,usability,tool,toolset-,2155," x86_64-unknown-linux-gnu. Thread model: posix. InstalledDir: . Found candidate GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Selected GCC installation: /../lib/gcc/x86_64-redhat-linux/8. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2483,usability,tool,toolset-,2483,"4-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:2654,usability,tool,toolset-,2654,"rectory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3282,usability,tool,toolset-,3282,". /usr/local/include. /usr/include. End of search list. '/usr/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'. '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/std.modulemap' as '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/module.modulemap'. '/opt/o2/include/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/vc.modulemap' as '/opt/o2/include/module.modulemap'. '/opt/o2/include/boost/module.modulemap' does not exist. Mounting '/opt/o2/etc/cling/boost.modulemap' as '/opt/o2/include/boost/module.modulemap'. modulemap.overlay.yaml. {. 'version': 0,. 'roots': [. { 'name': '/usr/include', 'type': 'directory',. 'contents': [. { 'name': 'libc.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/libc.modulemap'. }. ]. },. { 'name': '/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12', 'type': 'directory',. 'contents': [. { 'name': 'std.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4515,usability,tool,toolset-,4515,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4606,usability,tool,toolset-,4606,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:4717,usability,tool,toolset-,4717,"std.modulemap'. }. ]. },. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ]. },. { 'name': '/opt/o2/include/boost', 'type': 'directory',. 'contents': [. { 'name': 'boost.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/boost.modulemap'. }. ]. }]. }. ]. }. Adding runtime include paths:. """". Added include paths:. Added include paths:. Setting up system headers with clang:. ignoring nonexistent directory ""/../lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/include"". ignoring nonexistent directory ""/include"". ignoring duplicate directory ""/opt/o2/include"". ignoring duplicate directory ""/opt/o2/include"". #include ""..."" search starts here:. #include <...> search starts here:. /opt/o2/include/vmc. /opt/o2/include/QualityControl. /opt/o2/include/fairmq. /opt/o2/include/GPU. /opt/o2/include. /opt/o2/etc. /opt/o2/etc//cling. /opt/o2/etc//cling/plugins/include. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/x86_64-redhat-linux. /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/backward. /opt/o2/etc//cling/lib/clang/13.0.0/include. /usr/local/include. /usr/include. End of search list. #include <cling/Interpreter/RuntimeUniverse.h>. namespace cling { class Interpreter; namespace runtime { Interpreter* gCling=(Interpreter*)0x23f75e0;. RuntimeOptions* gClingOpts=(RuntimeOptions*)0x23f7760;}}. extern ""C"" int __cxa_atexit(void (*f)(void*), void*, void*) noexcept;. #define __dso_handle ((void*)0x23f75e0). extern ""C"" int atexit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. extern ""C++"" int at_quick_exit(void(*f)()) throw () { return __cxa_atexit((void(*)(void*))f, 0, __dso_handle); }. Module ROOT_Foundation_C not found. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:55,deployability,modul,modulemap,55,What are the permissions of the existing but not found modulemap?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:55,modifiability,modul,modulemap,55,What are the permissions of the existing but not found modulemap?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:13,safety,permiss,permissions,13,What are the permissions of the existing but not found modulemap?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:55,safety,modul,modulemap,55,What are the permissions of the existing but not found modulemap?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:57,deployability,modul,modulemap,57,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:128,deployability,modul,module,128,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:135,deployability,modul,modulemap,135,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:57,modifiability,modul,modulemap,57,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:128,modifiability,modul,module,128,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:135,modifiability,modul,modulemap,135,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:175,reliability,doe,does,175,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:15,safety,permiss,permissions,15,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:57,safety,modul,modulemap,57,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:128,safety,modul,module,128,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:135,safety,modul,modulemap,135,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:267,testability,understand,understand,267,"> What are the permissions of the existing but not found modulemap? `-rw-r--r--. 1 root root 168987 Jun 6 10:17 /opt/o2/include/module.modulemap`. I tried to chmod 777 and it does not change anything. . > Would anything change if you disable Vc? Vc ? sorry , I don't understand. @ktf ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:126,deployability,modul,modulemap,126,I think he is implying there is something wrong with the Vc support in root. I guess we could try moving /opt/o2/etc/cling/vc.modulemap out of the way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:126,modifiability,modul,modulemap,126,I think he is implying there is something wrong with the Vc support in root. I guess we could try moving /opt/o2/etc/cling/vc.modulemap out of the way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:126,safety,modul,modulemap,126,I think he is implying there is something wrong with the Vc support in root. I guess we could try moving /opt/o2/etc/cling/vc.modulemap out of the way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:60,usability,support,support,60,I think he is implying there is something wrong with the Vc support in root. I guess we could try moving /opt/o2/etc/cling/vc.modulemap out of the way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:26,deployability,instal,installed,26,"Yes, are you using system installed Vc? If so, maybe use -Dbuiltin_vc=On.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:54,deployability,build,build,54,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,deployability,depend,depend,75,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,integrability,depend,depend,75,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,modifiability,depend,depend,75,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,safety,depend,depend,75,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,testability,depend,depend,75,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:51,deployability,modul,modulemap,51,"Hi, . I have tried removing ` /opt/o2/etc/cling/vc.modulemap` and it works. . Giulio, I have tried with your PR that makes ROOT use our VC and it does not work. . Cheers,.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:51,modifiability,modul,modulemap,51,"Hi, . I have tried removing ` /opt/o2/etc/cling/vc.modulemap` and it works. . Giulio, I have tried with your PR that makes ROOT use our VC and it does not work. . Cheers,.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:146,reliability,doe,does,146,"Hi, . I have tried removing ` /opt/o2/etc/cling/vc.modulemap` and it works. . Giulio, I have tried with your PR that makes ROOT use our VC and it does not work. . Cheers,.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:51,safety,modul,modulemap,51,"Hi, . I have tried removing ` /opt/o2/etc/cling/vc.modulemap` and it works. . Giulio, I have tried with your PR that makes ROOT use our VC and it does not work. . Cheers,.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:42,deployability,log,logs,42,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,deployability,fail,fails,75,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:167,deployability,modul,module,167,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:174,deployability,modul,modulemap,174,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:246,deployability,modul,modulemap,246,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:451,deployability,modul,modulemap,451,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:564,deployability,modul,modulemap,564,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:167,modifiability,modul,module,167,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:174,modifiability,modul,modulemap,174,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:246,modifiability,modul,modulemap,246,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:314,modifiability,pac,packaging,314,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:451,modifiability,modul,modulemap,451,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:564,modifiability,modul,modulemap,564,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:142,performance,content,contents,142,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:213,performance,content,contents,213,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:423,performance,content,contents,423,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:490,performance,content,contents,490,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:75,reliability,fail,fails,75,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:42,safety,log,logs,42,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:167,safety,modul,module,167,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:174,safety,modul,modulemap,174,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:246,safety,modul,modulemap,246,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:451,safety,modul,modulemap,451,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:564,safety,modul,modulemap,564,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:42,security,log,logs,42,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:42,testability,log,logs,42,"Another thing I noticed is that the extra logs show this when I run and it fails : . ```. { 'name': '/opt/o2/include', 'type': 'directory',. 'contents': [. { 'name': 'module.modulemap', 'type': 'file',. 'external-contents': '/opt/o2/etc/cling/vc.modulemap'. }. ```. whereas it shows something different before the packaging : . ```. { 'name': '/home/alibuild/sw/slc8_x86-64/Vc/1.4.1-local7/include', 'type': 'directory',. 'contents': [. { 'name': 'vc.modulemap', 'type': 'file',. 'external-contents': '/data/sw/slc8_x86-64/ROOT/v6-30-01-alice5-local4/etc/cling/vc.modulemap'. }. ```. Could the name be the issue ? where it it coming from ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:81,integrability,pub,public,81,By the way I have a machine setup if you want to see by yourselves. Send me your public key in private if you want.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:128,deployability,upgrad,upgrade,128,"The change you mention did not help. . However, bumping to 6.32.00 ""fixed"" the issue. . I will see with @ktf if and when we can upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:128,modifiability,upgrad,upgrade,128,"The change you mention did not help. . However, bumping to 6.32.00 ""fixed"" the issue. . I will see with @ktf if and when we can upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:31,usability,help,help,31,"The change you mention did not help. . However, bumping to 6.32.00 ""fixed"" the issue. . I will see with @ktf if and when we can upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:56,deployability,build,build,56,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:77,deployability,depend,depend,77,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:157,deployability,instal,installs,157,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:201,deployability,instal,installed,201,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:77,integrability,depend,depend,77,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:77,modifiability,depend,depend,77,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:77,safety,depend,depend,77,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:77,testability,depend,depend,77,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue? I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3,deployability,upgrad,upgraded,3,We upgraded to v6-32-02 and the issue went away. I guess we can close this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:3,modifiability,upgrad,upgraded,3,We upgraded to v6-32-02 and the issue went away. I guess we can close this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:64,usability,close,close,64,We upgraded to v6-32-02 and the issue went away. I guess we can close this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15321:26,availability,error,error,26,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:77,deployability,log,log,77,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:351,deployability,build,build,351,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:501,deployability,fail,fails,501,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:118,modifiability,variab,variables,118,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:337,modifiability,variab,variables,337,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:478,modifiability,variab,variables,478,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:26,performance,error,error,26,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:501,reliability,fail,fails,501,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:26,safety,error,error,26,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:77,safety,log,log,77,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:77,security,log,log,77,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:77,testability,log,log,77,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:26,usability,error,error,26,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:. ```. set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. ```. Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445. I'm now trying with the same variables to see if it fails the same.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:441,deployability,Configurat,Configuration,441,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:455,deployability,Releas,Release,455,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:441,integrability,Configur,Configuration,441,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:425,interoperability,Platform,Platform,425,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:441,modifiability,Configur,Configuration,441,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:441,security,Configur,Configuration,441,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:33,usability,Visual,Visual,33,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:185,usability,Visual,Visual,185,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:222,usability,Tool,Tools,222,"So I tried with:. ```. cmake -G ""Visual Studio 17 2022"" -A x64 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64 & set _CL_= /Bcapture_repro C:\project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\project_logs\ROOT\link_repro_build. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```. And it worked...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:174,deployability,build,build,174,"Neil omitted an important bit of info - this involves a very recent change to MSVC's STL, https://github.com/microsoft/STL/pull/4591 . To reproduce it, you'll either have to build and consume our open-source STL, or wait for VS 2022 17.11 Preview 2 to ship (which will contain this commit). We changed the STL to say `static_assert(false)` instead of `static_assert(_Always_false<SomeType>)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:269,deployability,contain,contain,269,"Neil omitted an important bit of info - this involves a very recent change to MSVC's STL, https://github.com/microsoft/STL/pull/4591 . To reproduce it, you'll either have to build and consume our open-source STL, or wait for VS 2022 17.11 Preview 2 to ship (which will contain this commit). We changed the STL to say `static_assert(false)` instead of `static_assert(_Always_false<SomeType>)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:93,deployability,build,build,93,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:125,deployability,version,version,125,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:125,integrability,version,version,125,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:125,modifiability,version,version,125,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:56,reliability,doe,does,56,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:142,usability,Visual,Visual,142,"@StephanTLavavej OK, thanks for the info. But then what does that mean for ROOT? It will not build anymore with the upcoming version 17.11 of Visual Studio (again!!) ? What would be required to fix the issue on our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:143,availability,error,error,143,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:250,energy efficiency,Core,Core,250,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:143,performance,error,error,143,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:143,safety,error,error,143,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:117,usability,tool,tool,117,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:143,usability,error,error,143,"Correct. To fix this, implement [CWG-2518](https://cplusplus.github.io/CWG/issues/2518.html) in Cling (if that's the tool that's emitting this error), allowing `static_assert(false)` to work in templates. MSVC and Clang have already implemented this Core DR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:75,deployability,version,version,75,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:188,deployability,version,version,188,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:217,deployability,version,version,217,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:38,energy efficiency,Core,Core,38,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:178,energy efficiency,current,currently,178,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:75,integrability,version,version,75,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:188,integrability,version,version,188,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:217,integrability,version,version,217,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:75,modifiability,version,version,75,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:188,modifiability,version,version,188,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:217,modifiability,version,version,217,> Clang have already implemented this Core DR. Do you happen to know which version this appeared in? (Or better yet which Merge Request added it). Cling uses `Clang` underneath; currently version 16; Moving the Clang version used is a long process but backporting a narrow Merge Request might be possible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:274,availability,sli,slight,274,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:37,deployability,version,version,37,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:64,energy efficiency,current,currently,64,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:37,integrability,version,version,37,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:37,modifiability,version,version,37,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:274,reliability,sli,slight,274,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:126,usability,document,documents,126,"It shipped in Clang 17, which is the version that microsoft/STL currently requires. https://clang.llvm.org/cxx_dr_status.html documents this. I *believe* that https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f implemented it, but there's a slight chance there were followup commits that I'm unaware of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:43,availability,error,error,43,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:92,availability,error,error,92,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:49,integrability,messag,message,49,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:98,integrability,messag,messages,98,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:49,interoperability,messag,message,49,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:98,interoperability,messag,messages,98,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:43,performance,error,error,43,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:92,performance,error,error,92,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:43,safety,error,error,43,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:92,safety,error,error,92,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:43,usability,error,error,43,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:92,usability,error,error,92,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:41,availability,error,error,41,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:144,availability,error,errors,144,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:41,performance,error,error,41,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:144,performance,error,errors,144,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:41,safety,error,error,41,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:144,safety,error,errors,144,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:41,usability,error,error,41,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:144,usability,error,errors,144,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:163,availability,sli,slight,163,"> I _believe_ that [llvm/llvm-project@00e2098](https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f) implemented it, but there's a slight chance there were followup commits that I'm unaware of. Seems reasonable and applies cleanly to our LLVM 16 - I opened https://github.com/root-project/root/pull/15437 with the backport. I will wait for confirmation that this is all we need before syncing to our LLVM monorepo fork and eventually merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:455,integrability,event,eventually,455,"> I _believe_ that [llvm/llvm-project@00e2098](https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f) implemented it, but there's a slight chance there were followup commits that I'm unaware of. Seems reasonable and applies cleanly to our LLVM 16 - I opened https://github.com/root-project/root/pull/15437 with the backport. I will wait for confirmation that this is all we need before syncing to our LLVM monorepo fork and eventually merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:163,reliability,sli,slight,163,"> I _believe_ that [llvm/llvm-project@00e2098](https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f) implemented it, but there's a slight chance there were followup commits that I'm unaware of. Seems reasonable and applies cleanly to our LLVM 16 - I opened https://github.com/root-project/root/pull/15437 with the backport. I will wait for confirmation that this is all we need before syncing to our LLVM monorepo fork and eventually merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:372,usability,confirm,confirmation,372,"> I _believe_ that [llvm/llvm-project@00e2098](https://github.com/llvm/llvm-project/commit/00e2098bf49f0ed45b3b8c22894cd3ac9a530e0f) implemented it, but there's a slight chance there were followup commits that I'm unaware of. Seems reasonable and applies cleanly to our LLVM 16 - I opened https://github.com/root-project/root/pull/15437 with the backport. I will wait for confirmation that this is all we need before syncing to our LLVM monorepo fork and eventually merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:113,availability,avail,available,113,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:260,availability,avail,available,260,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:113,reliability,availab,available,113,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:260,reliability,availab,available,260,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:113,safety,avail,available,113,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:260,safety,avail,available,260,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:113,security,availab,available,113,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:260,security,availab,available,260,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:39,usability,help,help,39,"@StephanTLavavej Thanks a lot for your help! Unfortunately, I can only try with VS 17.10 preview 6 (the only one available for now), and hence cannot try to reproduce the issue and see if the PR properly fixes it. I will try again as soon as v17.11 preview is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15336:158,deployability,build,building,158,@SyahmieS it is maybe related to https://github.com/root-project/root/issues/15321 and https://github.com/root-project/root/issues/9445. I'm pretty sure that building ROOT without the following environment variables will work:. ```. & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. ``` .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:206,modifiability,variab,variables,206,@SyahmieS it is maybe related to https://github.com/root-project/root/issues/15321 and https://github.com/root-project/root/issues/9445. I'm pretty sure that building ROOT without the following environment variables will work:. ```. & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. ``` .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:524,deployability,Configurat,Configuration,524,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:538,deployability,Releas,Release,538,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:524,integrability,Configur,Configuration,524,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:506,interoperability,Platform,Platform,506,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:524,modifiability,Configur,Configuration,524,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:524,security,Configur,Configuration,524,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:62,usability,command,commands,62,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:139,usability,Visual,Visual,139,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:176,usability,Tool,Tools,176,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:399,usability,Visual,Visual,399,"I just tried with ROOT master and it works with the following commands:. ```. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build. cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:119,usability,statu,status,119,"In absence of an answer and the ability to reproduce, I am closing. Please feel free to re-open if I misunderstand the status of this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1377,availability,error,error,1377,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1572,availability,error,error,1572,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1738,availability,error,error,1738,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1898,availability,error,error,1898,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:2102,availability,error,error,2102,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:67,deployability,build,build,67,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:92,deployability,Releas,Release,92,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:185,deployability,version,version,185,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:350,deployability,Fail,Failing,350,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:745,deployability,build,build,745,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1133,deployability,updat,updated,1133," However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:764,energy efficiency,core,core,764,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:887,energy efficiency,core,core,887,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:185,integrability,version,version,185,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1226,interoperability,specif,specific,1226,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:185,modifiability,version,version,185,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1377,performance,error,error,1377,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1572,performance,error,error,1572,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1738,performance,error,error,1738,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1898,performance,error,error,1898,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:2102,performance,error,error,2102,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:350,reliability,Fail,Failing,350,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:163,safety,test,testing,163,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1133,safety,updat,updated,1133," However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1377,safety,error,error,1377,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1572,safety,error,error,1572,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1738,safety,error,error,1738,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1898,safety,error,error,1898,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:2102,safety,error,error,2102,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:333,security,team,team,333,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1133,security,updat,updated,1133," However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:163,testability,test,testing,163,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1377,usability,error,error,1377,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1572,usability,error,error,1572,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1738,usability,error,error,1738,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1898,usability,error,error,1898,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:2102,usability,error,error,2102,"wever, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):. ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**. Creating library .\libCling.lib and object .\libCling.exp. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z). libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z). libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z). .\libCling.dll : fatal error LNK1120: 4 unresolved externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:27,deployability,version,version,27,Can you tell us what exact version of Visual Studio you are using? I tried ROOT master with the v17.11.0-pre.1.1 without problem. I will not be able to fix the issue until I can reproduce it... And the correct `MSVC_VERSION` will be needed too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:27,integrability,version,version,27,Can you tell us what exact version of Visual Studio you are using? I tried ROOT master with the v17.11.0-pre.1.1 without problem. I will not be able to fix the issue until I can reproduce it... And the correct `MSVC_VERSION` will be needed too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:27,modifiability,version,version,27,Can you tell us what exact version of Visual Studio you are using? I tried ROOT master with the v17.11.0-pre.1.1 without problem. I will not be able to fix the issue until I can reproduce it... And the correct `MSVC_VERSION` will be needed too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:38,usability,Visual,Visual,38,Can you tell us what exact version of Visual Studio you are using? I tried ROOT master with the v17.11.0-pre.1.1 without problem. I will not be able to fix the issue until I can reproduce it... And the correct `MSVC_VERSION` will be needed too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:52,deployability,version,version,52,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:154,deployability,version,version,154,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:181,deployability,releas,release,181,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:218,deployability,version,version,218,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:306,deployability,Version,Version,306,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:286,energy efficiency,Optim,Optimizing,286,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:52,integrability,version,version,52,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:154,integrability,version,version,154,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:218,integrability,version,version,218,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:306,integrability,Version,Version,306,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:52,modifiability,version,version,52,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:154,modifiability,version,version,154,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:218,modifiability,version,version,218,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:306,modifiability,Version,Version,306,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:286,performance,Optimiz,Optimizing,286,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:107,safety,test,test,107,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:107,testability,test,test,107,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64. Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:102,availability,avail,available,102,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:132,availability,ping,ping,132,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:151,availability,avail,available,151,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:204,deployability,releas,release,204,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:197,integrability,pub,public,197,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:49,performance,time,time,49,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:102,reliability,availab,available,102,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:151,reliability,availab,available,151,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:102,safety,avail,available,102,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:116,safety,test,testing,116,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:151,safety,avail,available,151,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:102,security,availab,available,102,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:151,security,availab,available,151,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:116,testability,test,testing,116,"@spacelg then there is nothing we can do for the time being. We'll have to wait until the compiler is available for testing. Please ping us when it is available, so we can fix the issue before the public release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:47,deployability,updat,updated,47,@spacelg Let me try something... I'll keep you updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:47,safety,updat,updated,47,@spacelg Let me try something... I'll keep you updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:47,security,updat,updated,47,@spacelg Let me try something... I'll keep you updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:109,energy efficiency,core,core,109,"So you can try to filer out the symbols using the CMake variable `CMAKE_CXX_COMPILER_VERSION`. For example (`core/metacling/src/CMakeLists.txt`, lines 196-208):. ```. if(MSVC_VERSION GREATER_EQUAL 1938 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS ""19.41.34007.96""). set(cling_exports ${cling_exports}. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. ___std_find_trivial_1@12. ___std_find_trivial_2@12. ___std_find_trivial_4@12. ___std_find_trivial_8@16. ). endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:56,modifiability,variab,variable,56,"So you can try to filer out the symbols using the CMake variable `CMAKE_CXX_COMPILER_VERSION`. For example (`core/metacling/src/CMakeLists.txt`, lines 196-208):. ```. if(MSVC_VERSION GREATER_EQUAL 1938 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS ""19.41.34007.96""). set(cling_exports ${cling_exports}. ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z. ??$__std_find_trivial@DD@@YAPADPAD0D@Z. ??$__std_find_trivial@HH@@YAPAHPAH0H@Z. ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. ___std_find_trivial_1@12. ___std_find_trivial_2@12. ___std_find_trivial_4@12. ___std_find_trivial_8@16. ). endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:74,safety,test,testing,74,"Hi @bellenot , thank you very much for the workaround you provided, after testing, it works for us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:74,testability,test,testing,74,"Hi @bellenot , thank you very much for the workaround you provided, after testing, it works for us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:40,usability,feedback,feedback,40,You're very welcome! And thanks for the feedback!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15340:33,energy efficiency,load,load,33,"Yes, it is warning about library load. . PR #15345 should fix problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:33,performance,load,load,33,"Yes, it is warning about library load. . PR #15345 should fix problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/pull/15346:47,usability,help,help,47,"While this is a good change to make, it didn't help solving the problem on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15346
https://github.com/root-project/root/issues/15348:153,energy efficiency,Draw,Draw,153,"I do not see that with master on my Intel IMac running MacOS 12.7.4. ```. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] . ```. Neither with New or Old graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/pull/15352:87,deployability,releas,release,87,"It is collection of JSROOT bugfixes since mid March. . It is not necessary for the pre-release of 6.32, but would be nice to have in 6.32.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:17,deployability,patch,patch,17,"ah ok, so it's a patch release of JSROOT. Then it fits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:23,deployability,releas,release,23,"ah ok, so it's a patch release of JSROOT. Then it fits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:17,safety,patch,patch,17,"ah ok, so it's a patch release of JSROOT. Then it fits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:17,security,patch,patch,17,"ah ok, so it's a patch release of JSROOT. Then it fits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/issues/15353:6,performance,time,time,6,"It is time glitch between web canvas and normal canvas. . Web canvas requires some time to be started - and during this time one get histogram fill to the end. If one do `c1.SaveAs(""c1.png"")` and `c2.SaveAs(""c2.png"")` one get expected values.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:83,performance,time,time,83,"It is time glitch between web canvas and normal canvas. . Web canvas requires some time to be started - and during this time one get histogram fill to the end. If one do `c1.SaveAs(""c1.png"")` and `c2.SaveAs(""c2.png"")` one get expected values.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:120,performance,time,time,120,"It is time glitch between web canvas and normal canvas. . Web canvas requires some time to be started - and during this time one get histogram fill to the end. If one do `c1.SaveAs(""c1.png"")` and `c2.SaveAs(""c2.png"")` one get expected values.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:124,energy efficiency,draw,drawn,124,"Thanks. Nevertheless the problem is there also if commands are run interactively, waiting seconds after the first canvas is drawn.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:50,usability,command,commands,50,"Thanks. Nevertheless the problem is there also if commands are run interactively, waiting seconds after the first canvas is drawn.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:67,usability,interact,interactively,67,"Thanks. Nevertheless the problem is there also if commands are run interactively, waiting seconds after the first canvas is drawn.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:177,deployability,updat,updated,177,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:378,deployability,Updat,Update,378,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:366,energy efficiency,Draw,Draw,366,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:488,energy efficiency,Draw,Draw,488,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:205,performance,content,content,205,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:177,safety,updat,updated,177,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:378,safety,Updat,Update,378,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:24,security,Modif,Modified,24,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:117,security,modif,modified,117,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:177,security,updat,updated,177,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:378,security,Updat,Update,378,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:256,usability,behavi,behavior,256,"Problem is extra `gPad->Modified()` call when new TCanvas is created. . In the macro it marks first canvas always as modified. And at the end of macro execution both canvas are updated to latest histogram content. I create PR #15518 which fixes such bogus behavior. After PR merged one can do:. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. c1.Update(); // ensures histogram displayed as exists at this point. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:93,security,ident,identical,93,I do not understand what is going on. Both code snippets with the tip of the master show two identical histograms with 15k entries. The changes had no effect in either case it seems.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:9,testability,understand,understand,9,I do not understand what is going on. Both code snippets with the tip of the master show two identical histograms with 15k entries. The changes had no effect in either case it seems.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:66,usability,tip,tip,66,I do not understand what is going on. Both code snippets with the tip of the master show two identical histograms with 15k entries. The changes had no effect in either case it seems.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:5,energy efficiency,current,current,5,With current master both canvases show 15000 entries for histogram. Looks like after recent changes in ROOT canvases are modified at the end of macro execution. Same behavior seen in master and 6.32 branch in normal and web graphics,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:121,security,modif,modified,121,With current master both canvases show 15000 entries for histogram. Looks like after recent changes in ROOT canvases are modified at the end of macro execution. Same behavior seen in master and 6.32 branch in normal and web graphics,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:166,usability,behavi,behavior,166,With current master both canvases show 15000 entries for histogram. Looks like after recent changes in ROOT canvases are modified at the end of macro execution. Same behavior seen in master and 6.32 branch in normal and web graphics,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/pull/15354:78,deployability,version,versions,78,"For future reference, sized deallocation will be enabled by default in future versions of Clang: https://github.com/llvm/llvm-project/commit/130e93cc26ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15354
https://github.com/root-project/root/pull/15354:78,integrability,version,versions,78,"For future reference, sized deallocation will be enabled by default in future versions of Clang: https://github.com/llvm/llvm-project/commit/130e93cc26ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15354
https://github.com/root-project/root/pull/15354:78,modifiability,version,versions,78,"For future reference, sized deallocation will be enabled by default in future versions of Clang: https://github.com/llvm/llvm-project/commit/130e93cc26ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15354
https://github.com/root-project/root/pull/15355:33,deployability,version,version,33,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:79,deployability,updat,update,79,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:33,integrability,version,version,33,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:33,modifiability,version,version,33,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:79,safety,updat,update,79,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:79,security,updat,update,79,"> Globally assume at least GTest version .. . Instead of assuming, can we also update `CMake` to require `gtest 1.10+`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:171,availability,avail,available,171,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:35,deployability,version,version,35,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:85,deployability,updat,update,85,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:156,deployability,version,version,156,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:223,deployability,modul,modules,223,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:272,deployability,version,version,272,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:388,deployability,configurat,configuration,388,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:35,integrability,version,version,35,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:156,integrability,version,version,156,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:272,integrability,version,version,272,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:388,integrability,configur,configuration,388,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:35,modifiability,version,version,35,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:156,modifiability,version,version,156,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:223,modifiability,modul,modules,223,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:272,modifiability,version,version,272,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:388,modifiability,configur,configuration,388,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:171,reliability,availab,available,171,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:289,reliability,doe,does,289,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:85,safety,updat,update,85,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:171,safety,avail,available,171,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:223,safety,modul,modules,223,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:85,security,updat,update,85,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:171,security,availab,available,171,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:388,security,configur,configuration,388,"> > Globally assume at least GTest version .. > . > Instead of assuming, can we also update `CMake` to require `gtest 1.10+`? Unfortunately not because the version is not available to CMake :disappointed: ie our own `cmake/modules/FindGTest.cmake` will not even check the version, neither does CMake's own `FindGTest.cmake`. It seems potentially possible when using GoogleTests own CMake configuration, but I haven't succeeded doing so...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:279,deployability,Version,Version,279,Apparently you can use (when not using the built-in):. ```. $ pkg-config gtest --modversion. 1.9.0. $ cat /usr/local/lib/pkgconfig/gtest.pc (or somewhere else). libdir=/usr/local/lib. includedir=/usr/local/include. Name: gtest. Description: GoogleTest (without main() function). Version: 1.9.0. URL: https://github.com/google/googletest. Libs: -L${libdir} -lgtest -pthread. Cflags: -I${includedir} -DGTEST_HAS_PTHREAD=1 -pthread. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:279,integrability,Version,Version,279,Apparently you can use (when not using the built-in):. ```. $ pkg-config gtest --modversion. 1.9.0. $ cat /usr/local/lib/pkgconfig/gtest.pc (or somewhere else). libdir=/usr/local/lib. includedir=/usr/local/include. Name: gtest. Description: GoogleTest (without main() function). Version: 1.9.0. URL: https://github.com/google/googletest. Libs: -L${libdir} -lgtest -pthread. Cflags: -I${includedir} -DGTEST_HAS_PTHREAD=1 -pthread. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:279,modifiability,Version,Version,279,Apparently you can use (when not using the built-in):. ```. $ pkg-config gtest --modversion. 1.9.0. $ cat /usr/local/lib/pkgconfig/gtest.pc (or somewhere else). libdir=/usr/local/lib. includedir=/usr/local/include. Name: gtest. Description: GoogleTest (without main() function). Version: 1.9.0. URL: https://github.com/google/googletest. Libs: -L${libdir} -lgtest -pthread. Cflags: -I${includedir} -DGTEST_HAS_PTHREAD=1 -pthread. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:197,deployability,depend,dependencies,197,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:444,deployability,depend,depend,444,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:197,integrability,depend,dependencies,197,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:444,integrability,depend,depend,444,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:165,interoperability,standard,standard,165,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:375,interoperability,compatib,compatibility,375,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:197,modifiability,depend,dependencies,197,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:444,modifiability,depend,depend,444,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:182,safety,detect,detecting,182,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:197,safety,depend,dependencies,197,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:300,safety,compl,complicated,300,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:444,safety,depend,depend,444,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:182,security,detect,detecting,182,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:300,security,compl,complicated,300,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:197,testability,depend,dependencies,197,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:397,testability,simpl,simply,397,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:444,testability,depend,depend,444,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:118,usability,person,personally,118,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:264,usability,prefer,prefer,264,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:397,usability,simpl,simply,397,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15357:85,usability,command,commands,85,"> If one runs the webgraphics on windows, what would happen with these changes? This commands used only for Linux and Mac, for Windows invocation command is different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15357
https://github.com/root-project/root/pull/15357:146,usability,command,command,146,"> If one runs the webgraphics on windows, what would happen with these changes? This commands used only for Linux and Mac, for Windows invocation command is different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15357
https://github.com/root-project/root/pull/15368:124,energy efficiency,current,current,124,Not a proper solution. What we ideally want to do is check if a `VarDecl` with the same identifier is already added for the current `ControlScope`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:88,security,ident,identifier,88,Not a proper solution. What we ideally want to do is check if a `VarDecl` with the same identifier is already added for the current `ControlScope`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:133,security,Control,ControlScope,133,Not a proper solution. What we ideally want to do is check if a `VarDecl` with the same identifier is already added for the current `ControlScope`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:133,testability,Control,ControlScope,133,Not a proper solution. What we ideally want to do is check if a `VarDecl` with the same identifier is already added for the current `ControlScope`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:56,integrability,sub,subdirectory,56,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:15,safety,test,test,15,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:15,testability,test,test,15,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:87,testability,simpl,simple,87,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:87,usability,simpl,simple,87,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:51,energy efficiency,core,core,51,Maybe we can do a death test in the test folder of core/metacling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:24,safety,test,test,24,Maybe we can do a death test in the test folder of core/metacling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:36,safety,test,test,36,Maybe we can do a death test in the test folder of core/metacling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:24,testability,test,test,24,Maybe we can do a death test in the test folder of core/metacling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:36,testability,test,test,36,Maybe we can do a death test in the test folder of core/metacling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:10,safety,test,test,10,rebased & test added,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:10,testability,test,test,10,rebased & test added,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:118,deployability,depend,dependent,118,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:118,integrability,depend,dependent,118,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:109,interoperability,platform,platform,109,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:118,modifiability,depend,dependent,118,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:14,safety,test,test,14,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:40,safety,test,testing,40,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:118,safety,depend,dependent,118,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:14,testability,test,test,14,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:40,testability,test,testing,40,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:118,testability,depend,dependent,118,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:38,usability,support,support,38,"As a note, once we remove `auto auto` support in: https://github.com/root-project/root/pull/16410, this will no longer be needed and will need to be reverted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:82,deployability,fail,fails,82,"> Can it be that this fix fixes also #15537 ? That's what I see, I think... Still fails for me. It seems important to put `badcast` into a macro...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:82,reliability,fail,fails,82,"> Can it be that this fix fixes also #15537 ? That's what I see, I think... Still fails for me. It seems important to put `badcast` into a macro...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15371:351,availability,consist,consistent,351,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:64,deployability,releas,release,64,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:431,safety,review,review,431,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:431,testability,review,review,431,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:107,usability,document,documentation,107,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:351,usability,consist,consistent,351,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:494,usability,tip,tip,494,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:84,energy efficiency,current,current,84,Hello @PPaye! Can you please resolve the conflicts by rebasing your commit onto the current ROOT `master`? Otherwise we can't proceed here. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:41,interoperability,conflict,conflicts,41,Hello @PPaye! Can you please resolve the conflicts by rebasing your commit onto the current ROOT `master`? Otherwise we can't proceed here. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15372:32,availability,failur,failures,32,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:32,deployability,fail,failures,32,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
